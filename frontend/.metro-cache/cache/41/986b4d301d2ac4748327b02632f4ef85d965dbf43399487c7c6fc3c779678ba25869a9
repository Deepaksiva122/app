{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@react-navigation/elements","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":92,"index":107}}],"key":"LmqW7jh+SpCzQZMkzh+Awcuawt0=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":108},"end":{"line":4,"column":31,"index":139}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Animated","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dNPzxVfn0yBoRxvhD+vE+lN7k4Q=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"]}},{"name":"../../TransitionConfigs/CardStyleInterpolators.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":209},"end":{"line":6,"column":130,"index":339}}],"key":"WQrnT432sHc0IAjfxvy+8kcpVqE=","exportNames":["*"]}},{"name":"../../TransitionConfigs/TransitionPresets.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":340},"end":{"line":7,"column":295,"index":635}}],"key":"qGPvdCHa12B7My1IcTBjt/ZjEN8=","exportNames":["*"]}},{"name":"../../utils/findLastIndex.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":636},"end":{"line":8,"column":61,"index":697}}],"key":"PsurlFEEk02i+2hKfT+H0LvqIFM=","exportNames":["*"]}},{"name":"../../utils/getDistanceForDirection.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":698},"end":{"line":9,"column":81,"index":779}}],"key":"Qhu6HWUnevuLnK0FD4YMv38jV6c=","exportNames":["*"]}},{"name":"../../utils/getModalRoutesKeys.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":780},"end":{"line":10,"column":70,"index":850}}],"key":"JnU1xJs101Gng0l1FTqwlJFPlho=","exportNames":["*"]}},{"name":"../Screens.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":851},"end":{"line":11,"column":66,"index":917}}],"key":"C/CQg4G4EMSw5ow404L5fcHq3N8=","exportNames":["*"]}},{"name":"./CardContainer.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":918},"end":{"line":12,"column":51,"index":969}}],"key":"dRNK4dXmIFRg8IMvnxRQLcKAgls=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":970},"end":{"line":13,"column":63,"index":1033}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.CardStack = void 0;\n  exports.getAnimationEnabled = getAnimationEnabled;\n  var _elements = require(_dependencyMap[1], \"@react-navigation/elements\");\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _Animated = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/Animated\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[4], \"react-native-web/dist/exports/Platform\"));\n  var _StyleSheet = _interopRequireDefault(require(_dependencyMap[5], \"react-native-web/dist/exports/StyleSheet\"));\n  var _View = _interopRequireDefault(require(_dependencyMap[6], \"react-native-web/dist/exports/View\"));\n  var _CardStyleInterpolators = require(_dependencyMap[7], \"../../TransitionConfigs/CardStyleInterpolators.js\");\n  var _TransitionPresets = require(_dependencyMap[8], \"../../TransitionConfigs/TransitionPresets.js\");\n  var _findLastIndex = require(_dependencyMap[9], \"../../utils/findLastIndex.js\");\n  var _getDistanceForDirection = require(_dependencyMap[10], \"../../utils/getDistanceForDirection.js\");\n  var _getModalRoutesKeys = require(_dependencyMap[11], \"../../utils/getModalRoutesKeys.js\");\n  var _Screens = require(_dependencyMap[12], \"../Screens.js\");\n  var _CardContainer = require(_dependencyMap[13], \"./CardContainer.js\");\n  var _jsxRuntime = require(_dependencyMap[14], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const NAMED_TRANSITIONS_PRESETS = {\n    default: _TransitionPresets.DefaultTransition,\n    fade: _TransitionPresets.ModalFadeTransition,\n    fade_from_bottom: _TransitionPresets.FadeFromBottomAndroid,\n    fade_from_right: _TransitionPresets.FadeFromRightAndroid,\n    none: _TransitionPresets.DefaultTransition,\n    reveal_from_bottom: _TransitionPresets.RevealFromBottomAndroid,\n    scale_from_center: _TransitionPresets.ScaleFromCenterAndroid,\n    slide_from_left: _TransitionPresets.SlideFromLeftIOS,\n    slide_from_right: _TransitionPresets.SlideFromRightIOS,\n    slide_from_bottom: _Platform.default.select({\n      ios: _TransitionPresets.ModalSlideFromBottomIOS,\n      default: _TransitionPresets.BottomSheetAndroid\n    })\n  };\n  const EPSILON = 1e-5;\n  const STATE_INACTIVE = 0;\n  const STATE_TRANSITIONING_OR_BELOW_TOP = 1;\n  const STATE_ON_TOP = 2;\n  const FALLBACK_DESCRIPTOR = Object.freeze({\n    options: {}\n  });\n  const getInterpolationIndex = (scenes, index) => {\n    const {\n      cardStyleInterpolator\n    } = scenes[index].descriptor.options;\n\n    // Start from current card and count backwards the number of cards with same interpolation\n    let interpolationIndex = 0;\n    for (let i = index - 1; i >= 0; i--) {\n      const cardStyleInterpolatorCurrent = scenes[i]?.descriptor.options.cardStyleInterpolator;\n      if (cardStyleInterpolatorCurrent !== cardStyleInterpolator) {\n        break;\n      }\n      interpolationIndex++;\n    }\n    return interpolationIndex;\n  };\n  const getIsModalPresentation = cardStyleInterpolator => {\n    return cardStyleInterpolator === _CardStyleInterpolators.forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS';\n  };\n  const getIsModal = (scene, interpolationIndex, isParentModal) => {\n    if (isParentModal) {\n      return true;\n    }\n    const {\n      cardStyleInterpolator\n    } = scene.descriptor.options;\n    const isModalPresentation = getIsModalPresentation(cardStyleInterpolator);\n    const isModal = isModalPresentation && interpolationIndex !== 0;\n    return isModal;\n  };\n  const getHeaderHeights = (scenes, insets, isParentHeaderShown, isParentModal, layout, previous) => {\n    return scenes.reduce((acc, curr, index) => {\n      const {\n        headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n        headerStyle\n      } = curr.descriptor.options;\n      const style = _StyleSheet.default.flatten(headerStyle || {});\n      const height = 'height' in style && typeof style.height === 'number' ? style.height : previous[curr.route.key];\n      const interpolationIndex = getInterpolationIndex(scenes, index);\n      const isModal = getIsModal(curr, interpolationIndex, isParentModal);\n      acc[curr.route.key] = typeof height === 'number' ? height : (0, _elements.getDefaultHeaderHeight)(layout, isModal, headerStatusBarHeight);\n      return acc;\n    }, {});\n  };\n  const getDistanceFromOptions = (layout, options, isRTL) => {\n    if (options?.gestureDirection) {\n      return (0, _getDistanceForDirection.getDistanceForDirection)(layout, options.gestureDirection, isRTL);\n    }\n    const defaultGestureDirection = options?.presentation === 'modal' ? _TransitionPresets.ModalTransition.gestureDirection : _TransitionPresets.DefaultTransition.gestureDirection;\n    const gestureDirection = options?.animation ? NAMED_TRANSITIONS_PRESETS[options?.animation]?.gestureDirection : defaultGestureDirection;\n    return (0, _getDistanceForDirection.getDistanceForDirection)(layout, gestureDirection, isRTL);\n  };\n  const getProgressFromGesture = (gesture, layout, options, isRTL) => {\n    const distance = getDistanceFromOptions({\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height)\n    }, options, isRTL);\n    if (distance > 0) {\n      return gesture.interpolate({\n        inputRange: [0, distance],\n        outputRange: [1, 0]\n      });\n    }\n    return gesture.interpolate({\n      inputRange: [distance, 0],\n      outputRange: [0, 1]\n    });\n  };\n  function getDefaultAnimation(animation) {\n    // Disable screen transition animation by default on web, windows and macos to match the native behavior\n    const excludedPlatforms = _Platform.default.OS !== 'web' && _Platform.default.OS !== 'windows' && _Platform.default.OS !== 'macos';\n    return animation ?? (excludedPlatforms ? 'default' : 'none');\n  }\n  function getAnimationEnabled(animation) {\n    return getDefaultAnimation(animation) !== 'none';\n  }\n  class CardStack extends React.Component {\n    static getDerivedStateFromProps(props, state) {\n      if (props.routes === state.routes && props.descriptors === state.descriptors) {\n        return null;\n      }\n      const gestures = [...props.routes, ...props.state.preloadedRoutes].reduce((acc, curr) => {\n        const descriptor = props.descriptors[curr.key] || props.preloadedDescriptors[curr.key];\n        const {\n          animation\n        } = descriptor?.options || {};\n        acc[curr.key] = state.gestures[curr.key] || new _Animated.default.Value(props.openingRouteKeys.includes(curr.key) && getAnimationEnabled(animation) || props.state.preloadedRoutes.includes(curr) ? getDistanceFromOptions(state.layout, descriptor?.options, props.direction === 'rtl') : 0);\n        return acc;\n      }, {});\n      const modalRouteKeys = (0, _getModalRoutesKeys.getModalRouteKeys)([...props.routes, ...props.state.preloadedRoutes], {\n        ...props.descriptors,\n        ...props.preloadedDescriptors\n      });\n      const scenes = [...props.routes, ...props.state.preloadedRoutes].map((route, index, self) => {\n        // For preloaded screens, we don't care about the previous and the next screen\n        const isPreloaded = props.state.preloadedRoutes.includes(route);\n        const previousRoute = isPreloaded ? undefined : self[index - 1];\n        const nextRoute = isPreloaded ? undefined : self[index + 1];\n        const oldScene = state.scenes[index];\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute ? gestures[previousRoute.key] : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n        const descriptor = (isPreloaded ? props.preloadedDescriptors : props.descriptors)[route.key] || state.descriptors[route.key] || (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n        const nextOptions = nextRoute && (props.descriptors[nextRoute?.key] || state.descriptors[nextRoute?.key])?.options;\n        const previousOptions = previousRoute && (props.descriptors[previousRoute?.key] || state.descriptors[previousRoute?.key])?.options;\n\n        // When a screen is not the last, it should use next screen's transition config\n        // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n        // For example combining a slide and a modal transition would look wrong otherwise\n        // With this approach, combining different transition styles in the same navigator mostly looks right\n        // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n        // but the majority of the transitions look alright\n        const optionsForTransitionConfig = index !== self.length - 1 && nextOptions && nextOptions?.presentation !== 'transparentModal' ? nextOptions : descriptor.options;\n\n        // Assume modal if there are already modal screens in the stack\n        // or current screen is a modal when no presentation is specified\n        const isModal = modalRouteKeys.includes(route.key);\n        const animation = getDefaultAnimation(optionsForTransitionConfig.animation);\n        const isAnimationEnabled = getAnimationEnabled(animation);\n        const transitionPreset = animation !== 'default' ? NAMED_TRANSITIONS_PRESETS[animation] : isModal || optionsForTransitionConfig.presentation === 'modal' ? _TransitionPresets.ModalTransition : optionsForTransitionConfig.presentation === 'transparentModal' ? _TransitionPresets.ModalFadeTransition : _TransitionPresets.DefaultTransition;\n        const {\n          gestureEnabled = _Platform.default.OS === 'ios' && isAnimationEnabled,\n          gestureDirection = transitionPreset.gestureDirection,\n          transitionSpec = transitionPreset.transitionSpec,\n          cardStyleInterpolator = isAnimationEnabled ? transitionPreset.cardStyleInterpolator : _CardStyleInterpolators.forNoAnimation,\n          headerStyleInterpolator = transitionPreset.headerStyleInterpolator,\n          cardOverlayEnabled = _Platform.default.OS !== 'ios' && optionsForTransitionConfig.presentation !== 'transparentModal' || getIsModalPresentation(cardStyleInterpolator)\n        } = optionsForTransitionConfig;\n        const headerMode = descriptor.options.headerMode ?? (!(optionsForTransitionConfig.presentation === 'modal' || optionsForTransitionConfig.presentation === 'transparentModal' || nextOptions?.presentation === 'modal' || nextOptions?.presentation === 'transparentModal' || getIsModalPresentation(cardStyleInterpolator)) && _Platform.default.OS === 'ios' && descriptor.options.header === undefined ? 'float' : 'screen');\n        const isRTL = props.direction === 'rtl';\n        const scene = {\n          route,\n          descriptor: {\n            ...descriptor,\n            options: {\n              ...descriptor.options,\n              animation,\n              cardOverlayEnabled,\n              cardStyleInterpolator,\n              gestureDirection,\n              gestureEnabled,\n              headerStyleInterpolator,\n              transitionSpec,\n              headerMode\n            }\n          },\n          progress: {\n            current: getProgressFromGesture(currentGesture, state.layout, descriptor.options, isRTL),\n            next: nextGesture && nextOptions?.presentation !== 'transparentModal' ? getProgressFromGesture(nextGesture, state.layout, nextOptions, isRTL) : undefined,\n            previous: previousGesture ? getProgressFromGesture(previousGesture, state.layout, previousOptions, isRTL) : undefined\n          },\n          __memo: [state.layout, descriptor, nextOptions, previousOptions, currentGesture, nextGesture, previousGesture]\n        };\n        if (oldScene && scene.__memo.every((it, i) => {\n          // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n          return oldScene.__memo[i] === it;\n        })) {\n          return oldScene;\n        }\n        return scene;\n      });\n      return {\n        routes: props.routes,\n        scenes,\n        gestures,\n        descriptors: props.descriptors,\n        headerHeights: getHeaderHeights(scenes, props.insets, props.isParentHeaderShown, props.isParentModal, state.layout, state.headerHeights)\n      };\n    }\n    constructor(props) {\n      super(props);\n      this.state = {\n        routes: [],\n        scenes: [],\n        gestures: {},\n        layout: _elements.SafeAreaProviderCompat.initialMetrics.frame,\n        descriptors: this.props.descriptors,\n        // Used when card's header is null and mode is float to make transition\n        // between screens with headers and those without headers smooth.\n        // This is not a great heuristic here. We don't know synchronously\n        // on mount what the header height is so we have just used the most\n        // common cases here.\n        headerHeights: {}\n      };\n    }\n    handleLayout = e => {\n      const {\n        height,\n        width\n      } = e.nativeEvent.layout;\n      const layout = {\n        width,\n        height\n      };\n      this.setState((state, props) => {\n        if (height === state.layout.height && width === state.layout.width) {\n          return null;\n        }\n        return {\n          layout,\n          headerHeights: getHeaderHeights(state.scenes, props.insets, props.isParentHeaderShown, props.isParentModal, layout, state.headerHeights)\n        };\n      });\n    };\n    handleHeaderLayout = ({\n      route,\n      height\n    }) => {\n      this.setState(({\n        headerHeights\n      }) => {\n        const previousHeight = headerHeights[route.key];\n        if (previousHeight === height) {\n          return null;\n        }\n        return {\n          headerHeights: {\n            ...headerHeights,\n            [route.key]: height\n          }\n        };\n      });\n    };\n    getFocusedRoute = () => {\n      const {\n        state\n      } = this.props;\n      return state.routes[state.index];\n    };\n    getPreviousScene = ({\n      route\n    }) => {\n      const {\n        getPreviousRoute\n      } = this.props;\n      const {\n        scenes\n      } = this.state;\n      const previousRoute = getPreviousRoute({\n        route\n      });\n      if (previousRoute) {\n        const previousScene = scenes.find(scene => scene.descriptor.route.key === previousRoute.key);\n        return previousScene;\n      }\n      return undefined;\n    };\n    render() {\n      const {\n        insets,\n        state,\n        routes,\n        openingRouteKeys,\n        closingRouteKeys,\n        onOpenRoute,\n        onCloseRoute,\n        renderHeader,\n        isParentHeaderShown,\n        isParentModal,\n        onTransitionStart,\n        onTransitionEnd,\n        onGestureStart,\n        onGestureEnd,\n        onGestureCancel,\n        detachInactiveScreens = _Platform.default.OS === 'web' || _Platform.default.OS === 'android' || _Platform.default.OS === 'ios'\n      } = this.props;\n      const {\n        scenes,\n        layout,\n        gestures,\n        headerHeights\n      } = this.state;\n      const focusedRoute = state.routes[state.index];\n      const focusedHeaderHeight = headerHeights[focusedRoute.key];\n      const isFloatHeaderAbsolute = this.state.scenes.slice(-2).some(scene => {\n        const options = scene.descriptor.options ?? {};\n        const {\n          headerMode,\n          headerTransparent,\n          headerShown = true\n        } = options;\n        if (headerTransparent || headerShown === false || headerMode === 'screen') {\n          return true;\n        }\n        return false;\n      });\n      let activeScreensLimit = 1;\n      for (let i = scenes.length - 1; i >= 0; i--) {\n        const {\n          options\n        } = scenes[i].descriptor;\n        const {\n          // By default, we don't want to detach the previous screen of the active one for modals\n          detachPreviousScreen = options.presentation === 'transparentModal' ? false : getIsModalPresentation(options.cardStyleInterpolator) ? i !== (0, _findLastIndex.findLastIndex)(scenes, scene => {\n            const {\n              cardStyleInterpolator\n            } = scene.descriptor.options;\n            return cardStyleInterpolator === _CardStyleInterpolators.forModalPresentationIOS || cardStyleInterpolator?.name === 'forModalPresentationIOS';\n          }) : true\n        } = options;\n        if (detachPreviousScreen === false) {\n          activeScreensLimit++;\n        } else {\n          // Check at least last 2 screens before stopping\n          // This will make sure that screen isn't detached when another screen is animating on top of the transparent one\n          // For example, (Opaque -> Transparent -> Opaque)\n          if (i <= scenes.length - 2) {\n            break;\n          }\n        }\n      }\n      const floatingHeader = /*#__PURE__*/(0, _jsxRuntime.jsx)(React.Fragment, {\n        children: renderHeader({\n          mode: 'float',\n          layout,\n          scenes,\n          getPreviousScene: this.getPreviousScene,\n          getFocusedRoute: this.getFocusedRoute,\n          onContentHeightChange: this.handleHeaderLayout,\n          style: [styles.floating, isFloatHeaderAbsolute && [\n          // Without this, the header buttons won't be touchable on Android when headerTransparent: true\n          {\n            height: focusedHeaderHeight\n          }, styles.absolute]]\n        })\n      }, \"header\");\n      return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_View.default, {\n        style: styles.container,\n        children: [isFloatHeaderAbsolute ? null : floatingHeader, /*#__PURE__*/(0, _jsxRuntime.jsx)(_Screens.MaybeScreenContainer, {\n          enabled: detachInactiveScreens,\n          style: styles.container,\n          onLayout: this.handleLayout,\n          children: [...routes, ...state.preloadedRoutes].map((route, index) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n            // It is possible that for a short period the route appears in both arrays.\n            // Particularly, if the screen is removed with `retain`, then it needs a moment to execute the animation.\n            // However, due to the router action, it immediately populates the `preloadedRoutes` array.\n            // Practically, the logic below takes care that it is rendered only once.\n            const isPreloaded = state.preloadedRoutes.includes(route) && !routes.includes(route);\n            if (state.preloadedRoutes.includes(route) && routes.includes(route) && index >= routes.length) {\n              return null;\n            }\n\n            // For the screens that shouldn't be active, the value is 0\n            // For those that should be active, but are not the top screen, the value is 1\n            // For those on top of the stack and with interaction enabled, the value is 2\n            // For the old implementation, it stays the same it was\n            let isScreenActive = 1;\n            if (index < routes.length - activeScreensLimit - 1 || isPreloaded) {\n              // screen should be inactive because it is too deep in the stack\n              isScreenActive = STATE_INACTIVE;\n            } else {\n              const sceneForActivity = scenes[routes.length - 1];\n              const outputValue = index === routes.length - 1 ? STATE_ON_TOP // the screen is on top after the transition\n              : index >= routes.length - activeScreensLimit ? STATE_TRANSITIONING_OR_BELOW_TOP // the screen should stay active after the transition, it is not on top but is in activeLimit\n              : STATE_INACTIVE; // the screen should be active only during the transition, it is at the edge of activeLimit\n              isScreenActive = sceneForActivity ? sceneForActivity.progress.current.interpolate({\n                inputRange: [0, 1 - EPSILON, 1],\n                outputRange: [1, 1, outputValue],\n                extrapolate: 'clamp'\n              }) : STATE_TRANSITIONING_OR_BELOW_TOP;\n            }\n            const {\n              headerShown = true,\n              headerTransparent,\n              freezeOnBlur,\n              autoHideHomeIndicator\n            } = scene.descriptor.options;\n            const safeAreaInsetTop = insets.top;\n            const safeAreaInsetRight = insets.right;\n            const safeAreaInsetBottom = insets.bottom;\n            const safeAreaInsetLeft = insets.left;\n            const headerHeight = headerShown !== false ? headerHeights[route.key] : 0;\n\n            // Start from current card and count backwards the number of cards with same interpolation\n            const interpolationIndex = getInterpolationIndex(scenes, index);\n            const isModal = getIsModal(scene, interpolationIndex, isParentModal);\n            const isNextScreenTransparent = scenes[index + 1]?.descriptor.options.presentation === 'transparentModal';\n            const detachCurrentScreen = scenes[index + 1]?.descriptor.options.detachPreviousScreen !== false;\n            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Screens.MaybeScreen, {\n              style: [_StyleSheet.default.absoluteFill],\n              enabled: detachInactiveScreens,\n              active: isScreenActive,\n              freezeOnBlur: freezeOnBlur,\n              shouldFreeze: isScreenActive === STATE_INACTIVE && !isPreloaded,\n              homeIndicatorHidden: autoHideHomeIndicator,\n              pointerEvents: \"box-none\",\n              children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_CardContainer.CardContainer, {\n                index: index,\n                interpolationIndex: interpolationIndex,\n                modal: isModal,\n                active: index === routes.length - 1,\n                focused: focused,\n                opening: openingRouteKeys.includes(route.key),\n                closing: closingRouteKeys.includes(route.key),\n                layout: layout,\n                gesture: gesture,\n                scene: scene,\n                safeAreaInsetTop: safeAreaInsetTop,\n                safeAreaInsetRight: safeAreaInsetRight,\n                safeAreaInsetBottom: safeAreaInsetBottom,\n                safeAreaInsetLeft: safeAreaInsetLeft,\n                onGestureStart: onGestureStart,\n                onGestureCancel: onGestureCancel,\n                onGestureEnd: onGestureEnd,\n                headerHeight: headerHeight,\n                isParentHeaderShown: isParentHeaderShown,\n                onHeaderHeightChange: this.handleHeaderLayout,\n                getPreviousScene: this.getPreviousScene,\n                getFocusedRoute: this.getFocusedRoute,\n                hasAbsoluteFloatHeader: isFloatHeaderAbsolute && !headerTransparent,\n                renderHeader: renderHeader,\n                onOpenRoute: onOpenRoute,\n                onCloseRoute: onCloseRoute,\n                onTransitionStart: onTransitionStart,\n                onTransitionEnd: onTransitionEnd,\n                isNextScreenTransparent: isNextScreenTransparent,\n                detachCurrentScreen: detachCurrentScreen,\n                preloaded: isPreloaded\n              })\n            }, route.key);\n          })\n        }), isFloatHeaderAbsolute ? floatingHeader : null]\n      });\n    }\n  }\n  exports.CardStack = CardStack;\n  const styles = _StyleSheet.default.create({\n    container: {\n      flex: 1\n    },\n    absolute: {\n      position: 'absolute',\n      top: 0,\n      start: 0,\n      end: 0\n    },\n    floating: {\n      zIndex: 1\n    }\n  });\n});","lineCount":494,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"CardStack"],[8,19,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"getAnimationEnabled"],[9,29,1,13],[9,32,1,13,"getAnimationEnabled"],[9,51,1,13],[10,2,3,0],[10,6,3,0,"_elements"],[10,15,3,0],[10,18,3,0,"require"],[10,25,3,0],[10,26,3,0,"_dependencyMap"],[10,40,3,0],[11,2,4,0],[11,6,4,0,"React"],[11,11,4,0],[11,14,4,0,"_interopRequireWildcard"],[11,37,4,0],[11,38,4,0,"require"],[11,45,4,0],[11,46,4,0,"_dependencyMap"],[11,60,4,0],[12,2,4,31],[12,6,4,31,"_Animated"],[12,15,4,31],[12,18,4,31,"_interopRequireDefault"],[12,40,4,31],[12,41,4,31,"require"],[12,48,4,31],[12,49,4,31,"_dependencyMap"],[12,63,4,31],[13,2,4,31],[13,6,4,31,"_Platform"],[13,15,4,31],[13,18,4,31,"_interopRequireDefault"],[13,40,4,31],[13,41,4,31,"require"],[13,48,4,31],[13,49,4,31,"_dependencyMap"],[13,63,4,31],[14,2,4,31],[14,6,4,31,"_StyleSheet"],[14,17,4,31],[14,20,4,31,"_interopRequireDefault"],[14,42,4,31],[14,43,4,31,"require"],[14,50,4,31],[14,51,4,31,"_dependencyMap"],[14,65,4,31],[15,2,4,31],[15,6,4,31,"_View"],[15,11,4,31],[15,14,4,31,"_interopRequireDefault"],[15,36,4,31],[15,37,4,31,"require"],[15,44,4,31],[15,45,4,31,"_dependencyMap"],[15,59,4,31],[16,2,6,0],[16,6,6,0,"_CardStyleInterpolators"],[16,29,6,0],[16,32,6,0,"require"],[16,39,6,0],[16,40,6,0,"_dependencyMap"],[16,54,6,0],[17,2,7,0],[17,6,7,0,"_TransitionPresets"],[17,24,7,0],[17,27,7,0,"require"],[17,34,7,0],[17,35,7,0,"_dependencyMap"],[17,49,7,0],[18,2,8,0],[18,6,8,0,"_findLastIndex"],[18,20,8,0],[18,23,8,0,"require"],[18,30,8,0],[18,31,8,0,"_dependencyMap"],[18,45,8,0],[19,2,9,0],[19,6,9,0,"_getDistanceForDirection"],[19,30,9,0],[19,33,9,0,"require"],[19,40,9,0],[19,41,9,0,"_dependencyMap"],[19,55,9,0],[20,2,10,0],[20,6,10,0,"_getModalRoutesKeys"],[20,25,10,0],[20,28,10,0,"require"],[20,35,10,0],[20,36,10,0,"_dependencyMap"],[20,50,10,0],[21,2,11,0],[21,6,11,0,"_Screens"],[21,14,11,0],[21,17,11,0,"require"],[21,24,11,0],[21,25,11,0,"_dependencyMap"],[21,39,11,0],[22,2,12,0],[22,6,12,0,"_CardContainer"],[22,20,12,0],[22,23,12,0,"require"],[22,30,12,0],[22,31,12,0,"_dependencyMap"],[22,45,12,0],[23,2,13,0],[23,6,13,0,"_jsxRuntime"],[23,17,13,0],[23,20,13,0,"require"],[23,27,13,0],[23,28,13,0,"_dependencyMap"],[23,42,13,0],[24,2,13,63],[24,11,13,63,"_interopRequireWildcard"],[24,35,13,63,"e"],[24,36,13,63],[24,38,13,63,"t"],[24,39,13,63],[24,68,13,63,"WeakMap"],[24,75,13,63],[24,81,13,63,"r"],[24,82,13,63],[24,89,13,63,"WeakMap"],[24,96,13,63],[24,100,13,63,"n"],[24,101,13,63],[24,108,13,63,"WeakMap"],[24,115,13,63],[24,127,13,63,"_interopRequireWildcard"],[24,150,13,63],[24,162,13,63,"_interopRequireWildcard"],[24,163,13,63,"e"],[24,164,13,63],[24,166,13,63,"t"],[24,167,13,63],[24,176,13,63,"t"],[24,177,13,63],[24,181,13,63,"e"],[24,182,13,63],[24,186,13,63,"e"],[24,187,13,63],[24,188,13,63,"__esModule"],[24,198,13,63],[24,207,13,63,"e"],[24,208,13,63],[24,214,13,63,"o"],[24,215,13,63],[24,217,13,63,"i"],[24,218,13,63],[24,220,13,63,"f"],[24,221,13,63],[24,226,13,63,"__proto__"],[24,235,13,63],[24,243,13,63,"default"],[24,250,13,63],[24,252,13,63,"e"],[24,253,13,63],[24,270,13,63,"e"],[24,271,13,63],[24,294,13,63,"e"],[24,295,13,63],[24,320,13,63,"e"],[24,321,13,63],[24,330,13,63,"f"],[24,331,13,63],[24,337,13,63,"o"],[24,338,13,63],[24,341,13,63,"t"],[24,342,13,63],[24,345,13,63,"n"],[24,346,13,63],[24,349,13,63,"r"],[24,350,13,63],[24,358,13,63,"o"],[24,359,13,63],[24,360,13,63,"has"],[24,363,13,63],[24,364,13,63,"e"],[24,365,13,63],[24,375,13,63,"o"],[24,376,13,63],[24,377,13,63,"get"],[24,380,13,63],[24,381,13,63,"e"],[24,382,13,63],[24,385,13,63,"o"],[24,386,13,63],[24,387,13,63,"set"],[24,390,13,63],[24,391,13,63,"e"],[24,392,13,63],[24,394,13,63,"f"],[24,395,13,63],[24,411,13,63,"t"],[24,412,13,63],[24,416,13,63,"e"],[24,417,13,63],[24,433,13,63,"t"],[24,434,13,63],[24,441,13,63,"hasOwnProperty"],[24,455,13,63],[24,456,13,63,"call"],[24,460,13,63],[24,461,13,63,"e"],[24,462,13,63],[24,464,13,63,"t"],[24,465,13,63],[24,472,13,63,"i"],[24,473,13,63],[24,477,13,63,"o"],[24,478,13,63],[24,481,13,63,"Object"],[24,487,13,63],[24,488,13,63,"defineProperty"],[24,502,13,63],[24,507,13,63,"Object"],[24,513,13,63],[24,514,13,63,"getOwnPropertyDescriptor"],[24,538,13,63],[24,539,13,63,"e"],[24,540,13,63],[24,542,13,63,"t"],[24,543,13,63],[24,550,13,63,"i"],[24,551,13,63],[24,552,13,63,"get"],[24,555,13,63],[24,559,13,63,"i"],[24,560,13,63],[24,561,13,63,"set"],[24,564,13,63],[24,568,13,63,"o"],[24,569,13,63],[24,570,13,63,"f"],[24,571,13,63],[24,573,13,63,"t"],[24,574,13,63],[24,576,13,63,"i"],[24,577,13,63],[24,581,13,63,"f"],[24,582,13,63],[24,583,13,63,"t"],[24,584,13,63],[24,588,13,63,"e"],[24,589,13,63],[24,590,13,63,"t"],[24,591,13,63],[24,602,13,63,"f"],[24,603,13,63],[24,608,13,63,"e"],[24,609,13,63],[24,611,13,63,"t"],[24,612,13,63],[25,2,14,0],[25,8,14,6,"NAMED_TRANSITIONS_PRESETS"],[25,33,14,31],[25,36,14,34],[26,4,15,2,"default"],[26,11,15,9],[26,13,15,11,"DefaultTransition"],[26,49,15,28],[27,4,16,2,"fade"],[27,8,16,6],[27,10,16,8,"ModalFadeTransition"],[27,48,16,27],[28,4,17,2,"fade_from_bottom"],[28,20,17,18],[28,22,17,20,"FadeFromBottomAndroid"],[28,62,17,41],[29,4,18,2,"fade_from_right"],[29,19,18,17],[29,21,18,19,"FadeFromRightAndroid"],[29,60,18,39],[30,4,19,2,"none"],[30,8,19,6],[30,10,19,8,"DefaultTransition"],[30,46,19,25],[31,4,20,2,"reveal_from_bottom"],[31,22,20,20],[31,24,20,22,"RevealFromBottomAndroid"],[31,66,20,45],[32,4,21,2,"scale_from_center"],[32,21,21,19],[32,23,21,21,"ScaleFromCenterAndroid"],[32,64,21,43],[33,4,22,2,"slide_from_left"],[33,19,22,17],[33,21,22,19,"SlideFromLeftIOS"],[33,56,22,35],[34,4,23,2,"slide_from_right"],[34,20,23,18],[34,22,23,20,"SlideFromRightIOS"],[34,58,23,37],[35,4,24,2,"slide_from_bottom"],[35,21,24,19],[35,23,24,21,"Platform"],[35,40,24,29],[35,41,24,30,"select"],[35,47,24,36],[35,48,24,37],[36,6,25,4,"ios"],[36,9,25,7],[36,11,25,9,"ModalSlideFromBottomIOS"],[36,53,25,32],[37,6,26,4,"default"],[37,13,26,11],[37,15,26,13,"BottomSheetAndroid"],[38,4,27,2],[38,5,27,3],[39,2,28,0],[39,3,28,1],[40,2,29,0],[40,8,29,6,"EPSILON"],[40,15,29,13],[40,18,29,16],[40,22,29,20],[41,2,30,0],[41,8,30,6,"STATE_INACTIVE"],[41,22,30,20],[41,25,30,23],[41,26,30,24],[42,2,31,0],[42,8,31,6,"STATE_TRANSITIONING_OR_BELOW_TOP"],[42,40,31,38],[42,43,31,41],[42,44,31,42],[43,2,32,0],[43,8,32,6,"STATE_ON_TOP"],[43,20,32,18],[43,23,32,21],[43,24,32,22],[44,2,33,0],[44,8,33,6,"FALLBACK_DESCRIPTOR"],[44,27,33,25],[44,30,33,28,"Object"],[44,36,33,34],[44,37,33,35,"freeze"],[44,43,33,41],[44,44,33,42],[45,4,34,2,"options"],[45,11,34,9],[45,13,34,11],[45,14,34,12],[46,2,35,0],[46,3,35,1],[46,4,35,2],[47,2,36,0],[47,8,36,6,"getInterpolationIndex"],[47,29,36,27],[47,32,36,30,"getInterpolationIndex"],[47,33,36,31,"scenes"],[47,39,36,37],[47,41,36,39,"index"],[47,46,36,44],[47,51,36,49],[48,4,37,2],[48,10,37,8],[49,6,38,4,"cardStyleInterpolator"],[50,4,39,2],[50,5,39,3],[50,8,39,6,"scenes"],[50,14,39,12],[50,15,39,13,"index"],[50,20,39,18],[50,21,39,19],[50,22,39,20,"descriptor"],[50,32,39,30],[50,33,39,31,"options"],[50,40,39,38],[52,4,41,2],[53,4,42,2],[53,8,42,6,"interpolationIndex"],[53,26,42,24],[53,29,42,27],[53,30,42,28],[54,4,43,2],[54,9,43,7],[54,13,43,11,"i"],[54,14,43,12],[54,17,43,15,"index"],[54,22,43,20],[54,25,43,23],[54,26,43,24],[54,28,43,26,"i"],[54,29,43,27],[54,33,43,31],[54,34,43,32],[54,36,43,34,"i"],[54,37,43,35],[54,39,43,37],[54,41,43,39],[55,6,44,4],[55,12,44,10,"cardStyleInterpolatorCurrent"],[55,40,44,38],[55,43,44,41,"scenes"],[55,49,44,47],[55,50,44,48,"i"],[55,51,44,49],[55,52,44,50],[55,54,44,52,"descriptor"],[55,64,44,62],[55,65,44,63,"options"],[55,72,44,70],[55,73,44,71,"cardStyleInterpolator"],[55,94,44,92],[56,6,45,4],[56,10,45,8,"cardStyleInterpolatorCurrent"],[56,38,45,36],[56,43,45,41,"cardStyleInterpolator"],[56,64,45,62],[56,66,45,64],[57,8,46,6],[58,6,47,4],[59,6,48,4,"interpolationIndex"],[59,24,48,22],[59,26,48,24],[60,4,49,2],[61,4,50,2],[61,11,50,9,"interpolationIndex"],[61,29,50,27],[62,2,51,0],[62,3,51,1],[63,2,52,0],[63,8,52,6,"getIsModalPresentation"],[63,30,52,28],[63,33,52,31,"cardStyleInterpolator"],[63,54,52,52],[63,58,52,56],[64,4,53,2],[64,11,53,9,"cardStyleInterpolator"],[64,32,53,30],[64,37,53,35,"forModalPresentationIOS"],[64,84,53,58],[65,4,54,2],[66,4,55,2,"cardStyleInterpolator"],[66,25,55,23],[66,26,55,24,"name"],[66,30,55,28],[66,35,55,33],[66,60,55,58],[67,2,56,0],[67,3,56,1],[68,2,57,0],[68,8,57,6,"getIsModal"],[68,18,57,16],[68,21,57,19,"getIsModal"],[68,22,57,20,"scene"],[68,27,57,25],[68,29,57,27,"interpolationIndex"],[68,47,57,45],[68,49,57,47,"isParentModal"],[68,62,57,60],[68,67,57,65],[69,4,58,2],[69,8,58,6,"isParentModal"],[69,21,58,19],[69,23,58,21],[70,6,59,4],[70,13,59,11],[70,17,59,15],[71,4,60,2],[72,4,61,2],[72,10,61,8],[73,6,62,4,"cardStyleInterpolator"],[74,4,63,2],[74,5,63,3],[74,8,63,6,"scene"],[74,13,63,11],[74,14,63,12,"descriptor"],[74,24,63,22],[74,25,63,23,"options"],[74,32,63,30],[75,4,64,2],[75,10,64,8,"isModalPresentation"],[75,29,64,27],[75,32,64,30,"getIsModalPresentation"],[75,54,64,52],[75,55,64,53,"cardStyleInterpolator"],[75,76,64,74],[75,77,64,75],[76,4,65,2],[76,10,65,8,"isModal"],[76,17,65,15],[76,20,65,18,"isModalPresentation"],[76,39,65,37],[76,43,65,41,"interpolationIndex"],[76,61,65,59],[76,66,65,64],[76,67,65,65],[77,4,66,2],[77,11,66,9,"isModal"],[77,18,66,16],[78,2,67,0],[78,3,67,1],[79,2,68,0],[79,8,68,6,"getHeaderHeights"],[79,24,68,22],[79,27,68,25,"getHeaderHeights"],[79,28,68,26,"scenes"],[79,34,68,32],[79,36,68,34,"insets"],[79,42,68,40],[79,44,68,42,"isParentHeaderShown"],[79,63,68,61],[79,65,68,63,"isParentModal"],[79,78,68,76],[79,80,68,78,"layout"],[79,86,68,84],[79,88,68,86,"previous"],[79,96,68,94],[79,101,68,99],[80,4,69,2],[80,11,69,9,"scenes"],[80,17,69,15],[80,18,69,16,"reduce"],[80,24,69,22],[80,25,69,23],[80,26,69,24,"acc"],[80,29,69,27],[80,31,69,29,"curr"],[80,35,69,33],[80,37,69,35,"index"],[80,42,69,40],[80,47,69,45],[81,6,70,4],[81,12,70,10],[82,8,71,6,"headerStatusBarHeight"],[82,29,71,27],[82,32,71,30,"isParentHeaderShown"],[82,51,71,49],[82,54,71,52],[82,55,71,53],[82,58,71,56,"insets"],[82,64,71,62],[82,65,71,63,"top"],[82,68,71,66],[83,8,72,6,"headerStyle"],[84,6,73,4],[84,7,73,5],[84,10,73,8,"curr"],[84,14,73,12],[84,15,73,13,"descriptor"],[84,25,73,23],[84,26,73,24,"options"],[84,33,73,31],[85,6,74,4],[85,12,74,10,"style"],[85,17,74,15],[85,20,74,18,"StyleSheet"],[85,39,74,28],[85,40,74,29,"flatten"],[85,47,74,36],[85,48,74,37,"headerStyle"],[85,59,74,48],[85,63,74,52],[85,64,74,53],[85,65,74,54],[85,66,74,55],[86,6,75,4],[86,12,75,10,"height"],[86,18,75,16],[86,21,75,19],[86,29,75,27],[86,33,75,31,"style"],[86,38,75,36],[86,42,75,40],[86,49,75,47,"style"],[86,54,75,52],[86,55,75,53,"height"],[86,61,75,59],[86,66,75,64],[86,74,75,72],[86,77,75,75,"style"],[86,82,75,80],[86,83,75,81,"height"],[86,89,75,87],[86,92,75,90,"previous"],[86,100,75,98],[86,101,75,99,"curr"],[86,105,75,103],[86,106,75,104,"route"],[86,111,75,109],[86,112,75,110,"key"],[86,115,75,113],[86,116,75,114],[87,6,76,4],[87,12,76,10,"interpolationIndex"],[87,30,76,28],[87,33,76,31,"getInterpolationIndex"],[87,54,76,52],[87,55,76,53,"scenes"],[87,61,76,59],[87,63,76,61,"index"],[87,68,76,66],[87,69,76,67],[88,6,77,4],[88,12,77,10,"isModal"],[88,19,77,17],[88,22,77,20,"getIsModal"],[88,32,77,30],[88,33,77,31,"curr"],[88,37,77,35],[88,39,77,37,"interpolationIndex"],[88,57,77,55],[88,59,77,57,"isParentModal"],[88,72,77,70],[88,73,77,71],[89,6,78,4,"acc"],[89,9,78,7],[89,10,78,8,"curr"],[89,14,78,12],[89,15,78,13,"route"],[89,20,78,18],[89,21,78,19,"key"],[89,24,78,22],[89,25,78,23],[89,28,78,26],[89,35,78,33,"height"],[89,41,78,39],[89,46,78,44],[89,54,78,52],[89,57,78,55,"height"],[89,63,78,61],[89,66,78,64],[89,70,78,64,"getDefaultHeaderHeight"],[89,102,78,86],[89,104,78,87,"layout"],[89,110,78,93],[89,112,78,95,"isModal"],[89,119,78,102],[89,121,78,104,"headerStatusBarHeight"],[89,142,78,125],[89,143,78,126],[90,6,79,4],[90,13,79,11,"acc"],[90,16,79,14],[91,4,80,2],[91,5,80,3],[91,7,80,5],[91,8,80,6],[91,9,80,7],[91,10,80,8],[92,2,81,0],[92,3,81,1],[93,2,82,0],[93,8,82,6,"getDistanceFromOptions"],[93,30,82,28],[93,33,82,31,"getDistanceFromOptions"],[93,34,82,32,"layout"],[93,40,82,38],[93,42,82,40,"options"],[93,49,82,47],[93,51,82,49,"isRTL"],[93,56,82,54],[93,61,82,59],[94,4,83,2],[94,8,83,6,"options"],[94,15,83,13],[94,17,83,15,"gestureDirection"],[94,33,83,31],[94,35,83,33],[95,6,84,4],[95,13,84,11],[95,17,84,11,"getDistanceForDirection"],[95,65,84,34],[95,67,84,35,"layout"],[95,73,84,41],[95,75,84,43,"options"],[95,82,84,50],[95,83,84,51,"gestureDirection"],[95,99,84,67],[95,101,84,69,"isRTL"],[95,106,84,74],[95,107,84,75],[96,4,85,2],[97,4,86,2],[97,10,86,8,"defaultGestureDirection"],[97,33,86,31],[97,36,86,34,"options"],[97,43,86,41],[97,45,86,43,"presentation"],[97,57,86,55],[97,62,86,60],[97,69,86,67],[97,72,86,70,"ModalTransition"],[97,106,86,85],[97,107,86,86,"gestureDirection"],[97,123,86,102],[97,126,86,105,"DefaultTransition"],[97,162,86,122],[97,163,86,123,"gestureDirection"],[97,179,86,139],[98,4,87,2],[98,10,87,8,"gestureDirection"],[98,26,87,24],[98,29,87,27,"options"],[98,36,87,34],[98,38,87,36,"animation"],[98,47,87,45],[98,50,87,48,"NAMED_TRANSITIONS_PRESETS"],[98,75,87,73],[98,76,87,74,"options"],[98,83,87,81],[98,85,87,83,"animation"],[98,94,87,92],[98,95,87,93],[98,97,87,95,"gestureDirection"],[98,113,87,111],[98,116,87,114,"defaultGestureDirection"],[98,139,87,137],[99,4,88,2],[99,11,88,9],[99,15,88,9,"getDistanceForDirection"],[99,63,88,32],[99,65,88,33,"layout"],[99,71,88,39],[99,73,88,41,"gestureDirection"],[99,89,88,57],[99,91,88,59,"isRTL"],[99,96,88,64],[99,97,88,65],[100,2,89,0],[100,3,89,1],[101,2,90,0],[101,8,90,6,"getProgressFromGesture"],[101,30,90,28],[101,33,90,31,"getProgressFromGesture"],[101,34,90,32,"gesture"],[101,41,90,39],[101,43,90,41,"layout"],[101,49,90,47],[101,51,90,49,"options"],[101,58,90,56],[101,60,90,58,"isRTL"],[101,65,90,63],[101,70,90,68],[102,4,91,2],[102,10,91,8,"distance"],[102,18,91,16],[102,21,91,19,"getDistanceFromOptions"],[102,43,91,41],[102,44,91,42],[103,6,92,4],[104,6,93,4],[105,6,94,4,"width"],[105,11,94,9],[105,13,94,11,"Math"],[105,17,94,15],[105,18,94,16,"max"],[105,21,94,19],[105,22,94,20],[105,23,94,21],[105,25,94,23,"layout"],[105,31,94,29],[105,32,94,30,"width"],[105,37,94,35],[105,38,94,36],[106,6,95,4,"height"],[106,12,95,10],[106,14,95,12,"Math"],[106,18,95,16],[106,19,95,17,"max"],[106,22,95,20],[106,23,95,21],[106,24,95,22],[106,26,95,24,"layout"],[106,32,95,30],[106,33,95,31,"height"],[106,39,95,37],[107,4,96,2],[107,5,96,3],[107,7,96,5,"options"],[107,14,96,12],[107,16,96,14,"isRTL"],[107,21,96,19],[107,22,96,20],[108,4,97,2],[108,8,97,6,"distance"],[108,16,97,14],[108,19,97,17],[108,20,97,18],[108,22,97,20],[109,6,98,4],[109,13,98,11,"gesture"],[109,20,98,18],[109,21,98,19,"interpolate"],[109,32,98,30],[109,33,98,31],[110,8,99,6,"inputRange"],[110,18,99,16],[110,20,99,18],[110,21,99,19],[110,22,99,20],[110,24,99,22,"distance"],[110,32,99,30],[110,33,99,31],[111,8,100,6,"outputRange"],[111,19,100,17],[111,21,100,19],[111,22,100,20],[111,23,100,21],[111,25,100,23],[111,26,100,24],[112,6,101,4],[112,7,101,5],[112,8,101,6],[113,4,102,2],[114,4,103,2],[114,11,103,9,"gesture"],[114,18,103,16],[114,19,103,17,"interpolate"],[114,30,103,28],[114,31,103,29],[115,6,104,4,"inputRange"],[115,16,104,14],[115,18,104,16],[115,19,104,17,"distance"],[115,27,104,25],[115,29,104,27],[115,30,104,28],[115,31,104,29],[116,6,105,4,"outputRange"],[116,17,105,15],[116,19,105,17],[116,20,105,18],[116,21,105,19],[116,23,105,21],[116,24,105,22],[117,4,106,2],[117,5,106,3],[117,6,106,4],[118,2,107,0],[118,3,107,1],[119,2,108,0],[119,11,108,9,"getDefaultAnimation"],[119,30,108,28,"getDefaultAnimation"],[119,31,108,29,"animation"],[119,40,108,38],[119,42,108,40],[120,4,109,2],[121,4,110,2],[121,10,110,8,"excludedPlatforms"],[121,27,110,25],[121,30,110,28,"Platform"],[121,47,110,36],[121,48,110,37,"OS"],[121,50,110,39],[121,55,110,44],[121,60,110,49],[121,64,110,53,"Platform"],[121,81,110,61],[121,82,110,62,"OS"],[121,84,110,64],[121,89,110,69],[121,98,110,78],[121,102,110,82,"Platform"],[121,119,110,90],[121,120,110,91,"OS"],[121,122,110,93],[121,127,110,98],[121,134,110,105],[122,4,111,2],[122,11,111,9,"animation"],[122,20,111,18],[122,25,111,23,"excludedPlatforms"],[122,42,111,40],[122,45,111,43],[122,54,111,52],[122,57,111,55],[122,63,111,61],[122,64,111,62],[123,2,112,0],[124,2,113,7],[124,11,113,16,"getAnimationEnabled"],[124,30,113,35,"getAnimationEnabled"],[124,31,113,36,"animation"],[124,40,113,45],[124,42,113,47],[125,4,114,2],[125,11,114,9,"getDefaultAnimation"],[125,30,114,28],[125,31,114,29,"animation"],[125,40,114,38],[125,41,114,39],[125,46,114,44],[125,52,114,50],[126,2,115,0],[127,2,116,7],[127,8,116,13,"CardStack"],[127,17,116,22],[127,26,116,31,"React"],[127,31,116,36],[127,32,116,37,"Component"],[127,41,116,46],[127,42,116,47],[128,4,117,2],[128,11,117,9,"getDerivedStateFromProps"],[128,35,117,33,"getDerivedStateFromProps"],[128,36,117,34,"props"],[128,41,117,39],[128,43,117,41,"state"],[128,48,117,46],[128,50,117,48],[129,6,118,4],[129,10,118,8,"props"],[129,15,118,13],[129,16,118,14,"routes"],[129,22,118,20],[129,27,118,25,"state"],[129,32,118,30],[129,33,118,31,"routes"],[129,39,118,37],[129,43,118,41,"props"],[129,48,118,46],[129,49,118,47,"descriptors"],[129,60,118,58],[129,65,118,63,"state"],[129,70,118,68],[129,71,118,69,"descriptors"],[129,82,118,80],[129,84,118,82],[130,8,119,6],[130,15,119,13],[130,19,119,17],[131,6,120,4],[132,6,121,4],[132,12,121,10,"gestures"],[132,20,121,18],[132,23,121,21],[132,24,121,22],[132,27,121,25,"props"],[132,32,121,30],[132,33,121,31,"routes"],[132,39,121,37],[132,41,121,39],[132,44,121,42,"props"],[132,49,121,47],[132,50,121,48,"state"],[132,55,121,53],[132,56,121,54,"preloadedRoutes"],[132,71,121,69],[132,72,121,70],[132,73,121,71,"reduce"],[132,79,121,77],[132,80,121,78],[132,81,121,79,"acc"],[132,84,121,82],[132,86,121,84,"curr"],[132,90,121,88],[132,95,121,93],[133,8,122,6],[133,14,122,12,"descriptor"],[133,24,122,22],[133,27,122,25,"props"],[133,32,122,30],[133,33,122,31,"descriptors"],[133,44,122,42],[133,45,122,43,"curr"],[133,49,122,47],[133,50,122,48,"key"],[133,53,122,51],[133,54,122,52],[133,58,122,56,"props"],[133,63,122,61],[133,64,122,62,"preloadedDescriptors"],[133,84,122,82],[133,85,122,83,"curr"],[133,89,122,87],[133,90,122,88,"key"],[133,93,122,91],[133,94,122,92],[134,8,123,6],[134,14,123,12],[135,10,124,8,"animation"],[136,8,125,6],[136,9,125,7],[136,12,125,10,"descriptor"],[136,22,125,20],[136,24,125,22,"options"],[136,31,125,29],[136,35,125,33],[136,36,125,34],[136,37,125,35],[137,8,126,6,"acc"],[137,11,126,9],[137,12,126,10,"curr"],[137,16,126,14],[137,17,126,15,"key"],[137,20,126,18],[137,21,126,19],[137,24,126,22,"state"],[137,29,126,27],[137,30,126,28,"gestures"],[137,38,126,36],[137,39,126,37,"curr"],[137,43,126,41],[137,44,126,42,"key"],[137,47,126,45],[137,48,126,46],[137,52,126,50],[137,56,126,54,"Animated"],[137,73,126,62],[137,74,126,63,"Value"],[137,79,126,68],[137,80,126,69,"props"],[137,85,126,74],[137,86,126,75,"openingRouteKeys"],[137,102,126,91],[137,103,126,92,"includes"],[137,111,126,100],[137,112,126,101,"curr"],[137,116,126,105],[137,117,126,106,"key"],[137,120,126,109],[137,121,126,110],[137,125,126,114,"getAnimationEnabled"],[137,144,126,133],[137,145,126,134,"animation"],[137,154,126,143],[137,155,126,144],[137,159,126,148,"props"],[137,164,126,153],[137,165,126,154,"state"],[137,170,126,159],[137,171,126,160,"preloadedRoutes"],[137,186,126,175],[137,187,126,176,"includes"],[137,195,126,184],[137,196,126,185,"curr"],[137,200,126,189],[137,201,126,190],[137,204,126,193,"getDistanceFromOptions"],[137,226,126,215],[137,227,126,216,"state"],[137,232,126,221],[137,233,126,222,"layout"],[137,239,126,228],[137,241,126,230,"descriptor"],[137,251,126,240],[137,253,126,242,"options"],[137,260,126,249],[137,262,126,251,"props"],[137,267,126,256],[137,268,126,257,"direction"],[137,277,126,266],[137,282,126,271],[137,287,126,276],[137,288,126,277],[137,291,126,280],[137,292,126,281],[137,293,126,282],[138,8,127,6],[138,15,127,13,"acc"],[138,18,127,16],[139,6,128,4],[139,7,128,5],[139,9,128,7],[139,10,128,8],[139,11,128,9],[139,12,128,10],[140,6,129,4],[140,12,129,10,"modalRouteKeys"],[140,26,129,24],[140,29,129,27],[140,33,129,27,"getModalRouteKeys"],[140,70,129,44],[140,72,129,45],[140,73,129,46],[140,76,129,49,"props"],[140,81,129,54],[140,82,129,55,"routes"],[140,88,129,61],[140,90,129,63],[140,93,129,66,"props"],[140,98,129,71],[140,99,129,72,"state"],[140,104,129,77],[140,105,129,78,"preloadedRoutes"],[140,120,129,93],[140,121,129,94],[140,123,129,96],[141,8,130,6],[141,11,130,9,"props"],[141,16,130,14],[141,17,130,15,"descriptors"],[141,28,130,26],[142,8,131,6],[142,11,131,9,"props"],[142,16,131,14],[142,17,131,15,"preloadedDescriptors"],[143,6,132,4],[143,7,132,5],[143,8,132,6],[144,6,133,4],[144,12,133,10,"scenes"],[144,18,133,16],[144,21,133,19],[144,22,133,20],[144,25,133,23,"props"],[144,30,133,28],[144,31,133,29,"routes"],[144,37,133,35],[144,39,133,37],[144,42,133,40,"props"],[144,47,133,45],[144,48,133,46,"state"],[144,53,133,51],[144,54,133,52,"preloadedRoutes"],[144,69,133,67],[144,70,133,68],[144,71,133,69,"map"],[144,74,133,72],[144,75,133,73],[144,76,133,74,"route"],[144,81,133,79],[144,83,133,81,"index"],[144,88,133,86],[144,90,133,88,"self"],[144,94,133,92],[144,99,133,97],[145,8,134,6],[146,8,135,6],[146,14,135,12,"isPreloaded"],[146,25,135,23],[146,28,135,26,"props"],[146,33,135,31],[146,34,135,32,"state"],[146,39,135,37],[146,40,135,38,"preloadedRoutes"],[146,55,135,53],[146,56,135,54,"includes"],[146,64,135,62],[146,65,135,63,"route"],[146,70,135,68],[146,71,135,69],[147,8,136,6],[147,14,136,12,"previousRoute"],[147,27,136,25],[147,30,136,28,"isPreloaded"],[147,41,136,39],[147,44,136,42,"undefined"],[147,53,136,51],[147,56,136,54,"self"],[147,60,136,58],[147,61,136,59,"index"],[147,66,136,64],[147,69,136,67],[147,70,136,68],[147,71,136,69],[148,8,137,6],[148,14,137,12,"nextRoute"],[148,23,137,21],[148,26,137,24,"isPreloaded"],[148,37,137,35],[148,40,137,38,"undefined"],[148,49,137,47],[148,52,137,50,"self"],[148,56,137,54],[148,57,137,55,"index"],[148,62,137,60],[148,65,137,63],[148,66,137,64],[148,67,137,65],[149,8,138,6],[149,14,138,12,"oldScene"],[149,22,138,20],[149,25,138,23,"state"],[149,30,138,28],[149,31,138,29,"scenes"],[149,37,138,35],[149,38,138,36,"index"],[149,43,138,41],[149,44,138,42],[150,8,139,6],[150,14,139,12,"currentGesture"],[150,28,139,26],[150,31,139,29,"gestures"],[150,39,139,37],[150,40,139,38,"route"],[150,45,139,43],[150,46,139,44,"key"],[150,49,139,47],[150,50,139,48],[151,8,140,6],[151,14,140,12,"previousGesture"],[151,29,140,27],[151,32,140,30,"previousRoute"],[151,45,140,43],[151,48,140,46,"gestures"],[151,56,140,54],[151,57,140,55,"previousRoute"],[151,70,140,68],[151,71,140,69,"key"],[151,74,140,72],[151,75,140,73],[151,78,140,76,"undefined"],[151,87,140,85],[152,8,141,6],[152,14,141,12,"nextGesture"],[152,25,141,23],[152,28,141,26,"nextRoute"],[152,37,141,35],[152,40,141,38,"gestures"],[152,48,141,46],[152,49,141,47,"nextRoute"],[152,58,141,56],[152,59,141,57,"key"],[152,62,141,60],[152,63,141,61],[152,66,141,64,"undefined"],[152,75,141,73],[153,8,142,6],[153,14,142,12,"descriptor"],[153,24,142,22],[153,27,142,25],[153,28,142,26,"isPreloaded"],[153,39,142,37],[153,42,142,40,"props"],[153,47,142,45],[153,48,142,46,"preloadedDescriptors"],[153,68,142,66],[153,71,142,69,"props"],[153,76,142,74],[153,77,142,75,"descriptors"],[153,88,142,86],[153,90,142,88,"route"],[153,95,142,93],[153,96,142,94,"key"],[153,99,142,97],[153,100,142,98],[153,104,142,102,"state"],[153,109,142,107],[153,110,142,108,"descriptors"],[153,121,142,119],[153,122,142,120,"route"],[153,127,142,125],[153,128,142,126,"key"],[153,131,142,129],[153,132,142,130],[153,137,142,135,"oldScene"],[153,145,142,143],[153,148,142,146,"oldScene"],[153,156,142,154],[153,157,142,155,"descriptor"],[153,167,142,165],[153,170,142,168,"FALLBACK_DESCRIPTOR"],[153,189,142,187],[153,190,142,188],[154,8,143,6],[154,14,143,12,"nextOptions"],[154,25,143,23],[154,28,143,26,"nextRoute"],[154,37,143,35],[154,41,143,39],[154,42,143,40,"props"],[154,47,143,45],[154,48,143,46,"descriptors"],[154,59,143,57],[154,60,143,58,"nextRoute"],[154,69,143,67],[154,71,143,69,"key"],[154,74,143,72],[154,75,143,73],[154,79,143,77,"state"],[154,84,143,82],[154,85,143,83,"descriptors"],[154,96,143,94],[154,97,143,95,"nextRoute"],[154,106,143,104],[154,108,143,106,"key"],[154,111,143,109],[154,112,143,110],[154,115,143,113,"options"],[154,122,143,120],[155,8,144,6],[155,14,144,12,"previousOptions"],[155,29,144,27],[155,32,144,30,"previousRoute"],[155,45,144,43],[155,49,144,47],[155,50,144,48,"props"],[155,55,144,53],[155,56,144,54,"descriptors"],[155,67,144,65],[155,68,144,66,"previousRoute"],[155,81,144,79],[155,83,144,81,"key"],[155,86,144,84],[155,87,144,85],[155,91,144,89,"state"],[155,96,144,94],[155,97,144,95,"descriptors"],[155,108,144,106],[155,109,144,107,"previousRoute"],[155,122,144,120],[155,124,144,122,"key"],[155,127,144,125],[155,128,144,126],[155,131,144,129,"options"],[155,138,144,136],[157,8,146,6],[158,8,147,6],[159,8,148,6],[160,8,149,6],[161,8,150,6],[162,8,151,6],[163,8,152,6],[163,14,152,12,"optionsForTransitionConfig"],[163,40,152,38],[163,43,152,41,"index"],[163,48,152,46],[163,53,152,51,"self"],[163,57,152,55],[163,58,152,56,"length"],[163,64,152,62],[163,67,152,65],[163,68,152,66],[163,72,152,70,"nextOptions"],[163,83,152,81],[163,87,152,85,"nextOptions"],[163,98,152,96],[163,100,152,98,"presentation"],[163,112,152,110],[163,117,152,115],[163,135,152,133],[163,138,152,136,"nextOptions"],[163,149,152,147],[163,152,152,150,"descriptor"],[163,162,152,160],[163,163,152,161,"options"],[163,170,152,168],[165,8,154,6],[166,8,155,6],[167,8,156,6],[167,14,156,12,"isModal"],[167,21,156,19],[167,24,156,22,"modalRouteKeys"],[167,38,156,36],[167,39,156,37,"includes"],[167,47,156,45],[167,48,156,46,"route"],[167,53,156,51],[167,54,156,52,"key"],[167,57,156,55],[167,58,156,56],[168,8,157,6],[168,14,157,12,"animation"],[168,23,157,21],[168,26,157,24,"getDefaultAnimation"],[168,45,157,43],[168,46,157,44,"optionsForTransitionConfig"],[168,72,157,70],[168,73,157,71,"animation"],[168,82,157,80],[168,83,157,81],[169,8,158,6],[169,14,158,12,"isAnimationEnabled"],[169,32,158,30],[169,35,158,33,"getAnimationEnabled"],[169,54,158,52],[169,55,158,53,"animation"],[169,64,158,62],[169,65,158,63],[170,8,159,6],[170,14,159,12,"transitionPreset"],[170,30,159,28],[170,33,159,31,"animation"],[170,42,159,40],[170,47,159,45],[170,56,159,54],[170,59,159,57,"NAMED_TRANSITIONS_PRESETS"],[170,84,159,82],[170,85,159,83,"animation"],[170,94,159,92],[170,95,159,93],[170,98,159,96,"isModal"],[170,105,159,103],[170,109,159,107,"optionsForTransitionConfig"],[170,135,159,133],[170,136,159,134,"presentation"],[170,148,159,146],[170,153,159,151],[170,160,159,158],[170,163,159,161,"ModalTransition"],[170,197,159,176],[170,200,159,179,"optionsForTransitionConfig"],[170,226,159,205],[170,227,159,206,"presentation"],[170,239,159,218],[170,244,159,223],[170,262,159,241],[170,265,159,244,"ModalFadeTransition"],[170,303,159,263],[170,306,159,266,"DefaultTransition"],[170,342,159,283],[171,8,160,6],[171,14,160,12],[172,10,161,8,"gestureEnabled"],[172,24,161,22],[172,27,161,25,"Platform"],[172,44,161,33],[172,45,161,34,"OS"],[172,47,161,36],[172,52,161,41],[172,57,161,46],[172,61,161,50,"isAnimationEnabled"],[172,79,161,68],[173,10,162,8,"gestureDirection"],[173,26,162,24],[173,29,162,27,"transitionPreset"],[173,45,162,43],[173,46,162,44,"gestureDirection"],[173,62,162,60],[174,10,163,8,"transitionSpec"],[174,24,163,22],[174,27,163,25,"transitionPreset"],[174,43,163,41],[174,44,163,42,"transitionSpec"],[174,58,163,56],[175,10,164,8,"cardStyleInterpolator"],[175,31,164,29],[175,34,164,32,"isAnimationEnabled"],[175,52,164,50],[175,55,164,53,"transitionPreset"],[175,71,164,69],[175,72,164,70,"cardStyleInterpolator"],[175,93,164,91],[175,96,164,94,"forNoAnimationCard"],[175,134,164,112],[176,10,165,8,"headerStyleInterpolator"],[176,33,165,31],[176,36,165,34,"transitionPreset"],[176,52,165,50],[176,53,165,51,"headerStyleInterpolator"],[176,76,165,74],[177,10,166,8,"cardOverlayEnabled"],[177,28,166,26],[177,31,166,29,"Platform"],[177,48,166,37],[177,49,166,38,"OS"],[177,51,166,40],[177,56,166,45],[177,61,166,50],[177,65,166,54,"optionsForTransitionConfig"],[177,91,166,80],[177,92,166,81,"presentation"],[177,104,166,93],[177,109,166,98],[177,127,166,116],[177,131,166,120,"getIsModalPresentation"],[177,153,166,142],[177,154,166,143,"cardStyleInterpolator"],[177,175,166,164],[178,8,167,6],[178,9,167,7],[178,12,167,10,"optionsForTransitionConfig"],[178,38,167,36],[179,8,168,6],[179,14,168,12,"headerMode"],[179,24,168,22],[179,27,168,25,"descriptor"],[179,37,168,35],[179,38,168,36,"options"],[179,45,168,43],[179,46,168,44,"headerMode"],[179,56,168,54],[179,61,168,59],[179,63,168,61,"optionsForTransitionConfig"],[179,89,168,87],[179,90,168,88,"presentation"],[179,102,168,100],[179,107,168,105],[179,114,168,112],[179,118,168,116,"optionsForTransitionConfig"],[179,144,168,142],[179,145,168,143,"presentation"],[179,157,168,155],[179,162,168,160],[179,180,168,178],[179,184,168,182,"nextOptions"],[179,195,168,193],[179,197,168,195,"presentation"],[179,209,168,207],[179,214,168,212],[179,221,168,219],[179,225,168,223,"nextOptions"],[179,236,168,234],[179,238,168,236,"presentation"],[179,250,168,248],[179,255,168,253],[179,273,168,271],[179,277,168,275,"getIsModalPresentation"],[179,299,168,297],[179,300,168,298,"cardStyleInterpolator"],[179,321,168,319],[179,322,168,320],[179,323,168,321],[179,327,168,325,"Platform"],[179,344,168,333],[179,345,168,334,"OS"],[179,347,168,336],[179,352,168,341],[179,357,168,346],[179,361,168,350,"descriptor"],[179,371,168,360],[179,372,168,361,"options"],[179,379,168,368],[179,380,168,369,"header"],[179,386,168,375],[179,391,168,380,"undefined"],[179,400,168,389],[179,403,168,392],[179,410,168,399],[179,413,168,402],[179,421,168,410],[179,422,168,411],[180,8,169,6],[180,14,169,12,"isRTL"],[180,19,169,17],[180,22,169,20,"props"],[180,27,169,25],[180,28,169,26,"direction"],[180,37,169,35],[180,42,169,40],[180,47,169,45],[181,8,170,6],[181,14,170,12,"scene"],[181,19,170,17],[181,22,170,20],[182,10,171,8,"route"],[182,15,171,13],[183,10,172,8,"descriptor"],[183,20,172,18],[183,22,172,20],[184,12,173,10],[184,15,173,13,"descriptor"],[184,25,173,23],[185,12,174,10,"options"],[185,19,174,17],[185,21,174,19],[186,14,175,12],[186,17,175,15,"descriptor"],[186,27,175,25],[186,28,175,26,"options"],[186,35,175,33],[187,14,176,12,"animation"],[187,23,176,21],[188,14,177,12,"cardOverlayEnabled"],[188,32,177,30],[189,14,178,12,"cardStyleInterpolator"],[189,35,178,33],[190,14,179,12,"gestureDirection"],[190,30,179,28],[191,14,180,12,"gestureEnabled"],[191,28,180,26],[192,14,181,12,"headerStyleInterpolator"],[192,37,181,35],[193,14,182,12,"transitionSpec"],[193,28,182,26],[194,14,183,12,"headerMode"],[195,12,184,10],[196,10,185,8],[196,11,185,9],[197,10,186,8,"progress"],[197,18,186,16],[197,20,186,18],[198,12,187,10,"current"],[198,19,187,17],[198,21,187,19,"getProgressFromGesture"],[198,43,187,41],[198,44,187,42,"currentGesture"],[198,58,187,56],[198,60,187,58,"state"],[198,65,187,63],[198,66,187,64,"layout"],[198,72,187,70],[198,74,187,72,"descriptor"],[198,84,187,82],[198,85,187,83,"options"],[198,92,187,90],[198,94,187,92,"isRTL"],[198,99,187,97],[198,100,187,98],[199,12,188,10,"next"],[199,16,188,14],[199,18,188,16,"nextGesture"],[199,29,188,27],[199,33,188,31,"nextOptions"],[199,44,188,42],[199,46,188,44,"presentation"],[199,58,188,56],[199,63,188,61],[199,81,188,79],[199,84,188,82,"getProgressFromGesture"],[199,106,188,104],[199,107,188,105,"nextGesture"],[199,118,188,116],[199,120,188,118,"state"],[199,125,188,123],[199,126,188,124,"layout"],[199,132,188,130],[199,134,188,132,"nextOptions"],[199,145,188,143],[199,147,188,145,"isRTL"],[199,152,188,150],[199,153,188,151],[199,156,188,154,"undefined"],[199,165,188,163],[200,12,189,10,"previous"],[200,20,189,18],[200,22,189,20,"previousGesture"],[200,37,189,35],[200,40,189,38,"getProgressFromGesture"],[200,62,189,60],[200,63,189,61,"previousGesture"],[200,78,189,76],[200,80,189,78,"state"],[200,85,189,83],[200,86,189,84,"layout"],[200,92,189,90],[200,94,189,92,"previousOptions"],[200,109,189,107],[200,111,189,109,"isRTL"],[200,116,189,114],[200,117,189,115],[200,120,189,118,"undefined"],[201,10,190,8],[201,11,190,9],[202,10,191,8,"__memo"],[202,16,191,14],[202,18,191,16],[202,19,191,17,"state"],[202,24,191,22],[202,25,191,23,"layout"],[202,31,191,29],[202,33,191,31,"descriptor"],[202,43,191,41],[202,45,191,43,"nextOptions"],[202,56,191,54],[202,58,191,56,"previousOptions"],[202,73,191,71],[202,75,191,73,"currentGesture"],[202,89,191,87],[202,91,191,89,"nextGesture"],[202,102,191,100],[202,104,191,102,"previousGesture"],[202,119,191,117],[203,8,192,6],[203,9,192,7],[204,8,193,6],[204,12,193,10,"oldScene"],[204,20,193,18],[204,24,193,22,"scene"],[204,29,193,27],[204,30,193,28,"__memo"],[204,36,193,34],[204,37,193,35,"every"],[204,42,193,40],[204,43,193,41],[204,44,193,42,"it"],[204,46,193,44],[204,48,193,46,"i"],[204,49,193,47],[204,54,193,52],[205,10,194,8],[206,10,195,8],[206,17,195,15,"oldScene"],[206,25,195,23],[206,26,195,24,"__memo"],[206,32,195,30],[206,33,195,31,"i"],[206,34,195,32],[206,35,195,33],[206,40,195,38,"it"],[206,42,195,40],[207,8,196,6],[207,9,196,7],[207,10,196,8],[207,12,196,10],[208,10,197,8],[208,17,197,15,"oldScene"],[208,25,197,23],[209,8,198,6],[210,8,199,6],[210,15,199,13,"scene"],[210,20,199,18],[211,6,200,4],[211,7,200,5],[211,8,200,6],[212,6,201,4],[212,13,201,11],[213,8,202,6,"routes"],[213,14,202,12],[213,16,202,14,"props"],[213,21,202,19],[213,22,202,20,"routes"],[213,28,202,26],[214,8,203,6,"scenes"],[214,14,203,12],[215,8,204,6,"gestures"],[215,16,204,14],[216,8,205,6,"descriptors"],[216,19,205,17],[216,21,205,19,"props"],[216,26,205,24],[216,27,205,25,"descriptors"],[216,38,205,36],[217,8,206,6,"headerHeights"],[217,21,206,19],[217,23,206,21,"getHeaderHeights"],[217,39,206,37],[217,40,206,38,"scenes"],[217,46,206,44],[217,48,206,46,"props"],[217,53,206,51],[217,54,206,52,"insets"],[217,60,206,58],[217,62,206,60,"props"],[217,67,206,65],[217,68,206,66,"isParentHeaderShown"],[217,87,206,85],[217,89,206,87,"props"],[217,94,206,92],[217,95,206,93,"isParentModal"],[217,108,206,106],[217,110,206,108,"state"],[217,115,206,113],[217,116,206,114,"layout"],[217,122,206,120],[217,124,206,122,"state"],[217,129,206,127],[217,130,206,128,"headerHeights"],[217,143,206,141],[218,6,207,4],[218,7,207,5],[219,4,208,2],[220,4,209,2,"constructor"],[220,15,209,13,"constructor"],[220,16,209,14,"props"],[220,21,209,19],[220,23,209,21],[221,6,210,4],[221,11,210,9],[221,12,210,10,"props"],[221,17,210,15],[221,18,210,16],[222,6,211,4],[222,10,211,8],[222,11,211,9,"state"],[222,16,211,14],[222,19,211,17],[223,8,212,6,"routes"],[223,14,212,12],[223,16,212,14],[223,18,212,16],[224,8,213,6,"scenes"],[224,14,213,12],[224,16,213,14],[224,18,213,16],[225,8,214,6,"gestures"],[225,16,214,14],[225,18,214,16],[225,19,214,17],[225,20,214,18],[226,8,215,6,"layout"],[226,14,215,12],[226,16,215,14,"SafeAreaProviderCompat"],[226,48,215,36],[226,49,215,37,"initialMetrics"],[226,63,215,51],[226,64,215,52,"frame"],[226,69,215,57],[227,8,216,6,"descriptors"],[227,19,216,17],[227,21,216,19],[227,25,216,23],[227,26,216,24,"props"],[227,31,216,29],[227,32,216,30,"descriptors"],[227,43,216,41],[228,8,217,6],[229,8,218,6],[230,8,219,6],[231,8,220,6],[232,8,221,6],[233,8,222,6,"headerHeights"],[233,21,222,19],[233,23,222,21],[233,24,222,22],[234,6,223,4],[234,7,223,5],[235,4,224,2],[236,4,225,2,"handleLayout"],[236,16,225,14],[236,19,225,17,"e"],[236,20,225,18],[236,24,225,22],[237,6,226,4],[237,12,226,10],[238,8,227,6,"height"],[238,14,227,12],[239,8,228,6,"width"],[240,6,229,4],[240,7,229,5],[240,10,229,8,"e"],[240,11,229,9],[240,12,229,10,"nativeEvent"],[240,23,229,21],[240,24,229,22,"layout"],[240,30,229,28],[241,6,230,4],[241,12,230,10,"layout"],[241,18,230,16],[241,21,230,19],[242,8,231,6,"width"],[242,13,231,11],[243,8,232,6,"height"],[244,6,233,4],[244,7,233,5],[245,6,234,4],[245,10,234,8],[245,11,234,9,"setState"],[245,19,234,17],[245,20,234,18],[245,21,234,19,"state"],[245,26,234,24],[245,28,234,26,"props"],[245,33,234,31],[245,38,234,36],[246,8,235,6],[246,12,235,10,"height"],[246,18,235,16],[246,23,235,21,"state"],[246,28,235,26],[246,29,235,27,"layout"],[246,35,235,33],[246,36,235,34,"height"],[246,42,235,40],[246,46,235,44,"width"],[246,51,235,49],[246,56,235,54,"state"],[246,61,235,59],[246,62,235,60,"layout"],[246,68,235,66],[246,69,235,67,"width"],[246,74,235,72],[246,76,235,74],[247,10,236,8],[247,17,236,15],[247,21,236,19],[248,8,237,6],[249,8,238,6],[249,15,238,13],[250,10,239,8,"layout"],[250,16,239,14],[251,10,240,8,"headerHeights"],[251,23,240,21],[251,25,240,23,"getHeaderHeights"],[251,41,240,39],[251,42,240,40,"state"],[251,47,240,45],[251,48,240,46,"scenes"],[251,54,240,52],[251,56,240,54,"props"],[251,61,240,59],[251,62,240,60,"insets"],[251,68,240,66],[251,70,240,68,"props"],[251,75,240,73],[251,76,240,74,"isParentHeaderShown"],[251,95,240,93],[251,97,240,95,"props"],[251,102,240,100],[251,103,240,101,"isParentModal"],[251,116,240,114],[251,118,240,116,"layout"],[251,124,240,122],[251,126,240,124,"state"],[251,131,240,129],[251,132,240,130,"headerHeights"],[251,145,240,143],[252,8,241,6],[252,9,241,7],[253,6,242,4],[253,7,242,5],[253,8,242,6],[254,4,243,2],[254,5,243,3],[255,4,244,2,"handleHeaderLayout"],[255,22,244,20],[255,25,244,23,"handleHeaderLayout"],[255,26,244,24],[256,6,245,4,"route"],[256,11,245,9],[257,6,246,4,"height"],[258,4,247,2],[258,5,247,3],[258,10,247,8],[259,6,248,4],[259,10,248,8],[259,11,248,9,"setState"],[259,19,248,17],[259,20,248,18],[259,21,248,19],[260,8,249,6,"headerHeights"],[261,6,250,4],[261,7,250,5],[261,12,250,10],[262,8,251,6],[262,14,251,12,"previousHeight"],[262,28,251,26],[262,31,251,29,"headerHeights"],[262,44,251,42],[262,45,251,43,"route"],[262,50,251,48],[262,51,251,49,"key"],[262,54,251,52],[262,55,251,53],[263,8,252,6],[263,12,252,10,"previousHeight"],[263,26,252,24],[263,31,252,29,"height"],[263,37,252,35],[263,39,252,37],[264,10,253,8],[264,17,253,15],[264,21,253,19],[265,8,254,6],[266,8,255,6],[266,15,255,13],[267,10,256,8,"headerHeights"],[267,23,256,21],[267,25,256,23],[268,12,257,10],[268,15,257,13,"headerHeights"],[268,28,257,26],[269,12,258,10],[269,13,258,11,"route"],[269,18,258,16],[269,19,258,17,"key"],[269,22,258,20],[269,25,258,23,"height"],[270,10,259,8],[271,8,260,6],[271,9,260,7],[272,6,261,4],[272,7,261,5],[272,8,261,6],[273,4,262,2],[273,5,262,3],[274,4,263,2,"getFocusedRoute"],[274,19,263,17],[274,22,263,20,"getFocusedRoute"],[274,23,263,20],[274,28,263,26],[275,6,264,4],[275,12,264,10],[276,8,265,6,"state"],[277,6,266,4],[277,7,266,5],[277,10,266,8],[277,14,266,12],[277,15,266,13,"props"],[277,20,266,18],[278,6,267,4],[278,13,267,11,"state"],[278,18,267,16],[278,19,267,17,"routes"],[278,25,267,23],[278,26,267,24,"state"],[278,31,267,29],[278,32,267,30,"index"],[278,37,267,35],[278,38,267,36],[279,4,268,2],[279,5,268,3],[280,4,269,2,"getPreviousScene"],[280,20,269,18],[280,23,269,21,"getPreviousScene"],[280,24,269,22],[281,6,270,4,"route"],[282,4,271,2],[282,5,271,3],[282,10,271,8],[283,6,272,4],[283,12,272,10],[284,8,273,6,"getPreviousRoute"],[285,6,274,4],[285,7,274,5],[285,10,274,8],[285,14,274,12],[285,15,274,13,"props"],[285,20,274,18],[286,6,275,4],[286,12,275,10],[287,8,276,6,"scenes"],[288,6,277,4],[288,7,277,5],[288,10,277,8],[288,14,277,12],[288,15,277,13,"state"],[288,20,277,18],[289,6,278,4],[289,12,278,10,"previousRoute"],[289,25,278,23],[289,28,278,26,"getPreviousRoute"],[289,44,278,42],[289,45,278,43],[290,8,279,6,"route"],[291,6,280,4],[291,7,280,5],[291,8,280,6],[292,6,281,4],[292,10,281,8,"previousRoute"],[292,23,281,21],[292,25,281,23],[293,8,282,6],[293,14,282,12,"previousScene"],[293,27,282,25],[293,30,282,28,"scenes"],[293,36,282,34],[293,37,282,35,"find"],[293,41,282,39],[293,42,282,40,"scene"],[293,47,282,45],[293,51,282,49,"scene"],[293,56,282,54],[293,57,282,55,"descriptor"],[293,67,282,65],[293,68,282,66,"route"],[293,73,282,71],[293,74,282,72,"key"],[293,77,282,75],[293,82,282,80,"previousRoute"],[293,95,282,93],[293,96,282,94,"key"],[293,99,282,97],[293,100,282,98],[294,8,283,6],[294,15,283,13,"previousScene"],[294,28,283,26],[295,6,284,4],[296,6,285,4],[296,13,285,11,"undefined"],[296,22,285,20],[297,4,286,2],[297,5,286,3],[298,4,287,2,"render"],[298,10,287,8,"render"],[298,11,287,8],[298,13,287,11],[299,6,288,4],[299,12,288,10],[300,8,289,6,"insets"],[300,14,289,12],[301,8,290,6,"state"],[301,13,290,11],[302,8,291,6,"routes"],[302,14,291,12],[303,8,292,6,"openingRouteKeys"],[303,24,292,22],[304,8,293,6,"closingRouteKeys"],[304,24,293,22],[305,8,294,6,"onOpenRoute"],[305,19,294,17],[306,8,295,6,"onCloseRoute"],[306,20,295,18],[307,8,296,6,"renderHeader"],[307,20,296,18],[308,8,297,6,"isParentHeaderShown"],[308,27,297,25],[309,8,298,6,"isParentModal"],[309,21,298,19],[310,8,299,6,"onTransitionStart"],[310,25,299,23],[311,8,300,6,"onTransitionEnd"],[311,23,300,21],[312,8,301,6,"onGestureStart"],[312,22,301,20],[313,8,302,6,"onGestureEnd"],[313,20,302,18],[314,8,303,6,"onGestureCancel"],[314,23,303,21],[315,8,304,6,"detachInactiveScreens"],[315,29,304,27],[315,32,304,30,"Platform"],[315,49,304,38],[315,50,304,39,"OS"],[315,52,304,41],[315,57,304,46],[315,62,304,51],[315,66,304,55,"Platform"],[315,83,304,63],[315,84,304,64,"OS"],[315,86,304,66],[315,91,304,71],[315,100,304,80],[315,104,304,84,"Platform"],[315,121,304,92],[315,122,304,93,"OS"],[315,124,304,95],[315,129,304,100],[316,6,305,4],[316,7,305,5],[316,10,305,8],[316,14,305,12],[316,15,305,13,"props"],[316,20,305,18],[317,6,306,4],[317,12,306,10],[318,8,307,6,"scenes"],[318,14,307,12],[319,8,308,6,"layout"],[319,14,308,12],[320,8,309,6,"gestures"],[320,16,309,14],[321,8,310,6,"headerHeights"],[322,6,311,4],[322,7,311,5],[322,10,311,8],[322,14,311,12],[322,15,311,13,"state"],[322,20,311,18],[323,6,312,4],[323,12,312,10,"focusedRoute"],[323,24,312,22],[323,27,312,25,"state"],[323,32,312,30],[323,33,312,31,"routes"],[323,39,312,37],[323,40,312,38,"state"],[323,45,312,43],[323,46,312,44,"index"],[323,51,312,49],[323,52,312,50],[324,6,313,4],[324,12,313,10,"focusedHeaderHeight"],[324,31,313,29],[324,34,313,32,"headerHeights"],[324,47,313,45],[324,48,313,46,"focusedRoute"],[324,60,313,58],[324,61,313,59,"key"],[324,64,313,62],[324,65,313,63],[325,6,314,4],[325,12,314,10,"isFloatHeaderAbsolute"],[325,33,314,31],[325,36,314,34],[325,40,314,38],[325,41,314,39,"state"],[325,46,314,44],[325,47,314,45,"scenes"],[325,53,314,51],[325,54,314,52,"slice"],[325,59,314,57],[325,60,314,58],[325,61,314,59],[325,62,314,60],[325,63,314,61],[325,64,314,62,"some"],[325,68,314,66],[325,69,314,67,"scene"],[325,74,314,72],[325,78,314,76],[326,8,315,6],[326,14,315,12,"options"],[326,21,315,19],[326,24,315,22,"scene"],[326,29,315,27],[326,30,315,28,"descriptor"],[326,40,315,38],[326,41,315,39,"options"],[326,48,315,46],[326,52,315,50],[326,53,315,51],[326,54,315,52],[327,8,316,6],[327,14,316,12],[328,10,317,8,"headerMode"],[328,20,317,18],[329,10,318,8,"headerTransparent"],[329,27,318,25],[330,10,319,8,"headerShown"],[330,21,319,19],[330,24,319,22],[331,8,320,6],[331,9,320,7],[331,12,320,10,"options"],[331,19,320,17],[332,8,321,6],[332,12,321,10,"headerTransparent"],[332,29,321,27],[332,33,321,31,"headerShown"],[332,44,321,42],[332,49,321,47],[332,54,321,52],[332,58,321,56,"headerMode"],[332,68,321,66],[332,73,321,71],[332,81,321,79],[332,83,321,81],[333,10,322,8],[333,17,322,15],[333,21,322,19],[334,8,323,6],[335,8,324,6],[335,15,324,13],[335,20,324,18],[336,6,325,4],[336,7,325,5],[336,8,325,6],[337,6,326,4],[337,10,326,8,"activeScreensLimit"],[337,28,326,26],[337,31,326,29],[337,32,326,30],[338,6,327,4],[338,11,327,9],[338,15,327,13,"i"],[338,16,327,14],[338,19,327,17,"scenes"],[338,25,327,23],[338,26,327,24,"length"],[338,32,327,30],[338,35,327,33],[338,36,327,34],[338,38,327,36,"i"],[338,39,327,37],[338,43,327,41],[338,44,327,42],[338,46,327,44,"i"],[338,47,327,45],[338,49,327,47],[338,51,327,49],[339,8,328,6],[339,14,328,12],[340,10,329,8,"options"],[341,8,330,6],[341,9,330,7],[341,12,330,10,"scenes"],[341,18,330,16],[341,19,330,17,"i"],[341,20,330,18],[341,21,330,19],[341,22,330,20,"descriptor"],[341,32,330,30],[342,8,331,6],[342,14,331,12],[343,10,332,8],[344,10,333,8,"detachPreviousScreen"],[344,30,333,28],[344,33,333,31,"options"],[344,40,333,38],[344,41,333,39,"presentation"],[344,53,333,51],[344,58,333,56],[344,76,333,74],[344,79,333,77],[344,84,333,82],[344,87,333,85,"getIsModalPresentation"],[344,109,333,107],[344,110,333,108,"options"],[344,117,333,115],[344,118,333,116,"cardStyleInterpolator"],[344,139,333,137],[344,140,333,138],[344,143,333,141,"i"],[344,144,333,142],[344,149,333,147],[344,153,333,147,"findLastIndex"],[344,181,333,160],[344,183,333,161,"scenes"],[344,189,333,167],[344,191,333,169,"scene"],[344,196,333,174],[344,200,333,178],[345,12,334,10],[345,18,334,16],[346,14,335,12,"cardStyleInterpolator"],[347,12,336,10],[347,13,336,11],[347,16,336,14,"scene"],[347,21,336,19],[347,22,336,20,"descriptor"],[347,32,336,30],[347,33,336,31,"options"],[347,40,336,38],[348,12,337,10],[348,19,337,17,"cardStyleInterpolator"],[348,40,337,38],[348,45,337,43,"forModalPresentationIOS"],[348,92,337,66],[348,96,337,70,"cardStyleInterpolator"],[348,117,337,91],[348,119,337,93,"name"],[348,123,337,97],[348,128,337,102],[348,153,337,127],[349,10,338,8],[349,11,338,9],[349,12,338,10],[349,15,338,13],[350,8,339,6],[350,9,339,7],[350,12,339,10,"options"],[350,19,339,17],[351,8,340,6],[351,12,340,10,"detachPreviousScreen"],[351,32,340,30],[351,37,340,35],[351,42,340,40],[351,44,340,42],[352,10,341,8,"activeScreensLimit"],[352,28,341,26],[352,30,341,28],[353,8,342,6],[353,9,342,7],[353,15,342,13],[354,10,343,8],[355,10,344,8],[356,10,345,8],[357,10,346,8],[357,14,346,12,"i"],[357,15,346,13],[357,19,346,17,"scenes"],[357,25,346,23],[357,26,346,24,"length"],[357,32,346,30],[357,35,346,33],[357,36,346,34],[357,38,346,36],[358,12,347,10],[359,10,348,8],[360,8,349,6],[361,6,350,4],[362,6,351,4],[362,12,351,10,"floatingHeader"],[362,26,351,24],[362,29,351,27],[362,42,351,40],[362,46,351,40,"_jsx"],[362,61,351,44],[362,63,351,45,"React"],[362,68,351,50],[362,69,351,51,"Fragment"],[362,77,351,59],[362,79,351,61],[363,8,352,6,"children"],[363,16,352,14],[363,18,352,16,"renderHeader"],[363,30,352,28],[363,31,352,29],[364,10,353,8,"mode"],[364,14,353,12],[364,16,353,14],[364,23,353,21],[365,10,354,8,"layout"],[365,16,354,14],[366,10,355,8,"scenes"],[366,16,355,14],[367,10,356,8,"getPreviousScene"],[367,26,356,24],[367,28,356,26],[367,32,356,30],[367,33,356,31,"getPreviousScene"],[367,49,356,47],[368,10,357,8,"getFocusedRoute"],[368,25,357,23],[368,27,357,25],[368,31,357,29],[368,32,357,30,"getFocusedRoute"],[368,47,357,45],[369,10,358,8,"onContentHeightChange"],[369,31,358,29],[369,33,358,31],[369,37,358,35],[369,38,358,36,"handleHeaderLayout"],[369,56,358,54],[370,10,359,8,"style"],[370,15,359,13],[370,17,359,15],[370,18,359,16,"styles"],[370,24,359,22],[370,25,359,23,"floating"],[370,33,359,31],[370,35,359,33,"isFloatHeaderAbsolute"],[370,56,359,54],[370,60,359,58],[371,10,360,8],[372,10,361,8],[373,12,362,10,"height"],[373,18,362,16],[373,20,362,18,"focusedHeaderHeight"],[374,10,363,8],[374,11,363,9],[374,13,363,11,"styles"],[374,19,363,17],[374,20,363,18,"absolute"],[374,28,363,26],[374,29,363,27],[375,8,364,6],[375,9,364,7],[376,6,365,4],[376,7,365,5],[376,9,365,7],[376,17,365,15],[376,18,365,16],[377,6,366,4],[377,13,366,11],[377,26,366,24],[377,30,366,24,"_jsxs"],[377,46,366,29],[377,48,366,30,"View"],[377,61,366,34],[377,63,366,36],[378,8,367,6,"style"],[378,13,367,11],[378,15,367,13,"styles"],[378,21,367,19],[378,22,367,20,"container"],[378,31,367,29],[379,8,368,6,"children"],[379,16,368,14],[379,18,368,16],[379,19,368,17,"isFloatHeaderAbsolute"],[379,40,368,38],[379,43,368,41],[379,47,368,45],[379,50,368,48,"floatingHeader"],[379,64,368,62],[379,66,368,64],[379,79,368,77],[379,83,368,77,"_jsx"],[379,98,368,81],[379,100,368,82,"MaybeScreenContainer"],[379,129,368,102],[379,131,368,104],[380,10,369,8,"enabled"],[380,17,369,15],[380,19,369,17,"detachInactiveScreens"],[380,40,369,38],[381,10,370,8,"style"],[381,15,370,13],[381,17,370,15,"styles"],[381,23,370,21],[381,24,370,22,"container"],[381,33,370,31],[382,10,371,8,"onLayout"],[382,18,371,16],[382,20,371,18],[382,24,371,22],[382,25,371,23,"handleLayout"],[382,37,371,35],[383,10,372,8,"children"],[383,18,372,16],[383,20,372,18],[383,21,372,19],[383,24,372,22,"routes"],[383,30,372,28],[383,32,372,30],[383,35,372,33,"state"],[383,40,372,38],[383,41,372,39,"preloadedRoutes"],[383,56,372,54],[383,57,372,55],[383,58,372,56,"map"],[383,61,372,59],[383,62,372,60],[383,63,372,61,"route"],[383,68,372,66],[383,70,372,68,"index"],[383,75,372,73],[383,80,372,78],[384,12,373,10],[384,18,373,16,"focused"],[384,25,373,23],[384,28,373,26,"focusedRoute"],[384,40,373,38],[384,41,373,39,"key"],[384,44,373,42],[384,49,373,47,"route"],[384,54,373,52],[384,55,373,53,"key"],[384,58,373,56],[385,12,374,10],[385,18,374,16,"gesture"],[385,25,374,23],[385,28,374,26,"gestures"],[385,36,374,34],[385,37,374,35,"route"],[385,42,374,40],[385,43,374,41,"key"],[385,46,374,44],[385,47,374,45],[386,12,375,10],[386,18,375,16,"scene"],[386,23,375,21],[386,26,375,24,"scenes"],[386,32,375,30],[386,33,375,31,"index"],[386,38,375,36],[386,39,375,37],[387,12,376,10],[388,12,377,10],[389,12,378,10],[390,12,379,10],[391,12,380,10],[391,18,380,16,"isPreloaded"],[391,29,380,27],[391,32,380,30,"state"],[391,37,380,35],[391,38,380,36,"preloadedRoutes"],[391,53,380,51],[391,54,380,52,"includes"],[391,62,380,60],[391,63,380,61,"route"],[391,68,380,66],[391,69,380,67],[391,73,380,71],[391,74,380,72,"routes"],[391,80,380,78],[391,81,380,79,"includes"],[391,89,380,87],[391,90,380,88,"route"],[391,95,380,93],[391,96,380,94],[392,12,381,10],[392,16,381,14,"state"],[392,21,381,19],[392,22,381,20,"preloadedRoutes"],[392,37,381,35],[392,38,381,36,"includes"],[392,46,381,44],[392,47,381,45,"route"],[392,52,381,50],[392,53,381,51],[392,57,381,55,"routes"],[392,63,381,61],[392,64,381,62,"includes"],[392,72,381,70],[392,73,381,71,"route"],[392,78,381,76],[392,79,381,77],[392,83,381,81,"index"],[392,88,381,86],[392,92,381,90,"routes"],[392,98,381,96],[392,99,381,97,"length"],[392,105,381,103],[392,107,381,105],[393,14,382,12],[393,21,382,19],[393,25,382,23],[394,12,383,10],[396,12,385,10],[397,12,386,10],[398,12,387,10],[399,12,388,10],[400,12,389,10],[400,16,389,14,"isScreenActive"],[400,30,389,28],[400,33,389,31],[400,34,389,32],[401,12,390,10],[401,16,390,14,"index"],[401,21,390,19],[401,24,390,22,"routes"],[401,30,390,28],[401,31,390,29,"length"],[401,37,390,35],[401,40,390,38,"activeScreensLimit"],[401,58,390,56],[401,61,390,59],[401,62,390,60],[401,66,390,64,"isPreloaded"],[401,77,390,75],[401,79,390,77],[402,14,391,12],[403,14,392,12,"isScreenActive"],[403,28,392,26],[403,31,392,29,"STATE_INACTIVE"],[403,45,392,43],[404,12,393,10],[404,13,393,11],[404,19,393,17],[405,14,394,12],[405,20,394,18,"sceneForActivity"],[405,36,394,34],[405,39,394,37,"scenes"],[405,45,394,43],[405,46,394,44,"routes"],[405,52,394,50],[405,53,394,51,"length"],[405,59,394,57],[405,62,394,60],[405,63,394,61],[405,64,394,62],[406,14,395,12],[406,20,395,18,"outputValue"],[406,31,395,29],[406,34,395,32,"index"],[406,39,395,37],[406,44,395,42,"routes"],[406,50,395,48],[406,51,395,49,"length"],[406,57,395,55],[406,60,395,58],[406,61,395,59],[406,64,395,62,"STATE_ON_TOP"],[406,76,395,74],[406,77,395,75],[407,14,395,75],[407,16,396,14,"index"],[407,21,396,19],[407,25,396,23,"routes"],[407,31,396,29],[407,32,396,30,"length"],[407,38,396,36],[407,41,396,39,"activeScreensLimit"],[407,59,396,57],[407,62,396,60,"STATE_TRANSITIONING_OR_BELOW_TOP"],[407,94,396,92],[407,95,396,93],[408,14,396,93],[408,16,397,14,"STATE_INACTIVE"],[408,30,397,28],[408,31,397,29],[408,32,397,30],[409,14,398,12,"isScreenActive"],[409,28,398,26],[409,31,398,29,"sceneForActivity"],[409,47,398,45],[409,50,398,48,"sceneForActivity"],[409,66,398,64],[409,67,398,65,"progress"],[409,75,398,73],[409,76,398,74,"current"],[409,83,398,81],[409,84,398,82,"interpolate"],[409,95,398,93],[409,96,398,94],[410,16,399,14,"inputRange"],[410,26,399,24],[410,28,399,26],[410,29,399,27],[410,30,399,28],[410,32,399,30],[410,33,399,31],[410,36,399,34,"EPSILON"],[410,43,399,41],[410,45,399,43],[410,46,399,44],[410,47,399,45],[411,16,400,14,"outputRange"],[411,27,400,25],[411,29,400,27],[411,30,400,28],[411,31,400,29],[411,33,400,31],[411,34,400,32],[411,36,400,34,"outputValue"],[411,47,400,45],[411,48,400,46],[412,16,401,14,"extrapolate"],[412,27,401,25],[412,29,401,27],[413,14,402,12],[413,15,402,13],[413,16,402,14],[413,19,402,17,"STATE_TRANSITIONING_OR_BELOW_TOP"],[413,51,402,49],[414,12,403,10],[415,12,404,10],[415,18,404,16],[416,14,405,12,"headerShown"],[416,25,405,23],[416,28,405,26],[416,32,405,30],[417,14,406,12,"headerTransparent"],[417,31,406,29],[418,14,407,12,"freezeOnBlur"],[418,26,407,24],[419,14,408,12,"autoHideHomeIndicator"],[420,12,409,10],[420,13,409,11],[420,16,409,14,"scene"],[420,21,409,19],[420,22,409,20,"descriptor"],[420,32,409,30],[420,33,409,31,"options"],[420,40,409,38],[421,12,410,10],[421,18,410,16,"safeAreaInsetTop"],[421,34,410,32],[421,37,410,35,"insets"],[421,43,410,41],[421,44,410,42,"top"],[421,47,410,45],[422,12,411,10],[422,18,411,16,"safeAreaInsetRight"],[422,36,411,34],[422,39,411,37,"insets"],[422,45,411,43],[422,46,411,44,"right"],[422,51,411,49],[423,12,412,10],[423,18,412,16,"safeAreaInsetBottom"],[423,37,412,35],[423,40,412,38,"insets"],[423,46,412,44],[423,47,412,45,"bottom"],[423,53,412,51],[424,12,413,10],[424,18,413,16,"safeAreaInsetLeft"],[424,35,413,33],[424,38,413,36,"insets"],[424,44,413,42],[424,45,413,43,"left"],[424,49,413,47],[425,12,414,10],[425,18,414,16,"headerHeight"],[425,30,414,28],[425,33,414,31,"headerShown"],[425,44,414,42],[425,49,414,47],[425,54,414,52],[425,57,414,55,"headerHeights"],[425,70,414,68],[425,71,414,69,"route"],[425,76,414,74],[425,77,414,75,"key"],[425,80,414,78],[425,81,414,79],[425,84,414,82],[425,85,414,83],[427,12,416,10],[428,12,417,10],[428,18,417,16,"interpolationIndex"],[428,36,417,34],[428,39,417,37,"getInterpolationIndex"],[428,60,417,58],[428,61,417,59,"scenes"],[428,67,417,65],[428,69,417,67,"index"],[428,74,417,72],[428,75,417,73],[429,12,418,10],[429,18,418,16,"isModal"],[429,25,418,23],[429,28,418,26,"getIsModal"],[429,38,418,36],[429,39,418,37,"scene"],[429,44,418,42],[429,46,418,44,"interpolationIndex"],[429,64,418,62],[429,66,418,64,"isParentModal"],[429,79,418,77],[429,80,418,78],[430,12,419,10],[430,18,419,16,"isNextScreenTransparent"],[430,41,419,39],[430,44,419,42,"scenes"],[430,50,419,48],[430,51,419,49,"index"],[430,56,419,54],[430,59,419,57],[430,60,419,58],[430,61,419,59],[430,63,419,61,"descriptor"],[430,73,419,71],[430,74,419,72,"options"],[430,81,419,79],[430,82,419,80,"presentation"],[430,94,419,92],[430,99,419,97],[430,117,419,115],[431,12,420,10],[431,18,420,16,"detachCurrentScreen"],[431,37,420,35],[431,40,420,38,"scenes"],[431,46,420,44],[431,47,420,45,"index"],[431,52,420,50],[431,55,420,53],[431,56,420,54],[431,57,420,55],[431,59,420,57,"descriptor"],[431,69,420,67],[431,70,420,68,"options"],[431,77,420,75],[431,78,420,76,"detachPreviousScreen"],[431,98,420,96],[431,103,420,101],[431,108,420,106],[432,12,421,10],[432,19,421,17],[432,32,421,30],[432,36,421,30,"_jsx"],[432,51,421,34],[432,53,421,35,"MaybeScreen"],[432,73,421,46],[432,75,421,48],[433,14,422,12,"style"],[433,19,422,17],[433,21,422,19],[433,22,422,20,"StyleSheet"],[433,41,422,30],[433,42,422,31,"absoluteFill"],[433,54,422,43],[433,55,422,44],[434,14,423,12,"enabled"],[434,21,423,19],[434,23,423,21,"detachInactiveScreens"],[434,44,423,42],[435,14,424,12,"active"],[435,20,424,18],[435,22,424,20,"isScreenActive"],[435,36,424,34],[436,14,425,12,"freezeOnBlur"],[436,26,425,24],[436,28,425,26,"freezeOnBlur"],[436,40,425,38],[437,14,426,12,"shouldFreeze"],[437,26,426,24],[437,28,426,26,"isScreenActive"],[437,42,426,40],[437,47,426,45,"STATE_INACTIVE"],[437,61,426,59],[437,65,426,63],[437,66,426,64,"isPreloaded"],[437,77,426,75],[438,14,427,12,"homeIndicatorHidden"],[438,33,427,31],[438,35,427,33,"autoHideHomeIndicator"],[438,56,427,54],[439,14,428,12,"pointerEvents"],[439,27,428,25],[439,29,428,27],[439,39,428,37],[440,14,429,12,"children"],[440,22,429,20],[440,24,429,22],[440,37,429,35],[440,41,429,35,"_jsx"],[440,56,429,39],[440,58,429,40,"CardContainer"],[440,86,429,53],[440,88,429,55],[441,16,430,14,"index"],[441,21,430,19],[441,23,430,21,"index"],[441,28,430,26],[442,16,431,14,"interpolationIndex"],[442,34,431,32],[442,36,431,34,"interpolationIndex"],[442,54,431,52],[443,16,432,14,"modal"],[443,21,432,19],[443,23,432,21,"isModal"],[443,30,432,28],[444,16,433,14,"active"],[444,22,433,20],[444,24,433,22,"index"],[444,29,433,27],[444,34,433,32,"routes"],[444,40,433,38],[444,41,433,39,"length"],[444,47,433,45],[444,50,433,48],[444,51,433,49],[445,16,434,14,"focused"],[445,23,434,21],[445,25,434,23,"focused"],[445,32,434,30],[446,16,435,14,"opening"],[446,23,435,21],[446,25,435,23,"openingRouteKeys"],[446,41,435,39],[446,42,435,40,"includes"],[446,50,435,48],[446,51,435,49,"route"],[446,56,435,54],[446,57,435,55,"key"],[446,60,435,58],[446,61,435,59],[447,16,436,14,"closing"],[447,23,436,21],[447,25,436,23,"closingRouteKeys"],[447,41,436,39],[447,42,436,40,"includes"],[447,50,436,48],[447,51,436,49,"route"],[447,56,436,54],[447,57,436,55,"key"],[447,60,436,58],[447,61,436,59],[448,16,437,14,"layout"],[448,22,437,20],[448,24,437,22,"layout"],[448,30,437,28],[449,16,438,14,"gesture"],[449,23,438,21],[449,25,438,23,"gesture"],[449,32,438,30],[450,16,439,14,"scene"],[450,21,439,19],[450,23,439,21,"scene"],[450,28,439,26],[451,16,440,14,"safeAreaInsetTop"],[451,32,440,30],[451,34,440,32,"safeAreaInsetTop"],[451,50,440,48],[452,16,441,14,"safeAreaInsetRight"],[452,34,441,32],[452,36,441,34,"safeAreaInsetRight"],[452,54,441,52],[453,16,442,14,"safeAreaInsetBottom"],[453,35,442,33],[453,37,442,35,"safeAreaInsetBottom"],[453,56,442,54],[454,16,443,14,"safeAreaInsetLeft"],[454,33,443,31],[454,35,443,33,"safeAreaInsetLeft"],[454,52,443,50],[455,16,444,14,"onGestureStart"],[455,30,444,28],[455,32,444,30,"onGestureStart"],[455,46,444,44],[456,16,445,14,"onGestureCancel"],[456,31,445,29],[456,33,445,31,"onGestureCancel"],[456,48,445,46],[457,16,446,14,"onGestureEnd"],[457,28,446,26],[457,30,446,28,"onGestureEnd"],[457,42,446,40],[458,16,447,14,"headerHeight"],[458,28,447,26],[458,30,447,28,"headerHeight"],[458,42,447,40],[459,16,448,14,"isParentHeaderShown"],[459,35,448,33],[459,37,448,35,"isParentHeaderShown"],[459,56,448,54],[460,16,449,14,"onHeaderHeightChange"],[460,36,449,34],[460,38,449,36],[460,42,449,40],[460,43,449,41,"handleHeaderLayout"],[460,61,449,59],[461,16,450,14,"getPreviousScene"],[461,32,450,30],[461,34,450,32],[461,38,450,36],[461,39,450,37,"getPreviousScene"],[461,55,450,53],[462,16,451,14,"getFocusedRoute"],[462,31,451,29],[462,33,451,31],[462,37,451,35],[462,38,451,36,"getFocusedRoute"],[462,53,451,51],[463,16,452,14,"hasAbsoluteFloatHeader"],[463,38,452,36],[463,40,452,38,"isFloatHeaderAbsolute"],[463,61,452,59],[463,65,452,63],[463,66,452,64,"headerTransparent"],[463,83,452,81],[464,16,453,14,"renderHeader"],[464,28,453,26],[464,30,453,28,"renderHeader"],[464,42,453,40],[465,16,454,14,"onOpenRoute"],[465,27,454,25],[465,29,454,27,"onOpenRoute"],[465,40,454,38],[466,16,455,14,"onCloseRoute"],[466,28,455,26],[466,30,455,28,"onCloseRoute"],[466,42,455,40],[467,16,456,14,"onTransitionStart"],[467,33,456,31],[467,35,456,33,"onTransitionStart"],[467,52,456,50],[468,16,457,14,"onTransitionEnd"],[468,31,457,29],[468,33,457,31,"onTransitionEnd"],[468,48,457,46],[469,16,458,14,"isNextScreenTransparent"],[469,39,458,37],[469,41,458,39,"isNextScreenTransparent"],[469,64,458,62],[470,16,459,14,"detachCurrentScreen"],[470,35,459,33],[470,37,459,35,"detachCurrentScreen"],[470,56,459,54],[471,16,460,14,"preloaded"],[471,25,460,23],[471,27,460,25,"isPreloaded"],[472,14,461,12],[472,15,461,13],[473,12,462,10],[473,13,462,11],[473,15,462,13,"route"],[473,20,462,18],[473,21,462,19,"key"],[473,24,462,22],[473,25,462,23],[474,10,463,8],[474,11,463,9],[475,8,464,6],[475,9,464,7],[475,10,464,8],[475,12,464,10,"isFloatHeaderAbsolute"],[475,33,464,31],[475,36,464,34,"floatingHeader"],[475,50,464,48],[475,53,464,51],[475,57,464,55],[476,6,465,4],[476,7,465,5],[476,8,465,6],[477,4,466,2],[478,2,467,0],[479,2,467,1,"exports"],[479,9,467,1],[479,10,467,1,"CardStack"],[479,19,467,1],[479,22,467,1,"CardStack"],[479,31,467,1],[480,2,468,0],[480,8,468,6,"styles"],[480,14,468,12],[480,17,468,15,"StyleSheet"],[480,36,468,25],[480,37,468,26,"create"],[480,43,468,32],[480,44,468,33],[481,4,469,2,"container"],[481,13,469,11],[481,15,469,13],[482,6,470,4,"flex"],[482,10,470,8],[482,12,470,10],[483,4,471,2],[483,5,471,3],[484,4,472,2,"absolute"],[484,12,472,10],[484,14,472,12],[485,6,473,4,"position"],[485,14,473,12],[485,16,473,14],[485,26,473,24],[486,6,474,4,"top"],[486,9,474,7],[486,11,474,9],[486,12,474,10],[487,6,475,4,"start"],[487,11,475,9],[487,13,475,11],[487,14,475,12],[488,6,476,4,"end"],[488,9,476,7],[488,11,476,9],[489,4,477,2],[489,5,477,3],[490,4,478,2,"floating"],[490,12,478,10],[490,14,478,12],[491,6,479,4,"zIndex"],[491,12,479,10],[491,14,479,12],[492,4,480,2],[493,2,481,0],[493,3,481,1],[493,4,481,2],[494,0,481,3],[494,3]],"functionMap":{"names":["<global>","getInterpolationIndex","getIsModalPresentation","getIsModal","getHeaderHeights","scenes.reduce$argument_0","getDistanceFromOptions","getProgressFromGesture","getDefaultAnimation","getAnimationEnabled","CardStack","getDerivedStateFromProps","reduce$argument_0","map$argument_0","scene.__memo.every$argument_0","constructor","handleLayout","setState$argument_0","handleHeaderLayout","getFocusedRoute","getPreviousScene","scenes.find$argument_0","render","state.scenes.slice.some$argument_0","findLastIndex$argument_1"],"mappings":"AAA;8BCmC;CDe;+BEC;CFI;mBGC;CHU;yBIC;uBCC;GDW;CJC;+BMC;CNO;+BOC;CPiB;AQC;CRI;OSC;CTE;OUC;ECC;8ECI;KDO;yEEK;yCC4D;ODG;KFI;GDQ;EKC;GLe;iBMC;kBCS;KDQ;GNC;uBQC;kBDI;KCa;GRC;oBSC;GTK;qBUC;wCCa,yDD;GVI;EYC;mEC2B;KDW;yKEQ;SFK;4DTkC;SS2F;GZG;CVC"}},"type":"js/module"}]}