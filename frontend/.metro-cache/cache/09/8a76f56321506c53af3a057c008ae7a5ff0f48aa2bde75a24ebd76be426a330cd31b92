{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@react-navigation/elements","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":88,"index":103}}],"key":"LmqW7jh+SpCzQZMkzh+Awcuawt0=","exportNames":["*"]}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":104},"end":{"line":4,"column":71,"index":175}}],"key":"yKhyWCfwa1gXEwEbMKnWHykYbZ4=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":176},"end":{"line":5,"column":31,"index":207}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"]}},{"name":"react-native-safe-area-context","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":257},"end":{"line":7,"column":71,"index":328}}],"key":"XjdTKvCUWX6CbQzg5fSDHG/WgHk=","exportNames":["*"]}},{"name":"../../utils/ModalPresentationContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":329},"end":{"line":8,"column":83,"index":412}}],"key":"Df1aec0EkzLZaxqOOhpXHtHsUBw=","exportNames":["*"]}},{"name":"../GestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":413},"end":{"line":9,"column":59,"index":472}}],"key":"bP+xiBbX7IFbUJ129q5EloqQNcU=","exportNames":["*"]}},{"name":"../Header/HeaderContainer.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":473},"end":{"line":10,"column":63,"index":536}}],"key":"ssAYFj+p5GmloopIXQZmsY6VIu4=","exportNames":["*"]}},{"name":"./CardStack.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":537},"end":{"line":11,"column":64,"index":601}}],"key":"FX5td+JkxKGnfFTvjJTV5ylJcpk=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":602},"end":{"line":12,"column":48,"index":650}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StackView = void 0;\n  var _elements = require(_dependencyMap[1], \"@react-navigation/elements\");\n  var _native = require(_dependencyMap[2], \"@react-navigation/native\");\n  var React = _interopRequireWildcard(require(_dependencyMap[3], \"react\"));\n  var _StyleSheet = _interopRequireDefault(require(_dependencyMap[4], \"react-native-web/dist/exports/StyleSheet\"));\n  var _View = _interopRequireDefault(require(_dependencyMap[5], \"react-native-web/dist/exports/View\"));\n  var _reactNativeSafeAreaContext = require(_dependencyMap[6], \"react-native-safe-area-context\");\n  var _ModalPresentationContext = require(_dependencyMap[7], \"../../utils/ModalPresentationContext.js\");\n  var _GestureHandler = require(_dependencyMap[8], \"../GestureHandler\");\n  var _HeaderContainer = require(_dependencyMap[9], \"../Header/HeaderContainer.js\");\n  var _CardStack = require(_dependencyMap[10], \"./CardStack.js\");\n  var _jsxRuntime = require(_dependencyMap[11], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const GestureHandlerWrapper = _GestureHandler.GestureHandlerRootView ?? _View.default;\n\n  /**\n   * Compare two arrays with primitive values as the content.\n   * We need to make sure that both values and order match.\n   */\n  const isArrayEqual = (a, b) => a.length === b.length && a.every((it, index) => Object.is(it, b[index]));\n  class StackView extends React.Component {\n    static getDerivedStateFromProps(props, state) {\n      // If there was no change in routes, we don't need to compute anything\n      if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(r => r.key), state.previousRoutes.map(r => r.key))) && state.routes.length) {\n        let routes = state.routes;\n        let previousRoutes = state.previousRoutes;\n        let descriptors = props.descriptors;\n        let previousDescriptors = state.previousDescriptors;\n        if (props.descriptors !== state.previousDescriptors) {\n          descriptors = state.routes.reduce((acc, route) => {\n            acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n            return acc;\n          }, {});\n          previousDescriptors = props.descriptors;\n        }\n        if (props.state.routes !== state.previousRoutes) {\n          // if any route objects have changed, we should update them\n          const map = props.state.routes.reduce((acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          }, {});\n          routes = state.routes.map(route => map[route.key] || route);\n          previousRoutes = props.state.routes;\n        }\n        return {\n          routes,\n          previousRoutes,\n          descriptors,\n          previousDescriptors\n        };\n      }\n\n      // Here we determine which routes were added or removed to animate them\n      // We keep a copy of the route being removed in local state to be able to animate it\n\n      let routes = props.state.index < props.state.routes.length - 1 ?\n      // Remove any extra routes from the state\n      // The last visible route should be the focused route, i.e. at current index\n      props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n\n      // Now we need to determine which routes were added and removed\n      const {\n        previousRoutes\n      } = state;\n      let {\n        openingRouteKeys,\n        closingRouteKeys,\n        replacingRouteKeys\n      } = state;\n      const previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n      const nextFocusedRoute = routes[routes.length - 1];\n      const isAnimationEnabled = key => {\n        const descriptor = props.descriptors[key] || state.descriptors[key];\n        return (0, _CardStack.getAnimationEnabled)(descriptor?.options.animation);\n      };\n      const getAnimationTypeForReplace = key => {\n        const descriptor = props.descriptors[key] || state.descriptors[key];\n        return descriptor.options.animationTypeForReplace ?? 'push';\n      };\n      if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n        // We only need to animate routes if the focused route changed\n        // Animating previous routes won't be visible coz the focused route is on top of everything\n\n        if (previousRoutes.some(r => r.key === nextFocusedRoute.key) && !routes.some(r => r.key === previousFocusedRoute.key)) {\n          // The previously focused route was removed, and the new focused route was already present\n          // We treat this as a pop\n\n          if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n            closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n            // Sometimes a route can be closed before the opening animation finishes\n            // So we also need to remove it from the opening list\n            openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n            replacingRouteKeys = replacingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n            // Keep a copy of route being removed in the state to be able to animate it\n            routes = [...routes, previousFocusedRoute];\n          }\n        } else {\n          // A route has come to the focus, we treat this as a push\n          // A replace or rearranging can also trigger this\n          // The animation should look like push\n\n          if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n            // In this case, we need to animate pushing the focused route\n            // We don't care about animating any other added routes because they won't be visible\n            openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n            closingRouteKeys = closingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n            replacingRouteKeys = replacingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n            if (!routes.some(r => r.key === previousFocusedRoute.key)) {\n              // The previous focused route isn't present in state, we treat this as a replace\n\n              openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n              if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n                closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n                // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n                // But since user configured it to animate the old screen like a pop, we need to add this without animation\n                // So remove it from `openingRouteKeys` which will remove the animation\n                openingRouteKeys = openingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n\n                // Keep the route being removed at the end to animate it out\n                routes = [...routes, previousFocusedRoute];\n              } else {\n                replacingRouteKeys = [...replacingRouteKeys, previousFocusedRoute.key];\n                closingRouteKeys = closingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n                // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n                // We need to insert it just before the focused one (the route being pushed)\n                // After the push animation is completed, routes being replaced will be removed completely\n                routes = routes.slice();\n                routes.splice(routes.length - 1, 0, previousFocusedRoute);\n              }\n            }\n          }\n        }\n      } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n        // Keep the routes we are closing or replacing if animation is enabled for them\n        routes = routes.slice();\n        routes.splice(routes.length - 1, 0, ...state.routes.filter(({\n          key\n        }) => isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false));\n      }\n      if (!routes.length) {\n        throw new Error('There should always be at least one route in the navigation state.');\n      }\n      const descriptors = routes.reduce((acc, route) => {\n        acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n        return acc;\n      }, {});\n      return {\n        routes,\n        previousRoutes: props.state.routes,\n        previousDescriptors: props.descriptors,\n        openingRouteKeys,\n        closingRouteKeys,\n        replacingRouteKeys,\n        descriptors\n      };\n    }\n    state = {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    };\n    getPreviousRoute = ({\n      route\n    }) => {\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      const routes = this.state.routes.filter(r => r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key));\n      const index = routes.findIndex(r => r.key === route.key);\n      return routes[index - 1];\n    };\n    renderHeader = props => {\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_HeaderContainer.HeaderContainer, {\n        ...props\n      });\n    };\n    handleOpenRoute = ({\n      route\n    }) => {\n      const {\n        state,\n        navigation\n      } = this.props;\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      if (closingRouteKeys.some(key => key === route.key) && replacingRouteKeys.every(key => key !== route.key) && state.routeNames.includes(route.name) && !state.routes.some(r => r.key === route.key)) {\n        // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n        // So we need to add this route back to the state\n        navigation.dispatch(state => {\n          const routes = [...state.routes.filter(r => r.key !== route.key), route];\n          return _native.CommonActions.reset({\n            ...state,\n            routes,\n            index: routes.length - 1\n          });\n        });\n      } else {\n        this.setState(state => ({\n          routes: state.replacingRouteKeys.length ? state.routes.filter(r => !state.replacingRouteKeys.includes(r.key)) : state.routes,\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key),\n          replacingRouteKeys: []\n        }));\n      }\n    };\n    handleCloseRoute = ({\n      route\n    }) => {\n      const {\n        state,\n        navigation\n      } = this.props;\n      if (state.routes.some(r => r.key === route.key)) {\n        // If a route exists in state, trigger a pop\n        // This will happen in when the route was closed from the card component\n        // e.g. When the close animation triggered from a gesture ends\n        navigation.dispatch({\n          ..._native.StackActions.pop(),\n          source: route.key,\n          target: state.key\n        });\n      } else {\n        // We need to clean up any state tracking the route and pop it immediately\n        this.setState(state => ({\n          routes: state.routes.filter(r => r.key !== route.key),\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key)\n        }));\n      }\n    };\n    handleTransitionStart = ({\n      route\n    }, closing) => this.props.navigation.emit({\n      type: 'transitionStart',\n      data: {\n        closing\n      },\n      target: route.key\n    });\n    handleTransitionEnd = ({\n      route\n    }, closing) => this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: {\n        closing\n      },\n      target: route.key\n    });\n    handleGestureStart = ({\n      route\n    }) => {\n      this.props.navigation.emit({\n        type: 'gestureStart',\n        target: route.key\n      });\n    };\n    handleGestureEnd = ({\n      route\n    }) => {\n      this.props.navigation.emit({\n        type: 'gestureEnd',\n        target: route.key\n      });\n    };\n    handleGestureCancel = ({\n      route\n    }) => {\n      this.props.navigation.emit({\n        type: 'gestureCancel',\n        target: route.key\n      });\n    };\n    render() {\n      const {\n        state,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        descriptors: _,\n        ...rest\n      } = this.props;\n      const {\n        routes,\n        descriptors,\n        openingRouteKeys,\n        closingRouteKeys\n      } = this.state;\n      const preloadedDescriptors = state.preloadedRoutes.reduce((acc, route) => {\n        acc[route.key] = acc[route.key] || this.props.describe(route, true);\n        return acc;\n      }, {});\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(GestureHandlerWrapper, {\n        style: styles.container,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_elements.SafeAreaProviderCompat, {\n          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeSafeAreaContext.SafeAreaInsetsContext.Consumer, {\n            children: insets => /*#__PURE__*/(0, _jsxRuntime.jsx)(_ModalPresentationContext.ModalPresentationContext.Consumer, {\n              children: isParentModal => /*#__PURE__*/(0, _jsxRuntime.jsx)(_elements.HeaderShownContext.Consumer, {\n                children: isParentHeaderShown => /*#__PURE__*/(0, _jsxRuntime.jsx)(_CardStack.CardStack, {\n                  insets: insets,\n                  isParentHeaderShown: isParentHeaderShown,\n                  isParentModal: isParentModal,\n                  getPreviousRoute: this.getPreviousRoute,\n                  routes: routes,\n                  openingRouteKeys: openingRouteKeys,\n                  closingRouteKeys: closingRouteKeys,\n                  onOpenRoute: this.handleOpenRoute,\n                  onCloseRoute: this.handleCloseRoute,\n                  onTransitionStart: this.handleTransitionStart,\n                  onTransitionEnd: this.handleTransitionEnd,\n                  renderHeader: this.renderHeader,\n                  state: state,\n                  descriptors: descriptors,\n                  onGestureStart: this.handleGestureStart,\n                  onGestureEnd: this.handleGestureEnd,\n                  onGestureCancel: this.handleGestureCancel,\n                  preloadedDescriptors: preloadedDescriptors,\n                  ...rest\n                })\n              })\n            })\n          })\n        })\n      });\n    }\n  }\n  exports.StackView = StackView;\n  const styles = _StyleSheet.default.create({\n    container: {\n      flex: 1\n    }\n  });\n});","lineCount":348,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"StackView"],[8,19,1,13],[9,2,3,0],[9,6,3,0,"_elements"],[9,15,3,0],[9,18,3,0,"require"],[9,25,3,0],[9,26,3,0,"_dependencyMap"],[9,40,3,0],[10,2,4,0],[10,6,4,0,"_native"],[10,13,4,0],[10,16,4,0,"require"],[10,23,4,0],[10,24,4,0,"_dependencyMap"],[10,38,4,0],[11,2,5,0],[11,6,5,0,"React"],[11,11,5,0],[11,14,5,0,"_interopRequireWildcard"],[11,37,5,0],[11,38,5,0,"require"],[11,45,5,0],[11,46,5,0,"_dependencyMap"],[11,60,5,0],[12,2,5,31],[12,6,5,31,"_StyleSheet"],[12,17,5,31],[12,20,5,31,"_interopRequireDefault"],[12,42,5,31],[12,43,5,31,"require"],[12,50,5,31],[12,51,5,31,"_dependencyMap"],[12,65,5,31],[13,2,5,31],[13,6,5,31,"_View"],[13,11,5,31],[13,14,5,31,"_interopRequireDefault"],[13,36,5,31],[13,37,5,31,"require"],[13,44,5,31],[13,45,5,31,"_dependencyMap"],[13,59,5,31],[14,2,7,0],[14,6,7,0,"_reactNativeSafeAreaContext"],[14,33,7,0],[14,36,7,0,"require"],[14,43,7,0],[14,44,7,0,"_dependencyMap"],[14,58,7,0],[15,2,8,0],[15,6,8,0,"_ModalPresentationContext"],[15,31,8,0],[15,34,8,0,"require"],[15,41,8,0],[15,42,8,0,"_dependencyMap"],[15,56,8,0],[16,2,9,0],[16,6,9,0,"_GestureHandler"],[16,21,9,0],[16,24,9,0,"require"],[16,31,9,0],[16,32,9,0,"_dependencyMap"],[16,46,9,0],[17,2,10,0],[17,6,10,0,"_HeaderContainer"],[17,22,10,0],[17,25,10,0,"require"],[17,32,10,0],[17,33,10,0,"_dependencyMap"],[17,47,10,0],[18,2,11,0],[18,6,11,0,"_CardStack"],[18,16,11,0],[18,19,11,0,"require"],[18,26,11,0],[18,27,11,0,"_dependencyMap"],[18,41,11,0],[19,2,12,0],[19,6,12,0,"_jsxRuntime"],[19,17,12,0],[19,20,12,0,"require"],[19,27,12,0],[19,28,12,0,"_dependencyMap"],[19,42,12,0],[20,2,12,48],[20,11,12,48,"_interopRequireWildcard"],[20,35,12,48,"e"],[20,36,12,48],[20,38,12,48,"t"],[20,39,12,48],[20,68,12,48,"WeakMap"],[20,75,12,48],[20,81,12,48,"r"],[20,82,12,48],[20,89,12,48,"WeakMap"],[20,96,12,48],[20,100,12,48,"n"],[20,101,12,48],[20,108,12,48,"WeakMap"],[20,115,12,48],[20,127,12,48,"_interopRequireWildcard"],[20,150,12,48],[20,162,12,48,"_interopRequireWildcard"],[20,163,12,48,"e"],[20,164,12,48],[20,166,12,48,"t"],[20,167,12,48],[20,176,12,48,"t"],[20,177,12,48],[20,181,12,48,"e"],[20,182,12,48],[20,186,12,48,"e"],[20,187,12,48],[20,188,12,48,"__esModule"],[20,198,12,48],[20,207,12,48,"e"],[20,208,12,48],[20,214,12,48,"o"],[20,215,12,48],[20,217,12,48,"i"],[20,218,12,48],[20,220,12,48,"f"],[20,221,12,48],[20,226,12,48,"__proto__"],[20,235,12,48],[20,243,12,48,"default"],[20,250,12,48],[20,252,12,48,"e"],[20,253,12,48],[20,270,12,48,"e"],[20,271,12,48],[20,294,12,48,"e"],[20,295,12,48],[20,320,12,48,"e"],[20,321,12,48],[20,330,12,48,"f"],[20,331,12,48],[20,337,12,48,"o"],[20,338,12,48],[20,341,12,48,"t"],[20,342,12,48],[20,345,12,48,"n"],[20,346,12,48],[20,349,12,48,"r"],[20,350,12,48],[20,358,12,48,"o"],[20,359,12,48],[20,360,12,48,"has"],[20,363,12,48],[20,364,12,48,"e"],[20,365,12,48],[20,375,12,48,"o"],[20,376,12,48],[20,377,12,48,"get"],[20,380,12,48],[20,381,12,48,"e"],[20,382,12,48],[20,385,12,48,"o"],[20,386,12,48],[20,387,12,48,"set"],[20,390,12,48],[20,391,12,48,"e"],[20,392,12,48],[20,394,12,48,"f"],[20,395,12,48],[20,411,12,48,"t"],[20,412,12,48],[20,416,12,48,"e"],[20,417,12,48],[20,433,12,48,"t"],[20,434,12,48],[20,441,12,48,"hasOwnProperty"],[20,455,12,48],[20,456,12,48,"call"],[20,460,12,48],[20,461,12,48,"e"],[20,462,12,48],[20,464,12,48,"t"],[20,465,12,48],[20,472,12,48,"i"],[20,473,12,48],[20,477,12,48,"o"],[20,478,12,48],[20,481,12,48,"Object"],[20,487,12,48],[20,488,12,48,"defineProperty"],[20,502,12,48],[20,507,12,48,"Object"],[20,513,12,48],[20,514,12,48,"getOwnPropertyDescriptor"],[20,538,12,48],[20,539,12,48,"e"],[20,540,12,48],[20,542,12,48,"t"],[20,543,12,48],[20,550,12,48,"i"],[20,551,12,48],[20,552,12,48,"get"],[20,555,12,48],[20,559,12,48,"i"],[20,560,12,48],[20,561,12,48,"set"],[20,564,12,48],[20,568,12,48,"o"],[20,569,12,48],[20,570,12,48,"f"],[20,571,12,48],[20,573,12,48,"t"],[20,574,12,48],[20,576,12,48,"i"],[20,577,12,48],[20,581,12,48,"f"],[20,582,12,48],[20,583,12,48,"t"],[20,584,12,48],[20,588,12,48,"e"],[20,589,12,48],[20,590,12,48,"t"],[20,591,12,48],[20,602,12,48,"f"],[20,603,12,48],[20,608,12,48,"e"],[20,609,12,48],[20,611,12,48,"t"],[20,612,12,48],[21,2,13,0],[21,8,13,6,"GestureHandlerWrapper"],[21,29,13,27],[21,32,13,30,"GestureHandlerRootView"],[21,70,13,52],[21,74,13,56,"View"],[21,87,13,60],[23,2,15,0],[24,0,16,0],[25,0,17,0],[26,0,18,0],[27,2,19,0],[27,8,19,6,"isArrayEqual"],[27,20,19,18],[27,23,19,21,"isArrayEqual"],[27,24,19,22,"a"],[27,25,19,23],[27,27,19,25,"b"],[27,28,19,26],[27,33,19,31,"a"],[27,34,19,32],[27,35,19,33,"length"],[27,41,19,39],[27,46,19,44,"b"],[27,47,19,45],[27,48,19,46,"length"],[27,54,19,52],[27,58,19,56,"a"],[27,59,19,57],[27,60,19,58,"every"],[27,65,19,63],[27,66,19,64],[27,67,19,65,"it"],[27,69,19,67],[27,71,19,69,"index"],[27,76,19,74],[27,81,19,79,"Object"],[27,87,19,85],[27,88,19,86,"is"],[27,90,19,88],[27,91,19,89,"it"],[27,93,19,91],[27,95,19,93,"b"],[27,96,19,94],[27,97,19,95,"index"],[27,102,19,100],[27,103,19,101],[27,104,19,102],[27,105,19,103],[28,2,20,7],[28,8,20,13,"StackView"],[28,17,20,22],[28,26,20,31,"React"],[28,31,20,36],[28,32,20,37,"Component"],[28,41,20,46],[28,42,20,47],[29,4,21,2],[29,11,21,9,"getDerivedStateFromProps"],[29,35,21,33,"getDerivedStateFromProps"],[29,36,21,34,"props"],[29,41,21,39],[29,43,21,41,"state"],[29,48,21,46],[29,50,21,48],[30,6,22,4],[31,6,23,4],[31,10,23,8],[31,11,23,9,"props"],[31,16,23,14],[31,17,23,15,"state"],[31,22,23,20],[31,23,23,21,"routes"],[31,29,23,27],[31,34,23,32,"state"],[31,39,23,37],[31,40,23,38,"previousRoutes"],[31,54,23,52],[31,58,23,56,"isArrayEqual"],[31,70,23,68],[31,71,23,69,"props"],[31,76,23,74],[31,77,23,75,"state"],[31,82,23,80],[31,83,23,81,"routes"],[31,89,23,87],[31,90,23,88,"map"],[31,93,23,91],[31,94,23,92,"r"],[31,95,23,93],[31,99,23,97,"r"],[31,100,23,98],[31,101,23,99,"key"],[31,104,23,102],[31,105,23,103],[31,107,23,105,"state"],[31,112,23,110],[31,113,23,111,"previousRoutes"],[31,127,23,125],[31,128,23,126,"map"],[31,131,23,129],[31,132,23,130,"r"],[31,133,23,131],[31,137,23,135,"r"],[31,138,23,136],[31,139,23,137,"key"],[31,142,23,140],[31,143,23,141],[31,144,23,142],[31,149,23,147,"state"],[31,154,23,152],[31,155,23,153,"routes"],[31,161,23,159],[31,162,23,160,"length"],[31,168,23,166],[31,170,23,168],[32,8,24,6],[32,12,24,10,"routes"],[32,18,24,16],[32,21,24,19,"state"],[32,26,24,24],[32,27,24,25,"routes"],[32,33,24,31],[33,8,25,6],[33,12,25,10,"previousRoutes"],[33,26,25,24],[33,29,25,27,"state"],[33,34,25,32],[33,35,25,33,"previousRoutes"],[33,49,25,47],[34,8,26,6],[34,12,26,10,"descriptors"],[34,23,26,21],[34,26,26,24,"props"],[34,31,26,29],[34,32,26,30,"descriptors"],[34,43,26,41],[35,8,27,6],[35,12,27,10,"previousDescriptors"],[35,31,27,29],[35,34,27,32,"state"],[35,39,27,37],[35,40,27,38,"previousDescriptors"],[35,59,27,57],[36,8,28,6],[36,12,28,10,"props"],[36,17,28,15],[36,18,28,16,"descriptors"],[36,29,28,27],[36,34,28,32,"state"],[36,39,28,37],[36,40,28,38,"previousDescriptors"],[36,59,28,57],[36,61,28,59],[37,10,29,8,"descriptors"],[37,21,29,19],[37,24,29,22,"state"],[37,29,29,27],[37,30,29,28,"routes"],[37,36,29,34],[37,37,29,35,"reduce"],[37,43,29,41],[37,44,29,42],[37,45,29,43,"acc"],[37,48,29,46],[37,50,29,48,"route"],[37,55,29,53],[37,60,29,58],[38,12,30,10,"acc"],[38,15,30,13],[38,16,30,14,"route"],[38,21,30,19],[38,22,30,20,"key"],[38,25,30,23],[38,26,30,24],[38,29,30,27,"props"],[38,34,30,32],[38,35,30,33,"descriptors"],[38,46,30,44],[38,47,30,45,"route"],[38,52,30,50],[38,53,30,51,"key"],[38,56,30,54],[38,57,30,55],[38,61,30,59,"state"],[38,66,30,64],[38,67,30,65,"descriptors"],[38,78,30,76],[38,79,30,77,"route"],[38,84,30,82],[38,85,30,83,"key"],[38,88,30,86],[38,89,30,87],[39,12,31,10],[39,19,31,17,"acc"],[39,22,31,20],[40,10,32,8],[40,11,32,9],[40,13,32,11],[40,14,32,12],[40,15,32,13],[40,16,32,14],[41,10,33,8,"previousDescriptors"],[41,29,33,27],[41,32,33,30,"props"],[41,37,33,35],[41,38,33,36,"descriptors"],[41,49,33,47],[42,8,34,6],[43,8,35,6],[43,12,35,10,"props"],[43,17,35,15],[43,18,35,16,"state"],[43,23,35,21],[43,24,35,22,"routes"],[43,30,35,28],[43,35,35,33,"state"],[43,40,35,38],[43,41,35,39,"previousRoutes"],[43,55,35,53],[43,57,35,55],[44,10,36,8],[45,10,37,8],[45,16,37,14,"map"],[45,19,37,17],[45,22,37,20,"props"],[45,27,37,25],[45,28,37,26,"state"],[45,33,37,31],[45,34,37,32,"routes"],[45,40,37,38],[45,41,37,39,"reduce"],[45,47,37,45],[45,48,37,46],[45,49,37,47,"acc"],[45,52,37,50],[45,54,37,52,"route"],[45,59,37,57],[45,64,37,62],[46,12,38,10,"acc"],[46,15,38,13],[46,16,38,14,"route"],[46,21,38,19],[46,22,38,20,"key"],[46,25,38,23],[46,26,38,24],[46,29,38,27,"route"],[46,34,38,32],[47,12,39,10],[47,19,39,17,"acc"],[47,22,39,20],[48,10,40,8],[48,11,40,9],[48,13,40,11],[48,14,40,12],[48,15,40,13],[48,16,40,14],[49,10,41,8,"routes"],[49,16,41,14],[49,19,41,17,"state"],[49,24,41,22],[49,25,41,23,"routes"],[49,31,41,29],[49,32,41,30,"map"],[49,35,41,33],[49,36,41,34,"route"],[49,41,41,39],[49,45,41,43,"map"],[49,48,41,46],[49,49,41,47,"route"],[49,54,41,52],[49,55,41,53,"key"],[49,58,41,56],[49,59,41,57],[49,63,41,61,"route"],[49,68,41,66],[49,69,41,67],[50,10,42,8,"previousRoutes"],[50,24,42,22],[50,27,42,25,"props"],[50,32,42,30],[50,33,42,31,"state"],[50,38,42,36],[50,39,42,37,"routes"],[50,45,42,43],[51,8,43,6],[52,8,44,6],[52,15,44,13],[53,10,45,8,"routes"],[53,16,45,14],[54,10,46,8,"previousRoutes"],[54,24,46,22],[55,10,47,8,"descriptors"],[55,21,47,19],[56,10,48,8,"previousDescriptors"],[57,8,49,6],[57,9,49,7],[58,6,50,4],[60,6,52,4],[61,6,53,4],[63,6,55,4],[63,10,55,8,"routes"],[63,16,55,14],[63,19,55,17,"props"],[63,24,55,22],[63,25,55,23,"state"],[63,30,55,28],[63,31,55,29,"index"],[63,36,55,34],[63,39,55,37,"props"],[63,44,55,42],[63,45,55,43,"state"],[63,50,55,48],[63,51,55,49,"routes"],[63,57,55,55],[63,58,55,56,"length"],[63,64,55,62],[63,67,55,65],[63,68,55,66],[64,6,56,4],[65,6,57,4],[66,6,58,4,"props"],[66,11,58,9],[66,12,58,10,"state"],[66,17,58,15],[66,18,58,16,"routes"],[66,24,58,22],[66,25,58,23,"slice"],[66,30,58,28],[66,31,58,29],[66,32,58,30],[66,34,58,32,"props"],[66,39,58,37],[66,40,58,38,"state"],[66,45,58,43],[66,46,58,44,"index"],[66,51,58,49],[66,54,58,52],[66,55,58,53],[66,56,58,54],[66,59,58,57,"props"],[66,64,58,62],[66,65,58,63,"state"],[66,70,58,68],[66,71,58,69,"routes"],[66,77,58,75],[68,6,60,4],[69,6,61,4],[69,12,61,10],[70,8,62,6,"previousRoutes"],[71,6,63,4],[71,7,63,5],[71,10,63,8,"state"],[71,15,63,13],[72,6,64,4],[72,10,64,8],[73,8,65,6,"openingRouteKeys"],[73,24,65,22],[74,8,66,6,"closingRouteKeys"],[74,24,66,22],[75,8,67,6,"replacingRouteKeys"],[76,6,68,4],[76,7,68,5],[76,10,68,8,"state"],[76,15,68,13],[77,6,69,4],[77,12,69,10,"previousFocusedRoute"],[77,32,69,30],[77,35,69,33,"previousRoutes"],[77,49,69,47],[77,50,69,48,"previousRoutes"],[77,64,69,62],[77,65,69,63,"length"],[77,71,69,69],[77,74,69,72],[77,75,69,73],[77,76,69,74],[78,6,70,4],[78,12,70,10,"nextFocusedRoute"],[78,28,70,26],[78,31,70,29,"routes"],[78,37,70,35],[78,38,70,36,"routes"],[78,44,70,42],[78,45,70,43,"length"],[78,51,70,49],[78,54,70,52],[78,55,70,53],[78,56,70,54],[79,6,71,4],[79,12,71,10,"isAnimationEnabled"],[79,30,71,28],[79,33,71,31,"key"],[79,36,71,34],[79,40,71,38],[80,8,72,6],[80,14,72,12,"descriptor"],[80,24,72,22],[80,27,72,25,"props"],[80,32,72,30],[80,33,72,31,"descriptors"],[80,44,72,42],[80,45,72,43,"key"],[80,48,72,46],[80,49,72,47],[80,53,72,51,"state"],[80,58,72,56],[80,59,72,57,"descriptors"],[80,70,72,68],[80,71,72,69,"key"],[80,74,72,72],[80,75,72,73],[81,8,73,6],[81,15,73,13],[81,19,73,13,"getAnimationEnabled"],[81,49,73,32],[81,51,73,33,"descriptor"],[81,61,73,43],[81,63,73,45,"options"],[81,70,73,52],[81,71,73,53,"animation"],[81,80,73,62],[81,81,73,63],[82,6,74,4],[82,7,74,5],[83,6,75,4],[83,12,75,10,"getAnimationTypeForReplace"],[83,38,75,36],[83,41,75,39,"key"],[83,44,75,42],[83,48,75,46],[84,8,76,6],[84,14,76,12,"descriptor"],[84,24,76,22],[84,27,76,25,"props"],[84,32,76,30],[84,33,76,31,"descriptors"],[84,44,76,42],[84,45,76,43,"key"],[84,48,76,46],[84,49,76,47],[84,53,76,51,"state"],[84,58,76,56],[84,59,76,57,"descriptors"],[84,70,76,68],[84,71,76,69,"key"],[84,74,76,72],[84,75,76,73],[85,8,77,6],[85,15,77,13,"descriptor"],[85,25,77,23],[85,26,77,24,"options"],[85,33,77,31],[85,34,77,32,"animationTypeForReplace"],[85,57,77,55],[85,61,77,59],[85,67,77,65],[86,6,78,4],[86,7,78,5],[87,6,79,4],[87,10,79,8,"previousFocusedRoute"],[87,30,79,28],[87,34,79,32,"previousFocusedRoute"],[87,54,79,52],[87,55,79,53,"key"],[87,58,79,56],[87,63,79,61,"nextFocusedRoute"],[87,79,79,77],[87,80,79,78,"key"],[87,83,79,81],[87,85,79,83],[88,8,80,6],[89,8,81,6],[91,8,83,6],[91,12,83,10,"previousRoutes"],[91,26,83,24],[91,27,83,25,"some"],[91,31,83,29],[91,32,83,30,"r"],[91,33,83,31],[91,37,83,35,"r"],[91,38,83,36],[91,39,83,37,"key"],[91,42,83,40],[91,47,83,45,"nextFocusedRoute"],[91,63,83,61],[91,64,83,62,"key"],[91,67,83,65],[91,68,83,66],[91,72,83,70],[91,73,83,71,"routes"],[91,79,83,77],[91,80,83,78,"some"],[91,84,83,82],[91,85,83,83,"r"],[91,86,83,84],[91,90,83,88,"r"],[91,91,83,89],[91,92,83,90,"key"],[91,95,83,93],[91,100,83,98,"previousFocusedRoute"],[91,120,83,118],[91,121,83,119,"key"],[91,124,83,122],[91,125,83,123],[91,127,83,125],[92,10,84,8],[93,10,85,8],[95,10,87,8],[95,14,87,12,"isAnimationEnabled"],[95,32,87,30],[95,33,87,31,"previousFocusedRoute"],[95,53,87,51],[95,54,87,52,"key"],[95,57,87,55],[95,58,87,56],[95,62,87,60],[95,63,87,61,"closingRouteKeys"],[95,79,87,77],[95,80,87,78,"includes"],[95,88,87,86],[95,89,87,87,"previousFocusedRoute"],[95,109,87,107],[95,110,87,108,"key"],[95,113,87,111],[95,114,87,112],[95,116,87,114],[96,12,88,10,"closingRouteKeys"],[96,28,88,26],[96,31,88,29],[96,32,88,30],[96,35,88,33,"closingRouteKeys"],[96,51,88,49],[96,53,88,51,"previousFocusedRoute"],[96,73,88,71],[96,74,88,72,"key"],[96,77,88,75],[96,78,88,76],[98,12,90,10],[99,12,91,10],[100,12,92,10,"openingRouteKeys"],[100,28,92,26],[100,31,92,29,"openingRouteKeys"],[100,47,92,45],[100,48,92,46,"filter"],[100,54,92,52],[100,55,92,53,"key"],[100,58,92,56],[100,62,92,60,"key"],[100,65,92,63],[100,70,92,68,"previousFocusedRoute"],[100,90,92,88],[100,91,92,89,"key"],[100,94,92,92],[100,95,92,93],[101,12,93,10,"replacingRouteKeys"],[101,30,93,28],[101,33,93,31,"replacingRouteKeys"],[101,51,93,49],[101,52,93,50,"filter"],[101,58,93,56],[101,59,93,57,"key"],[101,62,93,60],[101,66,93,64,"key"],[101,69,93,67],[101,74,93,72,"previousFocusedRoute"],[101,94,93,92],[101,95,93,93,"key"],[101,98,93,96],[101,99,93,97],[103,12,95,10],[104,12,96,10,"routes"],[104,18,96,16],[104,21,96,19],[104,22,96,20],[104,25,96,23,"routes"],[104,31,96,29],[104,33,96,31,"previousFocusedRoute"],[104,53,96,51],[104,54,96,52],[105,10,97,8],[106,8,98,6],[106,9,98,7],[106,15,98,13],[107,10,99,8],[108,10,100,8],[109,10,101,8],[111,10,103,8],[111,14,103,12,"isAnimationEnabled"],[111,32,103,30],[111,33,103,31,"nextFocusedRoute"],[111,49,103,47],[111,50,103,48,"key"],[111,53,103,51],[111,54,103,52],[111,58,103,56],[111,59,103,57,"openingRouteKeys"],[111,75,103,73],[111,76,103,74,"includes"],[111,84,103,82],[111,85,103,83,"nextFocusedRoute"],[111,101,103,99],[111,102,103,100,"key"],[111,105,103,103],[111,106,103,104],[111,108,103,106],[112,12,104,10],[113,12,105,10],[114,12,106,10,"openingRouteKeys"],[114,28,106,26],[114,31,106,29],[114,32,106,30],[114,35,106,33,"openingRouteKeys"],[114,51,106,49],[114,53,106,51,"nextFocusedRoute"],[114,69,106,67],[114,70,106,68,"key"],[114,73,106,71],[114,74,106,72],[115,12,107,10,"closingRouteKeys"],[115,28,107,26],[115,31,107,29,"closingRouteKeys"],[115,47,107,45],[115,48,107,46,"filter"],[115,54,107,52],[115,55,107,53,"key"],[115,58,107,56],[115,62,107,60,"key"],[115,65,107,63],[115,70,107,68,"nextFocusedRoute"],[115,86,107,84],[115,87,107,85,"key"],[115,90,107,88],[115,91,107,89],[116,12,108,10,"replacingRouteKeys"],[116,30,108,28],[116,33,108,31,"replacingRouteKeys"],[116,51,108,49],[116,52,108,50,"filter"],[116,58,108,56],[116,59,108,57,"key"],[116,62,108,60],[116,66,108,64,"key"],[116,69,108,67],[116,74,108,72,"nextFocusedRoute"],[116,90,108,88],[116,91,108,89,"key"],[116,94,108,92],[116,95,108,93],[117,12,109,10],[117,16,109,14],[117,17,109,15,"routes"],[117,23,109,21],[117,24,109,22,"some"],[117,28,109,26],[117,29,109,27,"r"],[117,30,109,28],[117,34,109,32,"r"],[117,35,109,33],[117,36,109,34,"key"],[117,39,109,37],[117,44,109,42,"previousFocusedRoute"],[117,64,109,62],[117,65,109,63,"key"],[117,68,109,66],[117,69,109,67],[117,71,109,69],[118,14,110,12],[120,14,112,12,"openingRouteKeys"],[120,30,112,28],[120,33,112,31,"openingRouteKeys"],[120,49,112,47],[120,50,112,48,"filter"],[120,56,112,54],[120,57,112,55,"key"],[120,60,112,58],[120,64,112,62,"key"],[120,67,112,65],[120,72,112,70,"previousFocusedRoute"],[120,92,112,90],[120,93,112,91,"key"],[120,96,112,94],[120,97,112,95],[121,14,113,12],[121,18,113,16,"getAnimationTypeForReplace"],[121,44,113,42],[121,45,113,43,"nextFocusedRoute"],[121,61,113,59],[121,62,113,60,"key"],[121,65,113,63],[121,66,113,64],[121,71,113,69],[121,76,113,74],[121,78,113,76],[122,16,114,14,"closingRouteKeys"],[122,32,114,30],[122,35,114,33],[122,36,114,34],[122,39,114,37,"closingRouteKeys"],[122,55,114,53],[122,57,114,55,"previousFocusedRoute"],[122,77,114,75],[122,78,114,76,"key"],[122,81,114,79],[122,82,114,80],[124,16,116,14],[125,16,117,14],[126,16,118,14],[127,16,119,14,"openingRouteKeys"],[127,32,119,30],[127,35,119,33,"openingRouteKeys"],[127,51,119,49],[127,52,119,50,"filter"],[127,58,119,56],[127,59,119,57,"key"],[127,62,119,60],[127,66,119,64,"key"],[127,69,119,67],[127,74,119,72,"nextFocusedRoute"],[127,90,119,88],[127,91,119,89,"key"],[127,94,119,92],[127,95,119,93],[129,16,121,14],[130,16,122,14,"routes"],[130,22,122,20],[130,25,122,23],[130,26,122,24],[130,29,122,27,"routes"],[130,35,122,33],[130,37,122,35,"previousFocusedRoute"],[130,57,122,55],[130,58,122,56],[131,14,123,12],[131,15,123,13],[131,21,123,19],[132,16,124,14,"replacingRouteKeys"],[132,34,124,32],[132,37,124,35],[132,38,124,36],[132,41,124,39,"replacingRouteKeys"],[132,59,124,57],[132,61,124,59,"previousFocusedRoute"],[132,81,124,79],[132,82,124,80,"key"],[132,85,124,83],[132,86,124,84],[133,16,125,14,"closingRouteKeys"],[133,32,125,30],[133,35,125,33,"closingRouteKeys"],[133,51,125,49],[133,52,125,50,"filter"],[133,58,125,56],[133,59,125,57,"key"],[133,62,125,60],[133,66,125,64,"key"],[133,69,125,67],[133,74,125,72,"previousFocusedRoute"],[133,94,125,92],[133,95,125,93,"key"],[133,98,125,96],[133,99,125,97],[135,16,127,14],[136,16,128,14],[137,16,129,14],[138,16,130,14,"routes"],[138,22,130,20],[138,25,130,23,"routes"],[138,31,130,29],[138,32,130,30,"slice"],[138,37,130,35],[138,38,130,36],[138,39,130,37],[139,16,131,14,"routes"],[139,22,131,20],[139,23,131,21,"splice"],[139,29,131,27],[139,30,131,28,"routes"],[139,36,131,34],[139,37,131,35,"length"],[139,43,131,41],[139,46,131,44],[139,47,131,45],[139,49,131,47],[139,50,131,48],[139,52,131,50,"previousFocusedRoute"],[139,72,131,70],[139,73,131,71],[140,14,132,12],[141,12,133,10],[142,10,134,8],[143,8,135,6],[144,6,136,4],[144,7,136,5],[144,13,136,11],[144,17,136,15,"replacingRouteKeys"],[144,35,136,33],[144,36,136,34,"length"],[144,42,136,40],[144,46,136,44,"closingRouteKeys"],[144,62,136,60],[144,63,136,61,"length"],[144,69,136,67],[144,71,136,69],[145,8,137,6],[146,8,138,6,"routes"],[146,14,138,12],[146,17,138,15,"routes"],[146,23,138,21],[146,24,138,22,"slice"],[146,29,138,27],[146,30,138,28],[146,31,138,29],[147,8,139,6,"routes"],[147,14,139,12],[147,15,139,13,"splice"],[147,21,139,19],[147,22,139,20,"routes"],[147,28,139,26],[147,29,139,27,"length"],[147,35,139,33],[147,38,139,36],[147,39,139,37],[147,41,139,39],[147,42,139,40],[147,44,139,42],[147,47,139,45,"state"],[147,52,139,50],[147,53,139,51,"routes"],[147,59,139,57],[147,60,139,58,"filter"],[147,66,139,64],[147,67,139,65],[147,68,139,66],[148,10,140,8,"key"],[149,8,141,6],[149,9,141,7],[149,14,141,12,"isAnimationEnabled"],[149,32,141,30],[149,33,141,31,"key"],[149,36,141,34],[149,37,141,35],[149,40,141,38,"replacingRouteKeys"],[149,58,141,56],[149,59,141,57,"includes"],[149,67,141,65],[149,68,141,66,"key"],[149,71,141,69],[149,72,141,70],[149,76,141,74,"closingRouteKeys"],[149,92,141,90],[149,93,141,91,"includes"],[149,101,141,99],[149,102,141,100,"key"],[149,105,141,103],[149,106,141,104],[149,109,141,107],[149,114,141,112],[149,115,141,113],[149,116,141,114],[150,6,142,4],[151,6,143,4],[151,10,143,8],[151,11,143,9,"routes"],[151,17,143,15],[151,18,143,16,"length"],[151,24,143,22],[151,26,143,24],[152,8,144,6],[152,14,144,12],[152,18,144,16,"Error"],[152,23,144,21],[152,24,144,22],[152,92,144,90],[152,93,144,91],[153,6,145,4],[154,6,146,4],[154,12,146,10,"descriptors"],[154,23,146,21],[154,26,146,24,"routes"],[154,32,146,30],[154,33,146,31,"reduce"],[154,39,146,37],[154,40,146,38],[154,41,146,39,"acc"],[154,44,146,42],[154,46,146,44,"route"],[154,51,146,49],[154,56,146,54],[155,8,147,6,"acc"],[155,11,147,9],[155,12,147,10,"route"],[155,17,147,15],[155,18,147,16,"key"],[155,21,147,19],[155,22,147,20],[155,25,147,23,"props"],[155,30,147,28],[155,31,147,29,"descriptors"],[155,42,147,40],[155,43,147,41,"route"],[155,48,147,46],[155,49,147,47,"key"],[155,52,147,50],[155,53,147,51],[155,57,147,55,"state"],[155,62,147,60],[155,63,147,61,"descriptors"],[155,74,147,72],[155,75,147,73,"route"],[155,80,147,78],[155,81,147,79,"key"],[155,84,147,82],[155,85,147,83],[156,8,148,6],[156,15,148,13,"acc"],[156,18,148,16],[157,6,149,4],[157,7,149,5],[157,9,149,7],[157,10,149,8],[157,11,149,9],[157,12,149,10],[158,6,150,4],[158,13,150,11],[159,8,151,6,"routes"],[159,14,151,12],[160,8,152,6,"previousRoutes"],[160,22,152,20],[160,24,152,22,"props"],[160,29,152,27],[160,30,152,28,"state"],[160,35,152,33],[160,36,152,34,"routes"],[160,42,152,40],[161,8,153,6,"previousDescriptors"],[161,27,153,25],[161,29,153,27,"props"],[161,34,153,32],[161,35,153,33,"descriptors"],[161,46,153,44],[162,8,154,6,"openingRouteKeys"],[162,24,154,22],[163,8,155,6,"closingRouteKeys"],[163,24,155,22],[164,8,156,6,"replacingRouteKeys"],[164,26,156,24],[165,8,157,6,"descriptors"],[166,6,158,4],[166,7,158,5],[167,4,159,2],[168,4,160,2,"state"],[168,9,160,7],[168,12,160,10],[169,6,161,4,"routes"],[169,12,161,10],[169,14,161,12],[169,16,161,14],[170,6,162,4,"previousRoutes"],[170,20,162,18],[170,22,162,20],[170,24,162,22],[171,6,163,4,"previousDescriptors"],[171,25,163,23],[171,27,163,25],[171,28,163,26],[171,29,163,27],[172,6,164,4,"openingRouteKeys"],[172,22,164,20],[172,24,164,22],[172,26,164,24],[173,6,165,4,"closingRouteKeys"],[173,22,165,20],[173,24,165,22],[173,26,165,24],[174,6,166,4,"replacingRouteKeys"],[174,24,166,22],[174,26,166,24],[174,28,166,26],[175,6,167,4,"descriptors"],[175,17,167,15],[175,19,167,17],[175,20,167,18],[176,4,168,2],[176,5,168,3],[177,4,169,2,"getPreviousRoute"],[177,20,169,18],[177,23,169,21,"getPreviousRoute"],[177,24,169,22],[178,6,170,4,"route"],[179,4,171,2],[179,5,171,3],[179,10,171,8],[180,6,172,4],[180,12,172,10],[181,8,173,6,"closingRouteKeys"],[181,24,173,22],[182,8,174,6,"replacingRouteKeys"],[183,6,175,4],[183,7,175,5],[183,10,175,8],[183,14,175,12],[183,15,175,13,"state"],[183,20,175,18],[184,6,176,4],[184,12,176,10,"routes"],[184,18,176,16],[184,21,176,19],[184,25,176,23],[184,26,176,24,"state"],[184,31,176,29],[184,32,176,30,"routes"],[184,38,176,36],[184,39,176,37,"filter"],[184,45,176,43],[184,46,176,44,"r"],[184,47,176,45],[184,51,176,49,"r"],[184,52,176,50],[184,53,176,51,"key"],[184,56,176,54],[184,61,176,59,"route"],[184,66,176,64],[184,67,176,65,"key"],[184,70,176,68],[184,74,176,72],[184,75,176,73,"closingRouteKeys"],[184,91,176,89],[184,92,176,90,"includes"],[184,100,176,98],[184,101,176,99,"r"],[184,102,176,100],[184,103,176,101,"key"],[184,106,176,104],[184,107,176,105],[184,111,176,109],[184,112,176,110,"replacingRouteKeys"],[184,130,176,128],[184,131,176,129,"includes"],[184,139,176,137],[184,140,176,138,"r"],[184,141,176,139],[184,142,176,140,"key"],[184,145,176,143],[184,146,176,144],[184,147,176,145],[185,6,177,4],[185,12,177,10,"index"],[185,17,177,15],[185,20,177,18,"routes"],[185,26,177,24],[185,27,177,25,"findIndex"],[185,36,177,34],[185,37,177,35,"r"],[185,38,177,36],[185,42,177,40,"r"],[185,43,177,41],[185,44,177,42,"key"],[185,47,177,45],[185,52,177,50,"route"],[185,57,177,55],[185,58,177,56,"key"],[185,61,177,59],[185,62,177,60],[186,6,178,4],[186,13,178,11,"routes"],[186,19,178,17],[186,20,178,18,"index"],[186,25,178,23],[186,28,178,26],[186,29,178,27],[186,30,178,28],[187,4,179,2],[187,5,179,3],[188,4,180,2,"renderHeader"],[188,16,180,14],[188,19,180,17,"props"],[188,24,180,22],[188,28,180,26],[189,6,181,4],[189,13,181,11],[189,26,181,24],[189,30,181,24,"_jsx"],[189,45,181,28],[189,47,181,29,"HeaderContainer"],[189,79,181,44],[189,81,181,46],[190,8,182,6],[190,11,182,9,"props"],[191,6,183,4],[191,7,183,5],[191,8,183,6],[192,4,184,2],[192,5,184,3],[193,4,185,2,"handleOpenRoute"],[193,19,185,17],[193,22,185,20,"handleOpenRoute"],[193,23,185,21],[194,6,186,4,"route"],[195,4,187,2],[195,5,187,3],[195,10,187,8],[196,6,188,4],[196,12,188,10],[197,8,189,6,"state"],[197,13,189,11],[198,8,190,6,"navigation"],[199,6,191,4],[199,7,191,5],[199,10,191,8],[199,14,191,12],[199,15,191,13,"props"],[199,20,191,18],[200,6,192,4],[200,12,192,10],[201,8,193,6,"closingRouteKeys"],[201,24,193,22],[202,8,194,6,"replacingRouteKeys"],[203,6,195,4],[203,7,195,5],[203,10,195,8],[203,14,195,12],[203,15,195,13,"state"],[203,20,195,18],[204,6,196,4],[204,10,196,8,"closingRouteKeys"],[204,26,196,24],[204,27,196,25,"some"],[204,31,196,29],[204,32,196,30,"key"],[204,35,196,33],[204,39,196,37,"key"],[204,42,196,40],[204,47,196,45,"route"],[204,52,196,50],[204,53,196,51,"key"],[204,56,196,54],[204,57,196,55],[204,61,196,59,"replacingRouteKeys"],[204,79,196,77],[204,80,196,78,"every"],[204,85,196,83],[204,86,196,84,"key"],[204,89,196,87],[204,93,196,91,"key"],[204,96,196,94],[204,101,196,99,"route"],[204,106,196,104],[204,107,196,105,"key"],[204,110,196,108],[204,111,196,109],[204,115,196,113,"state"],[204,120,196,118],[204,121,196,119,"routeNames"],[204,131,196,129],[204,132,196,130,"includes"],[204,140,196,138],[204,141,196,139,"route"],[204,146,196,144],[204,147,196,145,"name"],[204,151,196,149],[204,152,196,150],[204,156,196,154],[204,157,196,155,"state"],[204,162,196,160],[204,163,196,161,"routes"],[204,169,196,167],[204,170,196,168,"some"],[204,174,196,172],[204,175,196,173,"r"],[204,176,196,174],[204,180,196,178,"r"],[204,181,196,179],[204,182,196,180,"key"],[204,185,196,183],[204,190,196,188,"route"],[204,195,196,193],[204,196,196,194,"key"],[204,199,196,197],[204,200,196,198],[204,202,196,200],[205,8,197,6],[206,8,198,6],[207,8,199,6,"navigation"],[207,18,199,16],[207,19,199,17,"dispatch"],[207,27,199,25],[207,28,199,26,"state"],[207,33,199,31],[207,37,199,35],[208,10,200,8],[208,16,200,14,"routes"],[208,22,200,20],[208,25,200,23],[208,26,200,24],[208,29,200,27,"state"],[208,34,200,32],[208,35,200,33,"routes"],[208,41,200,39],[208,42,200,40,"filter"],[208,48,200,46],[208,49,200,47,"r"],[208,50,200,48],[208,54,200,52,"r"],[208,55,200,53],[208,56,200,54,"key"],[208,59,200,57],[208,64,200,62,"route"],[208,69,200,67],[208,70,200,68,"key"],[208,73,200,71],[208,74,200,72],[208,76,200,74,"route"],[208,81,200,79],[208,82,200,80],[209,10,201,8],[209,17,201,15,"CommonActions"],[209,38,201,28],[209,39,201,29,"reset"],[209,44,201,34],[209,45,201,35],[210,12,202,10],[210,15,202,13,"state"],[210,20,202,18],[211,12,203,10,"routes"],[211,18,203,16],[212,12,204,10,"index"],[212,17,204,15],[212,19,204,17,"routes"],[212,25,204,23],[212,26,204,24,"length"],[212,32,204,30],[212,35,204,33],[213,10,205,8],[213,11,205,9],[213,12,205,10],[214,8,206,6],[214,9,206,7],[214,10,206,8],[215,6,207,4],[215,7,207,5],[215,13,207,11],[216,8,208,6],[216,12,208,10],[216,13,208,11,"setState"],[216,21,208,19],[216,22,208,20,"state"],[216,27,208,25],[216,32,208,30],[217,10,209,8,"routes"],[217,16,209,14],[217,18,209,16,"state"],[217,23,209,21],[217,24,209,22,"replacingRouteKeys"],[217,42,209,40],[217,43,209,41,"length"],[217,49,209,47],[217,52,209,50,"state"],[217,57,209,55],[217,58,209,56,"routes"],[217,64,209,62],[217,65,209,63,"filter"],[217,71,209,69],[217,72,209,70,"r"],[217,73,209,71],[217,77,209,75],[217,78,209,76,"state"],[217,83,209,81],[217,84,209,82,"replacingRouteKeys"],[217,102,209,100],[217,103,209,101,"includes"],[217,111,209,109],[217,112,209,110,"r"],[217,113,209,111],[217,114,209,112,"key"],[217,117,209,115],[217,118,209,116],[217,119,209,117],[217,122,209,120,"state"],[217,127,209,125],[217,128,209,126,"routes"],[217,134,209,132],[218,10,210,8,"openingRouteKeys"],[218,26,210,24],[218,28,210,26,"state"],[218,33,210,31],[218,34,210,32,"openingRouteKeys"],[218,50,210,48],[218,51,210,49,"filter"],[218,57,210,55],[218,58,210,56,"key"],[218,61,210,59],[218,65,210,63,"key"],[218,68,210,66],[218,73,210,71,"route"],[218,78,210,76],[218,79,210,77,"key"],[218,82,210,80],[218,83,210,81],[219,10,211,8,"closingRouteKeys"],[219,26,211,24],[219,28,211,26,"state"],[219,33,211,31],[219,34,211,32,"closingRouteKeys"],[219,50,211,48],[219,51,211,49,"filter"],[219,57,211,55],[219,58,211,56,"key"],[219,61,211,59],[219,65,211,63,"key"],[219,68,211,66],[219,73,211,71,"route"],[219,78,211,76],[219,79,211,77,"key"],[219,82,211,80],[219,83,211,81],[220,10,212,8,"replacingRouteKeys"],[220,28,212,26],[220,30,212,28],[221,8,213,6],[221,9,213,7],[221,10,213,8],[221,11,213,9],[222,6,214,4],[223,4,215,2],[223,5,215,3],[224,4,216,2,"handleCloseRoute"],[224,20,216,18],[224,23,216,21,"handleCloseRoute"],[224,24,216,22],[225,6,217,4,"route"],[226,4,218,2],[226,5,218,3],[226,10,218,8],[227,6,219,4],[227,12,219,10],[228,8,220,6,"state"],[228,13,220,11],[229,8,221,6,"navigation"],[230,6,222,4],[230,7,222,5],[230,10,222,8],[230,14,222,12],[230,15,222,13,"props"],[230,20,222,18],[231,6,223,4],[231,10,223,8,"state"],[231,15,223,13],[231,16,223,14,"routes"],[231,22,223,20],[231,23,223,21,"some"],[231,27,223,25],[231,28,223,26,"r"],[231,29,223,27],[231,33,223,31,"r"],[231,34,223,32],[231,35,223,33,"key"],[231,38,223,36],[231,43,223,41,"route"],[231,48,223,46],[231,49,223,47,"key"],[231,52,223,50],[231,53,223,51],[231,55,223,53],[232,8,224,6],[233,8,225,6],[234,8,226,6],[235,8,227,6,"navigation"],[235,18,227,16],[235,19,227,17,"dispatch"],[235,27,227,25],[235,28,227,26],[236,10,228,8],[236,13,228,11,"StackActions"],[236,33,228,23],[236,34,228,24,"pop"],[236,37,228,27],[236,38,228,28],[236,39,228,29],[237,10,229,8,"source"],[237,16,229,14],[237,18,229,16,"route"],[237,23,229,21],[237,24,229,22,"key"],[237,27,229,25],[238,10,230,8,"target"],[238,16,230,14],[238,18,230,16,"state"],[238,23,230,21],[238,24,230,22,"key"],[239,8,231,6],[239,9,231,7],[239,10,231,8],[240,6,232,4],[240,7,232,5],[240,13,232,11],[241,8,233,6],[242,8,234,6],[242,12,234,10],[242,13,234,11,"setState"],[242,21,234,19],[242,22,234,20,"state"],[242,27,234,25],[242,32,234,30],[243,10,235,8,"routes"],[243,16,235,14],[243,18,235,16,"state"],[243,23,235,21],[243,24,235,22,"routes"],[243,30,235,28],[243,31,235,29,"filter"],[243,37,235,35],[243,38,235,36,"r"],[243,39,235,37],[243,43,235,41,"r"],[243,44,235,42],[243,45,235,43,"key"],[243,48,235,46],[243,53,235,51,"route"],[243,58,235,56],[243,59,235,57,"key"],[243,62,235,60],[243,63,235,61],[244,10,236,8,"openingRouteKeys"],[244,26,236,24],[244,28,236,26,"state"],[244,33,236,31],[244,34,236,32,"openingRouteKeys"],[244,50,236,48],[244,51,236,49,"filter"],[244,57,236,55],[244,58,236,56,"key"],[244,61,236,59],[244,65,236,63,"key"],[244,68,236,66],[244,73,236,71,"route"],[244,78,236,76],[244,79,236,77,"key"],[244,82,236,80],[244,83,236,81],[245,10,237,8,"closingRouteKeys"],[245,26,237,24],[245,28,237,26,"state"],[245,33,237,31],[245,34,237,32,"closingRouteKeys"],[245,50,237,48],[245,51,237,49,"filter"],[245,57,237,55],[245,58,237,56,"key"],[245,61,237,59],[245,65,237,63,"key"],[245,68,237,66],[245,73,237,71,"route"],[245,78,237,76],[245,79,237,77,"key"],[245,82,237,80],[246,8,238,6],[246,9,238,7],[246,10,238,8],[246,11,238,9],[247,6,239,4],[248,4,240,2],[248,5,240,3],[249,4,241,2,"handleTransitionStart"],[249,25,241,23],[249,28,241,26,"handleTransitionStart"],[249,29,241,27],[250,6,242,4,"route"],[251,4,243,2],[251,5,243,3],[251,7,243,5,"closing"],[251,14,243,12],[251,19,243,17],[251,23,243,21],[251,24,243,22,"props"],[251,29,243,27],[251,30,243,28,"navigation"],[251,40,243,38],[251,41,243,39,"emit"],[251,45,243,43],[251,46,243,44],[252,6,244,4,"type"],[252,10,244,8],[252,12,244,10],[252,29,244,27],[253,6,245,4,"data"],[253,10,245,8],[253,12,245,10],[254,8,246,6,"closing"],[255,6,247,4],[255,7,247,5],[256,6,248,4,"target"],[256,12,248,10],[256,14,248,12,"route"],[256,19,248,17],[256,20,248,18,"key"],[257,4,249,2],[257,5,249,3],[257,6,249,4],[258,4,250,2,"handleTransitionEnd"],[258,23,250,21],[258,26,250,24,"handleTransitionEnd"],[258,27,250,25],[259,6,251,4,"route"],[260,4,252,2],[260,5,252,3],[260,7,252,5,"closing"],[260,14,252,12],[260,19,252,17],[260,23,252,21],[260,24,252,22,"props"],[260,29,252,27],[260,30,252,28,"navigation"],[260,40,252,38],[260,41,252,39,"emit"],[260,45,252,43],[260,46,252,44],[261,6,253,4,"type"],[261,10,253,8],[261,12,253,10],[261,27,253,25],[262,6,254,4,"data"],[262,10,254,8],[262,12,254,10],[263,8,255,6,"closing"],[264,6,256,4],[264,7,256,5],[265,6,257,4,"target"],[265,12,257,10],[265,14,257,12,"route"],[265,19,257,17],[265,20,257,18,"key"],[266,4,258,2],[266,5,258,3],[266,6,258,4],[267,4,259,2,"handleGestureStart"],[267,22,259,20],[267,25,259,23,"handleGestureStart"],[267,26,259,24],[268,6,260,4,"route"],[269,4,261,2],[269,5,261,3],[269,10,261,8],[270,6,262,4],[270,10,262,8],[270,11,262,9,"props"],[270,16,262,14],[270,17,262,15,"navigation"],[270,27,262,25],[270,28,262,26,"emit"],[270,32,262,30],[270,33,262,31],[271,8,263,6,"type"],[271,12,263,10],[271,14,263,12],[271,28,263,26],[272,8,264,6,"target"],[272,14,264,12],[272,16,264,14,"route"],[272,21,264,19],[272,22,264,20,"key"],[273,6,265,4],[273,7,265,5],[273,8,265,6],[274,4,266,2],[274,5,266,3],[275,4,267,2,"handleGestureEnd"],[275,20,267,18],[275,23,267,21,"handleGestureEnd"],[275,24,267,22],[276,6,268,4,"route"],[277,4,269,2],[277,5,269,3],[277,10,269,8],[278,6,270,4],[278,10,270,8],[278,11,270,9,"props"],[278,16,270,14],[278,17,270,15,"navigation"],[278,27,270,25],[278,28,270,26,"emit"],[278,32,270,30],[278,33,270,31],[279,8,271,6,"type"],[279,12,271,10],[279,14,271,12],[279,26,271,24],[280,8,272,6,"target"],[280,14,272,12],[280,16,272,14,"route"],[280,21,272,19],[280,22,272,20,"key"],[281,6,273,4],[281,7,273,5],[281,8,273,6],[282,4,274,2],[282,5,274,3],[283,4,275,2,"handleGestureCancel"],[283,23,275,21],[283,26,275,24,"handleGestureCancel"],[283,27,275,25],[284,6,276,4,"route"],[285,4,277,2],[285,5,277,3],[285,10,277,8],[286,6,278,4],[286,10,278,8],[286,11,278,9,"props"],[286,16,278,14],[286,17,278,15,"navigation"],[286,27,278,25],[286,28,278,26,"emit"],[286,32,278,30],[286,33,278,31],[287,8,279,6,"type"],[287,12,279,10],[287,14,279,12],[287,29,279,27],[288,8,280,6,"target"],[288,14,280,12],[288,16,280,14,"route"],[288,21,280,19],[288,22,280,20,"key"],[289,6,281,4],[289,7,281,5],[289,8,281,6],[290,4,282,2],[290,5,282,3],[291,4,283,2,"render"],[291,10,283,8,"render"],[291,11,283,8],[291,13,283,11],[292,6,284,4],[292,12,284,10],[293,8,285,6,"state"],[293,13,285,11],[294,8,286,6],[295,8,287,6,"descriptors"],[295,19,287,17],[295,21,287,19,"_"],[295,22,287,20],[296,8,288,6],[296,11,288,9,"rest"],[297,6,289,4],[297,7,289,5],[297,10,289,8],[297,14,289,12],[297,15,289,13,"props"],[297,20,289,18],[298,6,290,4],[298,12,290,10],[299,8,291,6,"routes"],[299,14,291,12],[300,8,292,6,"descriptors"],[300,19,292,17],[301,8,293,6,"openingRouteKeys"],[301,24,293,22],[302,8,294,6,"closingRouteKeys"],[303,6,295,4],[303,7,295,5],[303,10,295,8],[303,14,295,12],[303,15,295,13,"state"],[303,20,295,18],[304,6,296,4],[304,12,296,10,"preloadedDescriptors"],[304,32,296,30],[304,35,296,33,"state"],[304,40,296,38],[304,41,296,39,"preloadedRoutes"],[304,56,296,54],[304,57,296,55,"reduce"],[304,63,296,61],[304,64,296,62],[304,65,296,63,"acc"],[304,68,296,66],[304,70,296,68,"route"],[304,75,296,73],[304,80,296,78],[305,8,297,6,"acc"],[305,11,297,9],[305,12,297,10,"route"],[305,17,297,15],[305,18,297,16,"key"],[305,21,297,19],[305,22,297,20],[305,25,297,23,"acc"],[305,28,297,26],[305,29,297,27,"route"],[305,34,297,32],[305,35,297,33,"key"],[305,38,297,36],[305,39,297,37],[305,43,297,41],[305,47,297,45],[305,48,297,46,"props"],[305,53,297,51],[305,54,297,52,"describe"],[305,62,297,60],[305,63,297,61,"route"],[305,68,297,66],[305,70,297,68],[305,74,297,72],[305,75,297,73],[306,8,298,6],[306,15,298,13,"acc"],[306,18,298,16],[307,6,299,4],[307,7,299,5],[307,9,299,7],[307,10,299,8],[307,11,299,9],[307,12,299,10],[308,6,300,4],[308,13,300,11],[308,26,300,24],[308,30,300,24,"_jsx"],[308,45,300,28],[308,47,300,29,"GestureHandlerWrapper"],[308,68,300,50],[308,70,300,52],[309,8,301,6,"style"],[309,13,301,11],[309,15,301,13,"styles"],[309,21,301,19],[309,22,301,20,"container"],[309,31,301,29],[310,8,302,6,"children"],[310,16,302,14],[310,18,302,16],[310,31,302,29],[310,35,302,29,"_jsx"],[310,50,302,33],[310,52,302,34,"SafeAreaProviderCompat"],[310,84,302,56],[310,86,302,58],[311,10,303,8,"children"],[311,18,303,16],[311,20,303,18],[311,33,303,31],[311,37,303,31,"_jsx"],[311,52,303,35],[311,54,303,36,"SafeAreaInsetsContext"],[311,103,303,57],[311,104,303,58,"Consumer"],[311,112,303,66],[311,114,303,68],[312,12,304,10,"children"],[312,20,304,18],[312,22,304,20,"insets"],[312,28,304,26],[312,32,304,30],[312,45,304,43],[312,49,304,43,"_jsx"],[312,64,304,47],[312,66,304,48,"ModalPresentationContext"],[312,116,304,72],[312,117,304,73,"Consumer"],[312,125,304,81],[312,127,304,83],[313,14,305,12,"children"],[313,22,305,20],[313,24,305,22,"isParentModal"],[313,37,305,35],[313,41,305,39],[313,54,305,52],[313,58,305,52,"_jsx"],[313,73,305,56],[313,75,305,57,"HeaderShownContext"],[313,103,305,75],[313,104,305,76,"Consumer"],[313,112,305,84],[313,114,305,86],[314,16,306,14,"children"],[314,24,306,22],[314,26,306,24,"isParentHeaderShown"],[314,45,306,43],[314,49,306,47],[314,62,306,60],[314,66,306,60,"_jsx"],[314,81,306,64],[314,83,306,65,"CardStack"],[314,103,306,74],[314,105,306,76],[315,18,307,16,"insets"],[315,24,307,22],[315,26,307,24,"insets"],[315,32,307,30],[316,18,308,16,"isParentHeaderShown"],[316,37,308,35],[316,39,308,37,"isParentHeaderShown"],[316,58,308,56],[317,18,309,16,"isParentModal"],[317,31,309,29],[317,33,309,31,"isParentModal"],[317,46,309,44],[318,18,310,16,"getPreviousRoute"],[318,34,310,32],[318,36,310,34],[318,40,310,38],[318,41,310,39,"getPreviousRoute"],[318,57,310,55],[319,18,311,16,"routes"],[319,24,311,22],[319,26,311,24,"routes"],[319,32,311,30],[320,18,312,16,"openingRouteKeys"],[320,34,312,32],[320,36,312,34,"openingRouteKeys"],[320,52,312,50],[321,18,313,16,"closingRouteKeys"],[321,34,313,32],[321,36,313,34,"closingRouteKeys"],[321,52,313,50],[322,18,314,16,"onOpenRoute"],[322,29,314,27],[322,31,314,29],[322,35,314,33],[322,36,314,34,"handleOpenRoute"],[322,51,314,49],[323,18,315,16,"onCloseRoute"],[323,30,315,28],[323,32,315,30],[323,36,315,34],[323,37,315,35,"handleCloseRoute"],[323,53,315,51],[324,18,316,16,"onTransitionStart"],[324,35,316,33],[324,37,316,35],[324,41,316,39],[324,42,316,40,"handleTransitionStart"],[324,63,316,61],[325,18,317,16,"onTransitionEnd"],[325,33,317,31],[325,35,317,33],[325,39,317,37],[325,40,317,38,"handleTransitionEnd"],[325,59,317,57],[326,18,318,16,"renderHeader"],[326,30,318,28],[326,32,318,30],[326,36,318,34],[326,37,318,35,"renderHeader"],[326,49,318,47],[327,18,319,16,"state"],[327,23,319,21],[327,25,319,23,"state"],[327,30,319,28],[328,18,320,16,"descriptors"],[328,29,320,27],[328,31,320,29,"descriptors"],[328,42,320,40],[329,18,321,16,"onGestureStart"],[329,32,321,30],[329,34,321,32],[329,38,321,36],[329,39,321,37,"handleGestureStart"],[329,57,321,55],[330,18,322,16,"onGestureEnd"],[330,30,322,28],[330,32,322,30],[330,36,322,34],[330,37,322,35,"handleGestureEnd"],[330,53,322,51],[331,18,323,16,"onGestureCancel"],[331,33,323,31],[331,35,323,33],[331,39,323,37],[331,40,323,38,"handleGestureCancel"],[331,59,323,57],[332,18,324,16,"preloadedDescriptors"],[332,38,324,36],[332,40,324,38,"preloadedDescriptors"],[332,60,324,58],[333,18,325,16],[333,21,325,19,"rest"],[334,16,326,14],[334,17,326,15],[335,14,327,12],[335,15,327,13],[336,12,328,10],[336,13,328,11],[337,10,329,8],[337,11,329,9],[338,8,330,6],[338,9,330,7],[339,6,331,4],[339,7,331,5],[339,8,331,6],[340,4,332,2],[341,2,333,0],[342,2,333,1,"exports"],[342,9,333,1],[342,10,333,1,"StackView"],[342,19,333,1],[342,22,333,1,"StackView"],[342,31,333,1],[343,2,334,0],[343,8,334,6,"styles"],[343,14,334,12],[343,17,334,15,"StyleSheet"],[343,36,334,25],[343,37,334,26,"create"],[343,43,334,32],[343,44,334,33],[344,4,335,2,"container"],[344,13,335,11],[344,15,335,13],[345,6,336,4,"flex"],[345,10,336,8],[345,12,336,10],[346,4,337,2],[347,2,338,0],[347,3,338,1],[347,4,338,2],[348,0,338,3],[348,3]],"functionMap":{"names":["<global>","isArrayEqual","a.every$argument_0","StackView","getDerivedStateFromProps","props.state.routes.map$argument_0","state.previousRoutes.map$argument_0","state.routes.reduce$argument_0","props.state.routes.reduce$argument_0","state.routes.map$argument_0","isAnimationEnabled","getAnimationTypeForReplace","previousRoutes.some$argument_0","routes.some$argument_0","openingRouteKeys.filter$argument_0","replacingRouteKeys.filter$argument_0","closingRouteKeys.filter$argument_0","state.routes.filter$argument_0","routes.reduce$argument_0","getPreviousRoute","routes.findIndex$argument_0","renderHeader","handleOpenRoute","closingRouteKeys.some$argument_0","replacingRouteKeys.every$argument_0","state.routes.some$argument_0","navigation.dispatch$argument_0","setState$argument_0","state.openingRouteKeys.filter$argument_0","state.closingRouteKeys.filter$argument_0","handleCloseRoute","handleTransitionStart","handleTransitionEnd","handleGestureStart","handleGestureEnd","handleGestureCancel","render","state.preloadedRoutes.reduce$argument_0","_jsx$argument_1.children"],"mappings":"AAA;qBCkB,2CC,sCD,CD;OGC;ECC;4FCE,UD,4BE,UF;0CGM;SHG;8CIK;SJG;kCKC,gCL;+BM8B;KNG;uCOC;KPG;8BQK,mCR,kBS,uCT;qDUS,uCV;yDWC,uCX;qDYc,mCZ;yDWC,mCX;2BSC,uCT;uDUG,uCV;yDUO,mCV;yDYM,uCZ;iEac;gHbE;sCcK;KdG;GDU;qBgBU;4CFO,oGE;mCCC,wBD;GhBE;iBkBC;GlBI;oBmBC;8BCW,wBD,8BE,wBF,iEG,wBH;0BIG;+CTC,wBS;OJM;oBKE;sEVC,8CU;wDCC,wBD;wDEC,wBF;QLE;GnBE;qB2BC;0BLO,wBK;oBHW;oCVC,wBU;wDCC,wBD;wDEC,wBF;QGC;G3BE;0B4BC;I5BQ;wB6BC;I7BQ;uB8BC;G9BO;qB+BC;G/BO;wBgCC;GhCO;EiCC;8DCa;KDG;oBEK;YFwB;GjCI;CHC"}},"type":"js/module"}]}