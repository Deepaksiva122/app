{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"@react-navigation/elements","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":88,"index":103}}],"key":"LmqW7jh+SpCzQZMkzh+Awcuawt0=","exportNames":["*"]}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":104},"end":{"line":4,"column":71,"index":175}}],"key":"yKhyWCfwa1gXEwEbMKnWHykYbZ4=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":176},"end":{"line":5,"column":31,"index":207}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"]}},{"name":"react-native-safe-area-context","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":257},"end":{"line":7,"column":71,"index":328}}],"key":"XjdTKvCUWX6CbQzg5fSDHG/WgHk=","exportNames":["*"]}},{"name":"../../utils/ModalPresentationContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":329},"end":{"line":8,"column":83,"index":412}}],"key":"Df1aec0EkzLZaxqOOhpXHtHsUBw=","exportNames":["*"]}},{"name":"../GestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":413},"end":{"line":9,"column":59,"index":472}}],"key":"bP+xiBbX7IFbUJ129q5EloqQNcU=","exportNames":["*"]}},{"name":"../Header/HeaderContainer.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":473},"end":{"line":10,"column":63,"index":536}}],"key":"ssAYFj+p5GmloopIXQZmsY6VIu4=","exportNames":["*"]}},{"name":"./CardStack.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":537},"end":{"line":11,"column":64,"index":601}}],"key":"FX5td+JkxKGnfFTvjJTV5ylJcpk=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":602},"end":{"line":12,"column":48,"index":650}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StackView = void 0;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _elements = require(_dependencyMap[2], \"@react-navigation/elements\");\n  var _native = require(_dependencyMap[3], \"@react-navigation/native\");\n  var React = _interopRequireWildcard(require(_dependencyMap[4], \"react\"));\n  var _StyleSheet = _interopRequireDefault(require(_dependencyMap[5], \"react-native-web/dist/exports/StyleSheet\"));\n  var _View = _interopRequireDefault(require(_dependencyMap[6], \"react-native-web/dist/exports/View\"));\n  var _reactNativeSafeAreaContext = require(_dependencyMap[7], \"react-native-safe-area-context\");\n  var _ModalPresentationContext = require(_dependencyMap[8], \"../../utils/ModalPresentationContext.js\");\n  var _GestureHandler = require(_dependencyMap[9], \"../GestureHandler\");\n  var _HeaderContainer = require(_dependencyMap[10], \"../Header/HeaderContainer.js\");\n  var _CardStack = require(_dependencyMap[11], \"./CardStack.js\");\n  var _jsxRuntime = require(_dependencyMap[12], \"react/jsx-runtime\");\n  const _excluded = [\"state\", \"descriptors\"];\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const GestureHandlerWrapper = _GestureHandler.GestureHandlerRootView ?? _View.default;\n\n  /**\n   * Compare two arrays with primitive values as the content.\n   * We need to make sure that both values and order match.\n   */\n  const isArrayEqual = (a, b) => a.length === b.length && a.every((it, index) => Object.is(it, b[index]));\n  class StackView extends React.Component {\n    static getDerivedStateFromProps(props, state) {\n      // If there was no change in routes, we don't need to compute anything\n      if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(r => r.key), state.previousRoutes.map(r => r.key))) && state.routes.length) {\n        let routes = state.routes;\n        let previousRoutes = state.previousRoutes;\n        let descriptors = props.descriptors;\n        let previousDescriptors = state.previousDescriptors;\n        if (props.descriptors !== state.previousDescriptors) {\n          descriptors = state.routes.reduce((acc, route) => {\n            acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n            return acc;\n          }, {});\n          previousDescriptors = props.descriptors;\n        }\n        if (props.state.routes !== state.previousRoutes) {\n          // if any route objects have changed, we should update them\n          const map = props.state.routes.reduce((acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          }, {});\n          routes = state.routes.map(route => map[route.key] || route);\n          previousRoutes = props.state.routes;\n        }\n        return {\n          routes,\n          previousRoutes,\n          descriptors,\n          previousDescriptors\n        };\n      }\n\n      // Here we determine which routes were added or removed to animate them\n      // We keep a copy of the route being removed in local state to be able to animate it\n\n      let routes = props.state.index < props.state.routes.length - 1 ?\n      // Remove any extra routes from the state\n      // The last visible route should be the focused route, i.e. at current index\n      props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n\n      // Now we need to determine which routes were added and removed\n      const {\n        previousRoutes\n      } = state;\n      let {\n        openingRouteKeys,\n        closingRouteKeys,\n        replacingRouteKeys\n      } = state;\n      const previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n      const nextFocusedRoute = routes[routes.length - 1];\n      const isAnimationEnabled = key => {\n        const descriptor = props.descriptors[key] || state.descriptors[key];\n        return (0, _CardStack.getAnimationEnabled)(descriptor?.options.animation);\n      };\n      const getAnimationTypeForReplace = key => {\n        const descriptor = props.descriptors[key] || state.descriptors[key];\n        return descriptor.options.animationTypeForReplace ?? 'push';\n      };\n      if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n        // We only need to animate routes if the focused route changed\n        // Animating previous routes won't be visible coz the focused route is on top of everything\n\n        if (previousRoutes.some(r => r.key === nextFocusedRoute.key) && !routes.some(r => r.key === previousFocusedRoute.key)) {\n          // The previously focused route was removed, and the new focused route was already present\n          // We treat this as a pop\n\n          if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n            closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n            // Sometimes a route can be closed before the opening animation finishes\n            // So we also need to remove it from the opening list\n            openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n            replacingRouteKeys = replacingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n            // Keep a copy of route being removed in the state to be able to animate it\n            routes = [...routes, previousFocusedRoute];\n          }\n        } else {\n          // A route has come to the focus, we treat this as a push\n          // A replace or rearranging can also trigger this\n          // The animation should look like push\n\n          if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n            // In this case, we need to animate pushing the focused route\n            // We don't care about animating any other added routes because they won't be visible\n            openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n            closingRouteKeys = closingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n            replacingRouteKeys = replacingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n            if (!routes.some(r => r.key === previousFocusedRoute.key)) {\n              // The previous focused route isn't present in state, we treat this as a replace\n\n              openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n              if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n                closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n                // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n                // But since user configured it to animate the old screen like a pop, we need to add this without animation\n                // So remove it from `openingRouteKeys` which will remove the animation\n                openingRouteKeys = openingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n\n                // Keep the route being removed at the end to animate it out\n                routes = [...routes, previousFocusedRoute];\n              } else {\n                replacingRouteKeys = [...replacingRouteKeys, previousFocusedRoute.key];\n                closingRouteKeys = closingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n                // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n                // We need to insert it just before the focused one (the route being pushed)\n                // After the push animation is completed, routes being replaced will be removed completely\n                routes = routes.slice();\n                routes.splice(routes.length - 1, 0, previousFocusedRoute);\n              }\n            }\n          }\n        }\n      } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n        // Keep the routes we are closing or replacing if animation is enabled for them\n        routes = routes.slice();\n        routes.splice(routes.length - 1, 0, ...state.routes.filter(({\n          key\n        }) => isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false));\n      }\n      if (!routes.length) {\n        throw new Error('There should always be at least one route in the navigation state.');\n      }\n      const descriptors = routes.reduce((acc, route) => {\n        acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n        return acc;\n      }, {});\n      return {\n        routes,\n        previousRoutes: props.state.routes,\n        previousDescriptors: props.descriptors,\n        openingRouteKeys,\n        closingRouteKeys,\n        replacingRouteKeys,\n        descriptors\n      };\n    }\n    state = {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    };\n    getPreviousRoute = ({\n      route\n    }) => {\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      const routes = this.state.routes.filter(r => r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key));\n      const index = routes.findIndex(r => r.key === route.key);\n      return routes[index - 1];\n    };\n    renderHeader = props => {\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_HeaderContainer.HeaderContainer, Object.assign({}, props));\n    };\n    handleOpenRoute = ({\n      route\n    }) => {\n      const {\n        state,\n        navigation\n      } = this.props;\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      if (closingRouteKeys.some(key => key === route.key) && replacingRouteKeys.every(key => key !== route.key) && state.routeNames.includes(route.name) && !state.routes.some(r => r.key === route.key)) {\n        // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n        // So we need to add this route back to the state\n        navigation.dispatch(state => {\n          const routes = [...state.routes.filter(r => r.key !== route.key), route];\n          return _native.CommonActions.reset(Object.assign({}, state, {\n            routes,\n            index: routes.length - 1\n          }));\n        });\n      } else {\n        this.setState(state => ({\n          routes: state.replacingRouteKeys.length ? state.routes.filter(r => !state.replacingRouteKeys.includes(r.key)) : state.routes,\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key),\n          replacingRouteKeys: []\n        }));\n      }\n    };\n    handleCloseRoute = ({\n      route\n    }) => {\n      const {\n        state,\n        navigation\n      } = this.props;\n      if (state.routes.some(r => r.key === route.key)) {\n        // If a route exists in state, trigger a pop\n        // This will happen in when the route was closed from the card component\n        // e.g. When the close animation triggered from a gesture ends\n        navigation.dispatch(Object.assign({}, _native.StackActions.pop(), {\n          source: route.key,\n          target: state.key\n        }));\n      } else {\n        // We need to clean up any state tracking the route and pop it immediately\n        this.setState(state => ({\n          routes: state.routes.filter(r => r.key !== route.key),\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key)\n        }));\n      }\n    };\n    handleTransitionStart = ({\n      route\n    }, closing) => this.props.navigation.emit({\n      type: 'transitionStart',\n      data: {\n        closing\n      },\n      target: route.key\n    });\n    handleTransitionEnd = ({\n      route\n    }, closing) => this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: {\n        closing\n      },\n      target: route.key\n    });\n    handleGestureStart = ({\n      route\n    }) => {\n      this.props.navigation.emit({\n        type: 'gestureStart',\n        target: route.key\n      });\n    };\n    handleGestureEnd = ({\n      route\n    }) => {\n      this.props.navigation.emit({\n        type: 'gestureEnd',\n        target: route.key\n      });\n    };\n    handleGestureCancel = ({\n      route\n    }) => {\n      this.props.navigation.emit({\n        type: 'gestureCancel',\n        target: route.key\n      });\n    };\n    render() {\n      const _this$props = this.props,\n        {\n          state\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } = _this$props,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, _excluded);\n      const {\n        routes,\n        descriptors,\n        openingRouteKeys,\n        closingRouteKeys\n      } = this.state;\n      const preloadedDescriptors = state.preloadedRoutes.reduce((acc, route) => {\n        acc[route.key] = acc[route.key] || this.props.describe(route, true);\n        return acc;\n      }, {});\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(GestureHandlerWrapper, {\n        style: styles.container,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_elements.SafeAreaProviderCompat, {\n          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeSafeAreaContext.SafeAreaInsetsContext.Consumer, {\n            children: insets => /*#__PURE__*/(0, _jsxRuntime.jsx)(_ModalPresentationContext.ModalPresentationContext.Consumer, {\n              children: isParentModal => /*#__PURE__*/(0, _jsxRuntime.jsx)(_elements.HeaderShownContext.Consumer, {\n                children: isParentHeaderShown => /*#__PURE__*/(0, _jsxRuntime.jsx)(_CardStack.CardStack, Object.assign({\n                  insets: insets,\n                  isParentHeaderShown: isParentHeaderShown,\n                  isParentModal: isParentModal,\n                  getPreviousRoute: this.getPreviousRoute,\n                  routes: routes,\n                  openingRouteKeys: openingRouteKeys,\n                  closingRouteKeys: closingRouteKeys,\n                  onOpenRoute: this.handleOpenRoute,\n                  onCloseRoute: this.handleCloseRoute,\n                  onTransitionStart: this.handleTransitionStart,\n                  onTransitionEnd: this.handleTransitionEnd,\n                  renderHeader: this.renderHeader,\n                  state: state,\n                  descriptors: descriptors,\n                  onGestureStart: this.handleGestureStart,\n                  onGestureEnd: this.handleGestureEnd,\n                  onGestureCancel: this.handleGestureCancel,\n                  preloadedDescriptors: preloadedDescriptors\n                }, rest))\n              })\n            })\n          })\n        })\n      });\n    }\n  }\n  exports.StackView = StackView;\n  const styles = _StyleSheet.default.create({\n    container: {\n      flex: 1\n    }\n  });\n});","lineCount":345,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"StackView"],[8,19,1,13],[9,2,1,13],[9,6,1,13,"_objectWithoutPropertiesLoose2"],[9,36,1,13],[9,39,1,13,"_interopRequireDefault"],[9,61,1,13],[9,62,1,13,"require"],[9,69,1,13],[9,70,1,13,"_dependencyMap"],[9,84,1,13],[10,2,3,0],[10,6,3,0,"_elements"],[10,15,3,0],[10,18,3,0,"require"],[10,25,3,0],[10,26,3,0,"_dependencyMap"],[10,40,3,0],[11,2,4,0],[11,6,4,0,"_native"],[11,13,4,0],[11,16,4,0,"require"],[11,23,4,0],[11,24,4,0,"_dependencyMap"],[11,38,4,0],[12,2,5,0],[12,6,5,0,"React"],[12,11,5,0],[12,14,5,0,"_interopRequireWildcard"],[12,37,5,0],[12,38,5,0,"require"],[12,45,5,0],[12,46,5,0,"_dependencyMap"],[12,60,5,0],[13,2,5,31],[13,6,5,31,"_StyleSheet"],[13,17,5,31],[13,20,5,31,"_interopRequireDefault"],[13,42,5,31],[13,43,5,31,"require"],[13,50,5,31],[13,51,5,31,"_dependencyMap"],[13,65,5,31],[14,2,5,31],[14,6,5,31,"_View"],[14,11,5,31],[14,14,5,31,"_interopRequireDefault"],[14,36,5,31],[14,37,5,31,"require"],[14,44,5,31],[14,45,5,31,"_dependencyMap"],[14,59,5,31],[15,2,7,0],[15,6,7,0,"_reactNativeSafeAreaContext"],[15,33,7,0],[15,36,7,0,"require"],[15,43,7,0],[15,44,7,0,"_dependencyMap"],[15,58,7,0],[16,2,8,0],[16,6,8,0,"_ModalPresentationContext"],[16,31,8,0],[16,34,8,0,"require"],[16,41,8,0],[16,42,8,0,"_dependencyMap"],[16,56,8,0],[17,2,9,0],[17,6,9,0,"_GestureHandler"],[17,21,9,0],[17,24,9,0,"require"],[17,31,9,0],[17,32,9,0,"_dependencyMap"],[17,46,9,0],[18,2,10,0],[18,6,10,0,"_HeaderContainer"],[18,22,10,0],[18,25,10,0,"require"],[18,32,10,0],[18,33,10,0,"_dependencyMap"],[18,47,10,0],[19,2,11,0],[19,6,11,0,"_CardStack"],[19,16,11,0],[19,19,11,0,"require"],[19,26,11,0],[19,27,11,0,"_dependencyMap"],[19,41,11,0],[20,2,12,0],[20,6,12,0,"_jsxRuntime"],[20,17,12,0],[20,20,12,0,"require"],[20,27,12,0],[20,28,12,0,"_dependencyMap"],[20,42,12,0],[21,2,12,48],[21,8,12,48,"_excluded"],[21,17,12,48],[22,2,12,48],[22,11,12,48,"_interopRequireWildcard"],[22,35,12,48,"e"],[22,36,12,48],[22,38,12,48,"t"],[22,39,12,48],[22,68,12,48,"WeakMap"],[22,75,12,48],[22,81,12,48,"r"],[22,82,12,48],[22,89,12,48,"WeakMap"],[22,96,12,48],[22,100,12,48,"n"],[22,101,12,48],[22,108,12,48,"WeakMap"],[22,115,12,48],[22,127,12,48,"_interopRequireWildcard"],[22,150,12,48],[22,162,12,48,"_interopRequireWildcard"],[22,163,12,48,"e"],[22,164,12,48],[22,166,12,48,"t"],[22,167,12,48],[22,176,12,48,"t"],[22,177,12,48],[22,181,12,48,"e"],[22,182,12,48],[22,186,12,48,"e"],[22,187,12,48],[22,188,12,48,"__esModule"],[22,198,12,48],[22,207,12,48,"e"],[22,208,12,48],[22,214,12,48,"o"],[22,215,12,48],[22,217,12,48,"i"],[22,218,12,48],[22,220,12,48,"f"],[22,221,12,48],[22,226,12,48,"__proto__"],[22,235,12,48],[22,243,12,48,"default"],[22,250,12,48],[22,252,12,48,"e"],[22,253,12,48],[22,270,12,48,"e"],[22,271,12,48],[22,294,12,48,"e"],[22,295,12,48],[22,320,12,48,"e"],[22,321,12,48],[22,330,12,48,"f"],[22,331,12,48],[22,337,12,48,"o"],[22,338,12,48],[22,341,12,48,"t"],[22,342,12,48],[22,345,12,48,"n"],[22,346,12,48],[22,349,12,48,"r"],[22,350,12,48],[22,358,12,48,"o"],[22,359,12,48],[22,360,12,48,"has"],[22,363,12,48],[22,364,12,48,"e"],[22,365,12,48],[22,375,12,48,"o"],[22,376,12,48],[22,377,12,48,"get"],[22,380,12,48],[22,381,12,48,"e"],[22,382,12,48],[22,385,12,48,"o"],[22,386,12,48],[22,387,12,48,"set"],[22,390,12,48],[22,391,12,48,"e"],[22,392,12,48],[22,394,12,48,"f"],[22,395,12,48],[22,411,12,48,"t"],[22,412,12,48],[22,416,12,48,"e"],[22,417,12,48],[22,433,12,48,"t"],[22,434,12,48],[22,441,12,48,"hasOwnProperty"],[22,455,12,48],[22,456,12,48,"call"],[22,460,12,48],[22,461,12,48,"e"],[22,462,12,48],[22,464,12,48,"t"],[22,465,12,48],[22,472,12,48,"i"],[22,473,12,48],[22,477,12,48,"o"],[22,478,12,48],[22,481,12,48,"Object"],[22,487,12,48],[22,488,12,48,"defineProperty"],[22,502,12,48],[22,507,12,48,"Object"],[22,513,12,48],[22,514,12,48,"getOwnPropertyDescriptor"],[22,538,12,48],[22,539,12,48,"e"],[22,540,12,48],[22,542,12,48,"t"],[22,543,12,48],[22,550,12,48,"i"],[22,551,12,48],[22,552,12,48,"get"],[22,555,12,48],[22,559,12,48,"i"],[22,560,12,48],[22,561,12,48,"set"],[22,564,12,48],[22,568,12,48,"o"],[22,569,12,48],[22,570,12,48,"f"],[22,571,12,48],[22,573,12,48,"t"],[22,574,12,48],[22,576,12,48,"i"],[22,577,12,48],[22,581,12,48,"f"],[22,582,12,48],[22,583,12,48,"t"],[22,584,12,48],[22,588,12,48,"e"],[22,589,12,48],[22,590,12,48,"t"],[22,591,12,48],[22,602,12,48,"f"],[22,603,12,48],[22,608,12,48,"e"],[22,609,12,48],[22,611,12,48,"t"],[22,612,12,48],[23,2,13,0],[23,8,13,6,"GestureHandlerWrapper"],[23,29,13,27],[23,32,13,30,"GestureHandlerRootView"],[23,70,13,52],[23,74,13,56,"View"],[23,87,13,60],[25,2,15,0],[26,0,16,0],[27,0,17,0],[28,0,18,0],[29,2,19,0],[29,8,19,6,"isArrayEqual"],[29,20,19,18],[29,23,19,21,"isArrayEqual"],[29,24,19,22,"a"],[29,25,19,23],[29,27,19,25,"b"],[29,28,19,26],[29,33,19,31,"a"],[29,34,19,32],[29,35,19,33,"length"],[29,41,19,39],[29,46,19,44,"b"],[29,47,19,45],[29,48,19,46,"length"],[29,54,19,52],[29,58,19,56,"a"],[29,59,19,57],[29,60,19,58,"every"],[29,65,19,63],[29,66,19,64],[29,67,19,65,"it"],[29,69,19,67],[29,71,19,69,"index"],[29,76,19,74],[29,81,19,79,"Object"],[29,87,19,85],[29,88,19,86,"is"],[29,90,19,88],[29,91,19,89,"it"],[29,93,19,91],[29,95,19,93,"b"],[29,96,19,94],[29,97,19,95,"index"],[29,102,19,100],[29,103,19,101],[29,104,19,102],[29,105,19,103],[30,2,20,7],[30,8,20,13,"StackView"],[30,17,20,22],[30,26,20,31,"React"],[30,31,20,36],[30,32,20,37,"Component"],[30,41,20,46],[30,42,20,47],[31,4,21,2],[31,11,21,9,"getDerivedStateFromProps"],[31,35,21,33,"getDerivedStateFromProps"],[31,36,21,34,"props"],[31,41,21,39],[31,43,21,41,"state"],[31,48,21,46],[31,50,21,48],[32,6,22,4],[33,6,23,4],[33,10,23,8],[33,11,23,9,"props"],[33,16,23,14],[33,17,23,15,"state"],[33,22,23,20],[33,23,23,21,"routes"],[33,29,23,27],[33,34,23,32,"state"],[33,39,23,37],[33,40,23,38,"previousRoutes"],[33,54,23,52],[33,58,23,56,"isArrayEqual"],[33,70,23,68],[33,71,23,69,"props"],[33,76,23,74],[33,77,23,75,"state"],[33,82,23,80],[33,83,23,81,"routes"],[33,89,23,87],[33,90,23,88,"map"],[33,93,23,91],[33,94,23,92,"r"],[33,95,23,93],[33,99,23,97,"r"],[33,100,23,98],[33,101,23,99,"key"],[33,104,23,102],[33,105,23,103],[33,107,23,105,"state"],[33,112,23,110],[33,113,23,111,"previousRoutes"],[33,127,23,125],[33,128,23,126,"map"],[33,131,23,129],[33,132,23,130,"r"],[33,133,23,131],[33,137,23,135,"r"],[33,138,23,136],[33,139,23,137,"key"],[33,142,23,140],[33,143,23,141],[33,144,23,142],[33,149,23,147,"state"],[33,154,23,152],[33,155,23,153,"routes"],[33,161,23,159],[33,162,23,160,"length"],[33,168,23,166],[33,170,23,168],[34,8,24,6],[34,12,24,10,"routes"],[34,18,24,16],[34,21,24,19,"state"],[34,26,24,24],[34,27,24,25,"routes"],[34,33,24,31],[35,8,25,6],[35,12,25,10,"previousRoutes"],[35,26,25,24],[35,29,25,27,"state"],[35,34,25,32],[35,35,25,33,"previousRoutes"],[35,49,25,47],[36,8,26,6],[36,12,26,10,"descriptors"],[36,23,26,21],[36,26,26,24,"props"],[36,31,26,29],[36,32,26,30,"descriptors"],[36,43,26,41],[37,8,27,6],[37,12,27,10,"previousDescriptors"],[37,31,27,29],[37,34,27,32,"state"],[37,39,27,37],[37,40,27,38,"previousDescriptors"],[37,59,27,57],[38,8,28,6],[38,12,28,10,"props"],[38,17,28,15],[38,18,28,16,"descriptors"],[38,29,28,27],[38,34,28,32,"state"],[38,39,28,37],[38,40,28,38,"previousDescriptors"],[38,59,28,57],[38,61,28,59],[39,10,29,8,"descriptors"],[39,21,29,19],[39,24,29,22,"state"],[39,29,29,27],[39,30,29,28,"routes"],[39,36,29,34],[39,37,29,35,"reduce"],[39,43,29,41],[39,44,29,42],[39,45,29,43,"acc"],[39,48,29,46],[39,50,29,48,"route"],[39,55,29,53],[39,60,29,58],[40,12,30,10,"acc"],[40,15,30,13],[40,16,30,14,"route"],[40,21,30,19],[40,22,30,20,"key"],[40,25,30,23],[40,26,30,24],[40,29,30,27,"props"],[40,34,30,32],[40,35,30,33,"descriptors"],[40,46,30,44],[40,47,30,45,"route"],[40,52,30,50],[40,53,30,51,"key"],[40,56,30,54],[40,57,30,55],[40,61,30,59,"state"],[40,66,30,64],[40,67,30,65,"descriptors"],[40,78,30,76],[40,79,30,77,"route"],[40,84,30,82],[40,85,30,83,"key"],[40,88,30,86],[40,89,30,87],[41,12,31,10],[41,19,31,17,"acc"],[41,22,31,20],[42,10,32,8],[42,11,32,9],[42,13,32,11],[42,14,32,12],[42,15,32,13],[42,16,32,14],[43,10,33,8,"previousDescriptors"],[43,29,33,27],[43,32,33,30,"props"],[43,37,33,35],[43,38,33,36,"descriptors"],[43,49,33,47],[44,8,34,6],[45,8,35,6],[45,12,35,10,"props"],[45,17,35,15],[45,18,35,16,"state"],[45,23,35,21],[45,24,35,22,"routes"],[45,30,35,28],[45,35,35,33,"state"],[45,40,35,38],[45,41,35,39,"previousRoutes"],[45,55,35,53],[45,57,35,55],[46,10,36,8],[47,10,37,8],[47,16,37,14,"map"],[47,19,37,17],[47,22,37,20,"props"],[47,27,37,25],[47,28,37,26,"state"],[47,33,37,31],[47,34,37,32,"routes"],[47,40,37,38],[47,41,37,39,"reduce"],[47,47,37,45],[47,48,37,46],[47,49,37,47,"acc"],[47,52,37,50],[47,54,37,52,"route"],[47,59,37,57],[47,64,37,62],[48,12,38,10,"acc"],[48,15,38,13],[48,16,38,14,"route"],[48,21,38,19],[48,22,38,20,"key"],[48,25,38,23],[48,26,38,24],[48,29,38,27,"route"],[48,34,38,32],[49,12,39,10],[49,19,39,17,"acc"],[49,22,39,20],[50,10,40,8],[50,11,40,9],[50,13,40,11],[50,14,40,12],[50,15,40,13],[50,16,40,14],[51,10,41,8,"routes"],[51,16,41,14],[51,19,41,17,"state"],[51,24,41,22],[51,25,41,23,"routes"],[51,31,41,29],[51,32,41,30,"map"],[51,35,41,33],[51,36,41,34,"route"],[51,41,41,39],[51,45,41,43,"map"],[51,48,41,46],[51,49,41,47,"route"],[51,54,41,52],[51,55,41,53,"key"],[51,58,41,56],[51,59,41,57],[51,63,41,61,"route"],[51,68,41,66],[51,69,41,67],[52,10,42,8,"previousRoutes"],[52,24,42,22],[52,27,42,25,"props"],[52,32,42,30],[52,33,42,31,"state"],[52,38,42,36],[52,39,42,37,"routes"],[52,45,42,43],[53,8,43,6],[54,8,44,6],[54,15,44,13],[55,10,45,8,"routes"],[55,16,45,14],[56,10,46,8,"previousRoutes"],[56,24,46,22],[57,10,47,8,"descriptors"],[57,21,47,19],[58,10,48,8,"previousDescriptors"],[59,8,49,6],[59,9,49,7],[60,6,50,4],[62,6,52,4],[63,6,53,4],[65,6,55,4],[65,10,55,8,"routes"],[65,16,55,14],[65,19,55,17,"props"],[65,24,55,22],[65,25,55,23,"state"],[65,30,55,28],[65,31,55,29,"index"],[65,36,55,34],[65,39,55,37,"props"],[65,44,55,42],[65,45,55,43,"state"],[65,50,55,48],[65,51,55,49,"routes"],[65,57,55,55],[65,58,55,56,"length"],[65,64,55,62],[65,67,55,65],[65,68,55,66],[66,6,56,4],[67,6,57,4],[68,6,58,4,"props"],[68,11,58,9],[68,12,58,10,"state"],[68,17,58,15],[68,18,58,16,"routes"],[68,24,58,22],[68,25,58,23,"slice"],[68,30,58,28],[68,31,58,29],[68,32,58,30],[68,34,58,32,"props"],[68,39,58,37],[68,40,58,38,"state"],[68,45,58,43],[68,46,58,44,"index"],[68,51,58,49],[68,54,58,52],[68,55,58,53],[68,56,58,54],[68,59,58,57,"props"],[68,64,58,62],[68,65,58,63,"state"],[68,70,58,68],[68,71,58,69,"routes"],[68,77,58,75],[70,6,60,4],[71,6,61,4],[71,12,61,10],[72,8,62,6,"previousRoutes"],[73,6,63,4],[73,7,63,5],[73,10,63,8,"state"],[73,15,63,13],[74,6,64,4],[74,10,64,8],[75,8,65,6,"openingRouteKeys"],[75,24,65,22],[76,8,66,6,"closingRouteKeys"],[76,24,66,22],[77,8,67,6,"replacingRouteKeys"],[78,6,68,4],[78,7,68,5],[78,10,68,8,"state"],[78,15,68,13],[79,6,69,4],[79,12,69,10,"previousFocusedRoute"],[79,32,69,30],[79,35,69,33,"previousRoutes"],[79,49,69,47],[79,50,69,48,"previousRoutes"],[79,64,69,62],[79,65,69,63,"length"],[79,71,69,69],[79,74,69,72],[79,75,69,73],[79,76,69,74],[80,6,70,4],[80,12,70,10,"nextFocusedRoute"],[80,28,70,26],[80,31,70,29,"routes"],[80,37,70,35],[80,38,70,36,"routes"],[80,44,70,42],[80,45,70,43,"length"],[80,51,70,49],[80,54,70,52],[80,55,70,53],[80,56,70,54],[81,6,71,4],[81,12,71,10,"isAnimationEnabled"],[81,30,71,28],[81,33,71,31,"key"],[81,36,71,34],[81,40,71,38],[82,8,72,6],[82,14,72,12,"descriptor"],[82,24,72,22],[82,27,72,25,"props"],[82,32,72,30],[82,33,72,31,"descriptors"],[82,44,72,42],[82,45,72,43,"key"],[82,48,72,46],[82,49,72,47],[82,53,72,51,"state"],[82,58,72,56],[82,59,72,57,"descriptors"],[82,70,72,68],[82,71,72,69,"key"],[82,74,72,72],[82,75,72,73],[83,8,73,6],[83,15,73,13],[83,19,73,13,"getAnimationEnabled"],[83,49,73,32],[83,51,73,33,"descriptor"],[83,61,73,43],[83,63,73,45,"options"],[83,70,73,52],[83,71,73,53,"animation"],[83,80,73,62],[83,81,73,63],[84,6,74,4],[84,7,74,5],[85,6,75,4],[85,12,75,10,"getAnimationTypeForReplace"],[85,38,75,36],[85,41,75,39,"key"],[85,44,75,42],[85,48,75,46],[86,8,76,6],[86,14,76,12,"descriptor"],[86,24,76,22],[86,27,76,25,"props"],[86,32,76,30],[86,33,76,31,"descriptors"],[86,44,76,42],[86,45,76,43,"key"],[86,48,76,46],[86,49,76,47],[86,53,76,51,"state"],[86,58,76,56],[86,59,76,57,"descriptors"],[86,70,76,68],[86,71,76,69,"key"],[86,74,76,72],[86,75,76,73],[87,8,77,6],[87,15,77,13,"descriptor"],[87,25,77,23],[87,26,77,24,"options"],[87,33,77,31],[87,34,77,32,"animationTypeForReplace"],[87,57,77,55],[87,61,77,59],[87,67,77,65],[88,6,78,4],[88,7,78,5],[89,6,79,4],[89,10,79,8,"previousFocusedRoute"],[89,30,79,28],[89,34,79,32,"previousFocusedRoute"],[89,54,79,52],[89,55,79,53,"key"],[89,58,79,56],[89,63,79,61,"nextFocusedRoute"],[89,79,79,77],[89,80,79,78,"key"],[89,83,79,81],[89,85,79,83],[90,8,80,6],[91,8,81,6],[93,8,83,6],[93,12,83,10,"previousRoutes"],[93,26,83,24],[93,27,83,25,"some"],[93,31,83,29],[93,32,83,30,"r"],[93,33,83,31],[93,37,83,35,"r"],[93,38,83,36],[93,39,83,37,"key"],[93,42,83,40],[93,47,83,45,"nextFocusedRoute"],[93,63,83,61],[93,64,83,62,"key"],[93,67,83,65],[93,68,83,66],[93,72,83,70],[93,73,83,71,"routes"],[93,79,83,77],[93,80,83,78,"some"],[93,84,83,82],[93,85,83,83,"r"],[93,86,83,84],[93,90,83,88,"r"],[93,91,83,89],[93,92,83,90,"key"],[93,95,83,93],[93,100,83,98,"previousFocusedRoute"],[93,120,83,118],[93,121,83,119,"key"],[93,124,83,122],[93,125,83,123],[93,127,83,125],[94,10,84,8],[95,10,85,8],[97,10,87,8],[97,14,87,12,"isAnimationEnabled"],[97,32,87,30],[97,33,87,31,"previousFocusedRoute"],[97,53,87,51],[97,54,87,52,"key"],[97,57,87,55],[97,58,87,56],[97,62,87,60],[97,63,87,61,"closingRouteKeys"],[97,79,87,77],[97,80,87,78,"includes"],[97,88,87,86],[97,89,87,87,"previousFocusedRoute"],[97,109,87,107],[97,110,87,108,"key"],[97,113,87,111],[97,114,87,112],[97,116,87,114],[98,12,88,10,"closingRouteKeys"],[98,28,88,26],[98,31,88,29],[98,32,88,30],[98,35,88,33,"closingRouteKeys"],[98,51,88,49],[98,53,88,51,"previousFocusedRoute"],[98,73,88,71],[98,74,88,72,"key"],[98,77,88,75],[98,78,88,76],[100,12,90,10],[101,12,91,10],[102,12,92,10,"openingRouteKeys"],[102,28,92,26],[102,31,92,29,"openingRouteKeys"],[102,47,92,45],[102,48,92,46,"filter"],[102,54,92,52],[102,55,92,53,"key"],[102,58,92,56],[102,62,92,60,"key"],[102,65,92,63],[102,70,92,68,"previousFocusedRoute"],[102,90,92,88],[102,91,92,89,"key"],[102,94,92,92],[102,95,92,93],[103,12,93,10,"replacingRouteKeys"],[103,30,93,28],[103,33,93,31,"replacingRouteKeys"],[103,51,93,49],[103,52,93,50,"filter"],[103,58,93,56],[103,59,93,57,"key"],[103,62,93,60],[103,66,93,64,"key"],[103,69,93,67],[103,74,93,72,"previousFocusedRoute"],[103,94,93,92],[103,95,93,93,"key"],[103,98,93,96],[103,99,93,97],[105,12,95,10],[106,12,96,10,"routes"],[106,18,96,16],[106,21,96,19],[106,22,96,20],[106,25,96,23,"routes"],[106,31,96,29],[106,33,96,31,"previousFocusedRoute"],[106,53,96,51],[106,54,96,52],[107,10,97,8],[108,8,98,6],[108,9,98,7],[108,15,98,13],[109,10,99,8],[110,10,100,8],[111,10,101,8],[113,10,103,8],[113,14,103,12,"isAnimationEnabled"],[113,32,103,30],[113,33,103,31,"nextFocusedRoute"],[113,49,103,47],[113,50,103,48,"key"],[113,53,103,51],[113,54,103,52],[113,58,103,56],[113,59,103,57,"openingRouteKeys"],[113,75,103,73],[113,76,103,74,"includes"],[113,84,103,82],[113,85,103,83,"nextFocusedRoute"],[113,101,103,99],[113,102,103,100,"key"],[113,105,103,103],[113,106,103,104],[113,108,103,106],[114,12,104,10],[115,12,105,10],[116,12,106,10,"openingRouteKeys"],[116,28,106,26],[116,31,106,29],[116,32,106,30],[116,35,106,33,"openingRouteKeys"],[116,51,106,49],[116,53,106,51,"nextFocusedRoute"],[116,69,106,67],[116,70,106,68,"key"],[116,73,106,71],[116,74,106,72],[117,12,107,10,"closingRouteKeys"],[117,28,107,26],[117,31,107,29,"closingRouteKeys"],[117,47,107,45],[117,48,107,46,"filter"],[117,54,107,52],[117,55,107,53,"key"],[117,58,107,56],[117,62,107,60,"key"],[117,65,107,63],[117,70,107,68,"nextFocusedRoute"],[117,86,107,84],[117,87,107,85,"key"],[117,90,107,88],[117,91,107,89],[118,12,108,10,"replacingRouteKeys"],[118,30,108,28],[118,33,108,31,"replacingRouteKeys"],[118,51,108,49],[118,52,108,50,"filter"],[118,58,108,56],[118,59,108,57,"key"],[118,62,108,60],[118,66,108,64,"key"],[118,69,108,67],[118,74,108,72,"nextFocusedRoute"],[118,90,108,88],[118,91,108,89,"key"],[118,94,108,92],[118,95,108,93],[119,12,109,10],[119,16,109,14],[119,17,109,15,"routes"],[119,23,109,21],[119,24,109,22,"some"],[119,28,109,26],[119,29,109,27,"r"],[119,30,109,28],[119,34,109,32,"r"],[119,35,109,33],[119,36,109,34,"key"],[119,39,109,37],[119,44,109,42,"previousFocusedRoute"],[119,64,109,62],[119,65,109,63,"key"],[119,68,109,66],[119,69,109,67],[119,71,109,69],[120,14,110,12],[122,14,112,12,"openingRouteKeys"],[122,30,112,28],[122,33,112,31,"openingRouteKeys"],[122,49,112,47],[122,50,112,48,"filter"],[122,56,112,54],[122,57,112,55,"key"],[122,60,112,58],[122,64,112,62,"key"],[122,67,112,65],[122,72,112,70,"previousFocusedRoute"],[122,92,112,90],[122,93,112,91,"key"],[122,96,112,94],[122,97,112,95],[123,14,113,12],[123,18,113,16,"getAnimationTypeForReplace"],[123,44,113,42],[123,45,113,43,"nextFocusedRoute"],[123,61,113,59],[123,62,113,60,"key"],[123,65,113,63],[123,66,113,64],[123,71,113,69],[123,76,113,74],[123,78,113,76],[124,16,114,14,"closingRouteKeys"],[124,32,114,30],[124,35,114,33],[124,36,114,34],[124,39,114,37,"closingRouteKeys"],[124,55,114,53],[124,57,114,55,"previousFocusedRoute"],[124,77,114,75],[124,78,114,76,"key"],[124,81,114,79],[124,82,114,80],[126,16,116,14],[127,16,117,14],[128,16,118,14],[129,16,119,14,"openingRouteKeys"],[129,32,119,30],[129,35,119,33,"openingRouteKeys"],[129,51,119,49],[129,52,119,50,"filter"],[129,58,119,56],[129,59,119,57,"key"],[129,62,119,60],[129,66,119,64,"key"],[129,69,119,67],[129,74,119,72,"nextFocusedRoute"],[129,90,119,88],[129,91,119,89,"key"],[129,94,119,92],[129,95,119,93],[131,16,121,14],[132,16,122,14,"routes"],[132,22,122,20],[132,25,122,23],[132,26,122,24],[132,29,122,27,"routes"],[132,35,122,33],[132,37,122,35,"previousFocusedRoute"],[132,57,122,55],[132,58,122,56],[133,14,123,12],[133,15,123,13],[133,21,123,19],[134,16,124,14,"replacingRouteKeys"],[134,34,124,32],[134,37,124,35],[134,38,124,36],[134,41,124,39,"replacingRouteKeys"],[134,59,124,57],[134,61,124,59,"previousFocusedRoute"],[134,81,124,79],[134,82,124,80,"key"],[134,85,124,83],[134,86,124,84],[135,16,125,14,"closingRouteKeys"],[135,32,125,30],[135,35,125,33,"closingRouteKeys"],[135,51,125,49],[135,52,125,50,"filter"],[135,58,125,56],[135,59,125,57,"key"],[135,62,125,60],[135,66,125,64,"key"],[135,69,125,67],[135,74,125,72,"previousFocusedRoute"],[135,94,125,92],[135,95,125,93,"key"],[135,98,125,96],[135,99,125,97],[137,16,127,14],[138,16,128,14],[139,16,129,14],[140,16,130,14,"routes"],[140,22,130,20],[140,25,130,23,"routes"],[140,31,130,29],[140,32,130,30,"slice"],[140,37,130,35],[140,38,130,36],[140,39,130,37],[141,16,131,14,"routes"],[141,22,131,20],[141,23,131,21,"splice"],[141,29,131,27],[141,30,131,28,"routes"],[141,36,131,34],[141,37,131,35,"length"],[141,43,131,41],[141,46,131,44],[141,47,131,45],[141,49,131,47],[141,50,131,48],[141,52,131,50,"previousFocusedRoute"],[141,72,131,70],[141,73,131,71],[142,14,132,12],[143,12,133,10],[144,10,134,8],[145,8,135,6],[146,6,136,4],[146,7,136,5],[146,13,136,11],[146,17,136,15,"replacingRouteKeys"],[146,35,136,33],[146,36,136,34,"length"],[146,42,136,40],[146,46,136,44,"closingRouteKeys"],[146,62,136,60],[146,63,136,61,"length"],[146,69,136,67],[146,71,136,69],[147,8,137,6],[148,8,138,6,"routes"],[148,14,138,12],[148,17,138,15,"routes"],[148,23,138,21],[148,24,138,22,"slice"],[148,29,138,27],[148,30,138,28],[148,31,138,29],[149,8,139,6,"routes"],[149,14,139,12],[149,15,139,13,"splice"],[149,21,139,19],[149,22,139,20,"routes"],[149,28,139,26],[149,29,139,27,"length"],[149,35,139,33],[149,38,139,36],[149,39,139,37],[149,41,139,39],[149,42,139,40],[149,44,139,42],[149,47,139,45,"state"],[149,52,139,50],[149,53,139,51,"routes"],[149,59,139,57],[149,60,139,58,"filter"],[149,66,139,64],[149,67,139,65],[149,68,139,66],[150,10,140,8,"key"],[151,8,141,6],[151,9,141,7],[151,14,141,12,"isAnimationEnabled"],[151,32,141,30],[151,33,141,31,"key"],[151,36,141,34],[151,37,141,35],[151,40,141,38,"replacingRouteKeys"],[151,58,141,56],[151,59,141,57,"includes"],[151,67,141,65],[151,68,141,66,"key"],[151,71,141,69],[151,72,141,70],[151,76,141,74,"closingRouteKeys"],[151,92,141,90],[151,93,141,91,"includes"],[151,101,141,99],[151,102,141,100,"key"],[151,105,141,103],[151,106,141,104],[151,109,141,107],[151,114,141,112],[151,115,141,113],[151,116,141,114],[152,6,142,4],[153,6,143,4],[153,10,143,8],[153,11,143,9,"routes"],[153,17,143,15],[153,18,143,16,"length"],[153,24,143,22],[153,26,143,24],[154,8,144,6],[154,14,144,12],[154,18,144,16,"Error"],[154,23,144,21],[154,24,144,22],[154,92,144,90],[154,93,144,91],[155,6,145,4],[156,6,146,4],[156,12,146,10,"descriptors"],[156,23,146,21],[156,26,146,24,"routes"],[156,32,146,30],[156,33,146,31,"reduce"],[156,39,146,37],[156,40,146,38],[156,41,146,39,"acc"],[156,44,146,42],[156,46,146,44,"route"],[156,51,146,49],[156,56,146,54],[157,8,147,6,"acc"],[157,11,147,9],[157,12,147,10,"route"],[157,17,147,15],[157,18,147,16,"key"],[157,21,147,19],[157,22,147,20],[157,25,147,23,"props"],[157,30,147,28],[157,31,147,29,"descriptors"],[157,42,147,40],[157,43,147,41,"route"],[157,48,147,46],[157,49,147,47,"key"],[157,52,147,50],[157,53,147,51],[157,57,147,55,"state"],[157,62,147,60],[157,63,147,61,"descriptors"],[157,74,147,72],[157,75,147,73,"route"],[157,80,147,78],[157,81,147,79,"key"],[157,84,147,82],[157,85,147,83],[158,8,148,6],[158,15,148,13,"acc"],[158,18,148,16],[159,6,149,4],[159,7,149,5],[159,9,149,7],[159,10,149,8],[159,11,149,9],[159,12,149,10],[160,6,150,4],[160,13,150,11],[161,8,151,6,"routes"],[161,14,151,12],[162,8,152,6,"previousRoutes"],[162,22,152,20],[162,24,152,22,"props"],[162,29,152,27],[162,30,152,28,"state"],[162,35,152,33],[162,36,152,34,"routes"],[162,42,152,40],[163,8,153,6,"previousDescriptors"],[163,27,153,25],[163,29,153,27,"props"],[163,34,153,32],[163,35,153,33,"descriptors"],[163,46,153,44],[164,8,154,6,"openingRouteKeys"],[164,24,154,22],[165,8,155,6,"closingRouteKeys"],[165,24,155,22],[166,8,156,6,"replacingRouteKeys"],[166,26,156,24],[167,8,157,6,"descriptors"],[168,6,158,4],[168,7,158,5],[169,4,159,2],[170,4,160,2,"state"],[170,9,160,7],[170,12,160,10],[171,6,161,4,"routes"],[171,12,161,10],[171,14,161,12],[171,16,161,14],[172,6,162,4,"previousRoutes"],[172,20,162,18],[172,22,162,20],[172,24,162,22],[173,6,163,4,"previousDescriptors"],[173,25,163,23],[173,27,163,25],[173,28,163,26],[173,29,163,27],[174,6,164,4,"openingRouteKeys"],[174,22,164,20],[174,24,164,22],[174,26,164,24],[175,6,165,4,"closingRouteKeys"],[175,22,165,20],[175,24,165,22],[175,26,165,24],[176,6,166,4,"replacingRouteKeys"],[176,24,166,22],[176,26,166,24],[176,28,166,26],[177,6,167,4,"descriptors"],[177,17,167,15],[177,19,167,17],[177,20,167,18],[178,4,168,2],[178,5,168,3],[179,4,169,2,"getPreviousRoute"],[179,20,169,18],[179,23,169,21,"getPreviousRoute"],[179,24,169,22],[180,6,170,4,"route"],[181,4,171,2],[181,5,171,3],[181,10,171,8],[182,6,172,4],[182,12,172,10],[183,8,173,6,"closingRouteKeys"],[183,24,173,22],[184,8,174,6,"replacingRouteKeys"],[185,6,175,4],[185,7,175,5],[185,10,175,8],[185,14,175,12],[185,15,175,13,"state"],[185,20,175,18],[186,6,176,4],[186,12,176,10,"routes"],[186,18,176,16],[186,21,176,19],[186,25,176,23],[186,26,176,24,"state"],[186,31,176,29],[186,32,176,30,"routes"],[186,38,176,36],[186,39,176,37,"filter"],[186,45,176,43],[186,46,176,44,"r"],[186,47,176,45],[186,51,176,49,"r"],[186,52,176,50],[186,53,176,51,"key"],[186,56,176,54],[186,61,176,59,"route"],[186,66,176,64],[186,67,176,65,"key"],[186,70,176,68],[186,74,176,72],[186,75,176,73,"closingRouteKeys"],[186,91,176,89],[186,92,176,90,"includes"],[186,100,176,98],[186,101,176,99,"r"],[186,102,176,100],[186,103,176,101,"key"],[186,106,176,104],[186,107,176,105],[186,111,176,109],[186,112,176,110,"replacingRouteKeys"],[186,130,176,128],[186,131,176,129,"includes"],[186,139,176,137],[186,140,176,138,"r"],[186,141,176,139],[186,142,176,140,"key"],[186,145,176,143],[186,146,176,144],[186,147,176,145],[187,6,177,4],[187,12,177,10,"index"],[187,17,177,15],[187,20,177,18,"routes"],[187,26,177,24],[187,27,177,25,"findIndex"],[187,36,177,34],[187,37,177,35,"r"],[187,38,177,36],[187,42,177,40,"r"],[187,43,177,41],[187,44,177,42,"key"],[187,47,177,45],[187,52,177,50,"route"],[187,57,177,55],[187,58,177,56,"key"],[187,61,177,59],[187,62,177,60],[188,6,178,4],[188,13,178,11,"routes"],[188,19,178,17],[188,20,178,18,"index"],[188,25,178,23],[188,28,178,26],[188,29,178,27],[188,30,178,28],[189,4,179,2],[189,5,179,3],[190,4,180,2,"renderHeader"],[190,16,180,14],[190,19,180,17,"props"],[190,24,180,22],[190,28,180,26],[191,6,181,4],[191,13,181,11],[191,26,181,24],[191,30,181,24,"_jsx"],[191,45,181,28],[191,47,181,29,"HeaderContainer"],[191,79,181,44],[191,81,181,44,"Object"],[191,87,181,44],[191,88,181,44,"assign"],[191,94,181,44],[191,99,182,9,"props"],[191,104,182,14],[191,105,183,5],[191,106,183,6],[192,4,184,2],[192,5,184,3],[193,4,185,2,"handleOpenRoute"],[193,19,185,17],[193,22,185,20,"handleOpenRoute"],[193,23,185,21],[194,6,186,4,"route"],[195,4,187,2],[195,5,187,3],[195,10,187,8],[196,6,188,4],[196,12,188,10],[197,8,189,6,"state"],[197,13,189,11],[198,8,190,6,"navigation"],[199,6,191,4],[199,7,191,5],[199,10,191,8],[199,14,191,12],[199,15,191,13,"props"],[199,20,191,18],[200,6,192,4],[200,12,192,10],[201,8,193,6,"closingRouteKeys"],[201,24,193,22],[202,8,194,6,"replacingRouteKeys"],[203,6,195,4],[203,7,195,5],[203,10,195,8],[203,14,195,12],[203,15,195,13,"state"],[203,20,195,18],[204,6,196,4],[204,10,196,8,"closingRouteKeys"],[204,26,196,24],[204,27,196,25,"some"],[204,31,196,29],[204,32,196,30,"key"],[204,35,196,33],[204,39,196,37,"key"],[204,42,196,40],[204,47,196,45,"route"],[204,52,196,50],[204,53,196,51,"key"],[204,56,196,54],[204,57,196,55],[204,61,196,59,"replacingRouteKeys"],[204,79,196,77],[204,80,196,78,"every"],[204,85,196,83],[204,86,196,84,"key"],[204,89,196,87],[204,93,196,91,"key"],[204,96,196,94],[204,101,196,99,"route"],[204,106,196,104],[204,107,196,105,"key"],[204,110,196,108],[204,111,196,109],[204,115,196,113,"state"],[204,120,196,118],[204,121,196,119,"routeNames"],[204,131,196,129],[204,132,196,130,"includes"],[204,140,196,138],[204,141,196,139,"route"],[204,146,196,144],[204,147,196,145,"name"],[204,151,196,149],[204,152,196,150],[204,156,196,154],[204,157,196,155,"state"],[204,162,196,160],[204,163,196,161,"routes"],[204,169,196,167],[204,170,196,168,"some"],[204,174,196,172],[204,175,196,173,"r"],[204,176,196,174],[204,180,196,178,"r"],[204,181,196,179],[204,182,196,180,"key"],[204,185,196,183],[204,190,196,188,"route"],[204,195,196,193],[204,196,196,194,"key"],[204,199,196,197],[204,200,196,198],[204,202,196,200],[205,8,197,6],[206,8,198,6],[207,8,199,6,"navigation"],[207,18,199,16],[207,19,199,17,"dispatch"],[207,27,199,25],[207,28,199,26,"state"],[207,33,199,31],[207,37,199,35],[208,10,200,8],[208,16,200,14,"routes"],[208,22,200,20],[208,25,200,23],[208,26,200,24],[208,29,200,27,"state"],[208,34,200,32],[208,35,200,33,"routes"],[208,41,200,39],[208,42,200,40,"filter"],[208,48,200,46],[208,49,200,47,"r"],[208,50,200,48],[208,54,200,52,"r"],[208,55,200,53],[208,56,200,54,"key"],[208,59,200,57],[208,64,200,62,"route"],[208,69,200,67],[208,70,200,68,"key"],[208,73,200,71],[208,74,200,72],[208,76,200,74,"route"],[208,81,200,79],[208,82,200,80],[209,10,201,8],[209,17,201,15,"CommonActions"],[209,38,201,28],[209,39,201,29,"reset"],[209,44,201,34],[209,45,201,34,"Object"],[209,51,201,34],[209,52,201,34,"assign"],[209,58,201,34],[209,63,202,13,"state"],[209,68,202,18],[210,12,203,10,"routes"],[210,18,203,16],[211,12,204,10,"index"],[211,17,204,15],[211,19,204,17,"routes"],[211,25,204,23],[211,26,204,24,"length"],[211,32,204,30],[211,35,204,33],[212,10,204,34],[212,12,205,9],[212,13,205,10],[213,8,206,6],[213,9,206,7],[213,10,206,8],[214,6,207,4],[214,7,207,5],[214,13,207,11],[215,8,208,6],[215,12,208,10],[215,13,208,11,"setState"],[215,21,208,19],[215,22,208,20,"state"],[215,27,208,25],[215,32,208,30],[216,10,209,8,"routes"],[216,16,209,14],[216,18,209,16,"state"],[216,23,209,21],[216,24,209,22,"replacingRouteKeys"],[216,42,209,40],[216,43,209,41,"length"],[216,49,209,47],[216,52,209,50,"state"],[216,57,209,55],[216,58,209,56,"routes"],[216,64,209,62],[216,65,209,63,"filter"],[216,71,209,69],[216,72,209,70,"r"],[216,73,209,71],[216,77,209,75],[216,78,209,76,"state"],[216,83,209,81],[216,84,209,82,"replacingRouteKeys"],[216,102,209,100],[216,103,209,101,"includes"],[216,111,209,109],[216,112,209,110,"r"],[216,113,209,111],[216,114,209,112,"key"],[216,117,209,115],[216,118,209,116],[216,119,209,117],[216,122,209,120,"state"],[216,127,209,125],[216,128,209,126,"routes"],[216,134,209,132],[217,10,210,8,"openingRouteKeys"],[217,26,210,24],[217,28,210,26,"state"],[217,33,210,31],[217,34,210,32,"openingRouteKeys"],[217,50,210,48],[217,51,210,49,"filter"],[217,57,210,55],[217,58,210,56,"key"],[217,61,210,59],[217,65,210,63,"key"],[217,68,210,66],[217,73,210,71,"route"],[217,78,210,76],[217,79,210,77,"key"],[217,82,210,80],[217,83,210,81],[218,10,211,8,"closingRouteKeys"],[218,26,211,24],[218,28,211,26,"state"],[218,33,211,31],[218,34,211,32,"closingRouteKeys"],[218,50,211,48],[218,51,211,49,"filter"],[218,57,211,55],[218,58,211,56,"key"],[218,61,211,59],[218,65,211,63,"key"],[218,68,211,66],[218,73,211,71,"route"],[218,78,211,76],[218,79,211,77,"key"],[218,82,211,80],[218,83,211,81],[219,10,212,8,"replacingRouteKeys"],[219,28,212,26],[219,30,212,28],[220,8,213,6],[220,9,213,7],[220,10,213,8],[220,11,213,9],[221,6,214,4],[222,4,215,2],[222,5,215,3],[223,4,216,2,"handleCloseRoute"],[223,20,216,18],[223,23,216,21,"handleCloseRoute"],[223,24,216,22],[224,6,217,4,"route"],[225,4,218,2],[225,5,218,3],[225,10,218,8],[226,6,219,4],[226,12,219,10],[227,8,220,6,"state"],[227,13,220,11],[228,8,221,6,"navigation"],[229,6,222,4],[229,7,222,5],[229,10,222,8],[229,14,222,12],[229,15,222,13,"props"],[229,20,222,18],[230,6,223,4],[230,10,223,8,"state"],[230,15,223,13],[230,16,223,14,"routes"],[230,22,223,20],[230,23,223,21,"some"],[230,27,223,25],[230,28,223,26,"r"],[230,29,223,27],[230,33,223,31,"r"],[230,34,223,32],[230,35,223,33,"key"],[230,38,223,36],[230,43,223,41,"route"],[230,48,223,46],[230,49,223,47,"key"],[230,52,223,50],[230,53,223,51],[230,55,223,53],[231,8,224,6],[232,8,225,6],[233,8,226,6],[234,8,227,6,"navigation"],[234,18,227,16],[234,19,227,17,"dispatch"],[234,27,227,25],[234,28,227,25,"Object"],[234,34,227,25],[234,35,227,25,"assign"],[234,41,227,25],[234,46,228,11,"StackActions"],[234,66,228,23],[234,67,228,24,"pop"],[234,70,228,27],[234,71,228,28],[234,72,228,29],[235,10,229,8,"source"],[235,16,229,14],[235,18,229,16,"route"],[235,23,229,21],[235,24,229,22,"key"],[235,27,229,25],[236,10,230,8,"target"],[236,16,230,14],[236,18,230,16,"state"],[236,23,230,21],[236,24,230,22,"key"],[237,8,230,25],[237,10,231,7],[237,11,231,8],[238,6,232,4],[238,7,232,5],[238,13,232,11],[239,8,233,6],[240,8,234,6],[240,12,234,10],[240,13,234,11,"setState"],[240,21,234,19],[240,22,234,20,"state"],[240,27,234,25],[240,32,234,30],[241,10,235,8,"routes"],[241,16,235,14],[241,18,235,16,"state"],[241,23,235,21],[241,24,235,22,"routes"],[241,30,235,28],[241,31,235,29,"filter"],[241,37,235,35],[241,38,235,36,"r"],[241,39,235,37],[241,43,235,41,"r"],[241,44,235,42],[241,45,235,43,"key"],[241,48,235,46],[241,53,235,51,"route"],[241,58,235,56],[241,59,235,57,"key"],[241,62,235,60],[241,63,235,61],[242,10,236,8,"openingRouteKeys"],[242,26,236,24],[242,28,236,26,"state"],[242,33,236,31],[242,34,236,32,"openingRouteKeys"],[242,50,236,48],[242,51,236,49,"filter"],[242,57,236,55],[242,58,236,56,"key"],[242,61,236,59],[242,65,236,63,"key"],[242,68,236,66],[242,73,236,71,"route"],[242,78,236,76],[242,79,236,77,"key"],[242,82,236,80],[242,83,236,81],[243,10,237,8,"closingRouteKeys"],[243,26,237,24],[243,28,237,26,"state"],[243,33,237,31],[243,34,237,32,"closingRouteKeys"],[243,50,237,48],[243,51,237,49,"filter"],[243,57,237,55],[243,58,237,56,"key"],[243,61,237,59],[243,65,237,63,"key"],[243,68,237,66],[243,73,237,71,"route"],[243,78,237,76],[243,79,237,77,"key"],[243,82,237,80],[244,8,238,6],[244,9,238,7],[244,10,238,8],[244,11,238,9],[245,6,239,4],[246,4,240,2],[246,5,240,3],[247,4,241,2,"handleTransitionStart"],[247,25,241,23],[247,28,241,26,"handleTransitionStart"],[247,29,241,27],[248,6,242,4,"route"],[249,4,243,2],[249,5,243,3],[249,7,243,5,"closing"],[249,14,243,12],[249,19,243,17],[249,23,243,21],[249,24,243,22,"props"],[249,29,243,27],[249,30,243,28,"navigation"],[249,40,243,38],[249,41,243,39,"emit"],[249,45,243,43],[249,46,243,44],[250,6,244,4,"type"],[250,10,244,8],[250,12,244,10],[250,29,244,27],[251,6,245,4,"data"],[251,10,245,8],[251,12,245,10],[252,8,246,6,"closing"],[253,6,247,4],[253,7,247,5],[254,6,248,4,"target"],[254,12,248,10],[254,14,248,12,"route"],[254,19,248,17],[254,20,248,18,"key"],[255,4,249,2],[255,5,249,3],[255,6,249,4],[256,4,250,2,"handleTransitionEnd"],[256,23,250,21],[256,26,250,24,"handleTransitionEnd"],[256,27,250,25],[257,6,251,4,"route"],[258,4,252,2],[258,5,252,3],[258,7,252,5,"closing"],[258,14,252,12],[258,19,252,17],[258,23,252,21],[258,24,252,22,"props"],[258,29,252,27],[258,30,252,28,"navigation"],[258,40,252,38],[258,41,252,39,"emit"],[258,45,252,43],[258,46,252,44],[259,6,253,4,"type"],[259,10,253,8],[259,12,253,10],[259,27,253,25],[260,6,254,4,"data"],[260,10,254,8],[260,12,254,10],[261,8,255,6,"closing"],[262,6,256,4],[262,7,256,5],[263,6,257,4,"target"],[263,12,257,10],[263,14,257,12,"route"],[263,19,257,17],[263,20,257,18,"key"],[264,4,258,2],[264,5,258,3],[264,6,258,4],[265,4,259,2,"handleGestureStart"],[265,22,259,20],[265,25,259,23,"handleGestureStart"],[265,26,259,24],[266,6,260,4,"route"],[267,4,261,2],[267,5,261,3],[267,10,261,8],[268,6,262,4],[268,10,262,8],[268,11,262,9,"props"],[268,16,262,14],[268,17,262,15,"navigation"],[268,27,262,25],[268,28,262,26,"emit"],[268,32,262,30],[268,33,262,31],[269,8,263,6,"type"],[269,12,263,10],[269,14,263,12],[269,28,263,26],[270,8,264,6,"target"],[270,14,264,12],[270,16,264,14,"route"],[270,21,264,19],[270,22,264,20,"key"],[271,6,265,4],[271,7,265,5],[271,8,265,6],[272,4,266,2],[272,5,266,3],[273,4,267,2,"handleGestureEnd"],[273,20,267,18],[273,23,267,21,"handleGestureEnd"],[273,24,267,22],[274,6,268,4,"route"],[275,4,269,2],[275,5,269,3],[275,10,269,8],[276,6,270,4],[276,10,270,8],[276,11,270,9,"props"],[276,16,270,14],[276,17,270,15,"navigation"],[276,27,270,25],[276,28,270,26,"emit"],[276,32,270,30],[276,33,270,31],[277,8,271,6,"type"],[277,12,271,10],[277,14,271,12],[277,26,271,24],[278,8,272,6,"target"],[278,14,272,12],[278,16,272,14,"route"],[278,21,272,19],[278,22,272,20,"key"],[279,6,273,4],[279,7,273,5],[279,8,273,6],[280,4,274,2],[280,5,274,3],[281,4,275,2,"handleGestureCancel"],[281,23,275,21],[281,26,275,24,"handleGestureCancel"],[281,27,275,25],[282,6,276,4,"route"],[283,4,277,2],[283,5,277,3],[283,10,277,8],[284,6,278,4],[284,10,278,8],[284,11,278,9,"props"],[284,16,278,14],[284,17,278,15,"navigation"],[284,27,278,25],[284,28,278,26,"emit"],[284,32,278,30],[284,33,278,31],[285,8,279,6,"type"],[285,12,279,10],[285,14,279,12],[285,29,279,27],[286,8,280,6,"target"],[286,14,280,12],[286,16,280,14,"route"],[286,21,280,19],[286,22,280,20,"key"],[287,6,281,4],[287,7,281,5],[287,8,281,6],[288,4,282,2],[288,5,282,3],[289,4,283,2,"render"],[289,10,283,8,"render"],[289,11,283,8],[289,13,283,11],[290,6,284,4],[290,12,284,4,"_this$props"],[290,23,284,4],[290,26,289,8],[290,30,289,12],[290,31,289,13,"props"],[290,36,289,18],[291,8,284,10],[292,10,285,6,"state"],[293,10,286,6],[294,8,289,4],[294,9,289,5],[294,12,289,5,"_this$props"],[294,23,289,5],[295,8,288,9,"rest"],[295,12,288,13],[295,19,288,13,"_objectWithoutPropertiesLoose2"],[295,49,288,13],[295,50,288,13,"default"],[295,57,288,13],[295,59,288,13,"_this$props"],[295,70,288,13],[295,72,288,13,"_excluded"],[295,81,288,13],[296,6,290,4],[296,12,290,10],[297,8,291,6,"routes"],[297,14,291,12],[298,8,292,6,"descriptors"],[298,19,292,17],[299,8,293,6,"openingRouteKeys"],[299,24,293,22],[300,8,294,6,"closingRouteKeys"],[301,6,295,4],[301,7,295,5],[301,10,295,8],[301,14,295,12],[301,15,295,13,"state"],[301,20,295,18],[302,6,296,4],[302,12,296,10,"preloadedDescriptors"],[302,32,296,30],[302,35,296,33,"state"],[302,40,296,38],[302,41,296,39,"preloadedRoutes"],[302,56,296,54],[302,57,296,55,"reduce"],[302,63,296,61],[302,64,296,62],[302,65,296,63,"acc"],[302,68,296,66],[302,70,296,68,"route"],[302,75,296,73],[302,80,296,78],[303,8,297,6,"acc"],[303,11,297,9],[303,12,297,10,"route"],[303,17,297,15],[303,18,297,16,"key"],[303,21,297,19],[303,22,297,20],[303,25,297,23,"acc"],[303,28,297,26],[303,29,297,27,"route"],[303,34,297,32],[303,35,297,33,"key"],[303,38,297,36],[303,39,297,37],[303,43,297,41],[303,47,297,45],[303,48,297,46,"props"],[303,53,297,51],[303,54,297,52,"describe"],[303,62,297,60],[303,63,297,61,"route"],[303,68,297,66],[303,70,297,68],[303,74,297,72],[303,75,297,73],[304,8,298,6],[304,15,298,13,"acc"],[304,18,298,16],[305,6,299,4],[305,7,299,5],[305,9,299,7],[305,10,299,8],[305,11,299,9],[305,12,299,10],[306,6,300,4],[306,13,300,11],[306,26,300,24],[306,30,300,24,"_jsx"],[306,45,300,28],[306,47,300,29,"GestureHandlerWrapper"],[306,68,300,50],[306,70,300,52],[307,8,301,6,"style"],[307,13,301,11],[307,15,301,13,"styles"],[307,21,301,19],[307,22,301,20,"container"],[307,31,301,29],[308,8,302,6,"children"],[308,16,302,14],[308,18,302,16],[308,31,302,29],[308,35,302,29,"_jsx"],[308,50,302,33],[308,52,302,34,"SafeAreaProviderCompat"],[308,84,302,56],[308,86,302,58],[309,10,303,8,"children"],[309,18,303,16],[309,20,303,18],[309,33,303,31],[309,37,303,31,"_jsx"],[309,52,303,35],[309,54,303,36,"SafeAreaInsetsContext"],[309,103,303,57],[309,104,303,58,"Consumer"],[309,112,303,66],[309,114,303,68],[310,12,304,10,"children"],[310,20,304,18],[310,22,304,20,"insets"],[310,28,304,26],[310,32,304,30],[310,45,304,43],[310,49,304,43,"_jsx"],[310,64,304,47],[310,66,304,48,"ModalPresentationContext"],[310,116,304,72],[310,117,304,73,"Consumer"],[310,125,304,81],[310,127,304,83],[311,14,305,12,"children"],[311,22,305,20],[311,24,305,22,"isParentModal"],[311,37,305,35],[311,41,305,39],[311,54,305,52],[311,58,305,52,"_jsx"],[311,73,305,56],[311,75,305,57,"HeaderShownContext"],[311,103,305,75],[311,104,305,76,"Consumer"],[311,112,305,84],[311,114,305,86],[312,16,306,14,"children"],[312,24,306,22],[312,26,306,24,"isParentHeaderShown"],[312,45,306,43],[312,49,306,47],[312,62,306,60],[312,66,306,60,"_jsx"],[312,81,306,64],[312,83,306,65,"CardStack"],[312,103,306,74],[312,105,306,74,"Object"],[312,111,306,74],[312,112,306,74,"assign"],[312,118,306,74],[313,18,307,16,"insets"],[313,24,307,22],[313,26,307,24,"insets"],[313,32,307,30],[314,18,308,16,"isParentHeaderShown"],[314,37,308,35],[314,39,308,37,"isParentHeaderShown"],[314,58,308,56],[315,18,309,16,"isParentModal"],[315,31,309,29],[315,33,309,31,"isParentModal"],[315,46,309,44],[316,18,310,16,"getPreviousRoute"],[316,34,310,32],[316,36,310,34],[316,40,310,38],[316,41,310,39,"getPreviousRoute"],[316,57,310,55],[317,18,311,16,"routes"],[317,24,311,22],[317,26,311,24,"routes"],[317,32,311,30],[318,18,312,16,"openingRouteKeys"],[318,34,312,32],[318,36,312,34,"openingRouteKeys"],[318,52,312,50],[319,18,313,16,"closingRouteKeys"],[319,34,313,32],[319,36,313,34,"closingRouteKeys"],[319,52,313,50],[320,18,314,16,"onOpenRoute"],[320,29,314,27],[320,31,314,29],[320,35,314,33],[320,36,314,34,"handleOpenRoute"],[320,51,314,49],[321,18,315,16,"onCloseRoute"],[321,30,315,28],[321,32,315,30],[321,36,315,34],[321,37,315,35,"handleCloseRoute"],[321,53,315,51],[322,18,316,16,"onTransitionStart"],[322,35,316,33],[322,37,316,35],[322,41,316,39],[322,42,316,40,"handleTransitionStart"],[322,63,316,61],[323,18,317,16,"onTransitionEnd"],[323,33,317,31],[323,35,317,33],[323,39,317,37],[323,40,317,38,"handleTransitionEnd"],[323,59,317,57],[324,18,318,16,"renderHeader"],[324,30,318,28],[324,32,318,30],[324,36,318,34],[324,37,318,35,"renderHeader"],[324,49,318,47],[325,18,319,16,"state"],[325,23,319,21],[325,25,319,23,"state"],[325,30,319,28],[326,18,320,16,"descriptors"],[326,29,320,27],[326,31,320,29,"descriptors"],[326,42,320,40],[327,18,321,16,"onGestureStart"],[327,32,321,30],[327,34,321,32],[327,38,321,36],[327,39,321,37,"handleGestureStart"],[327,57,321,55],[328,18,322,16,"onGestureEnd"],[328,30,322,28],[328,32,322,30],[328,36,322,34],[328,37,322,35,"handleGestureEnd"],[328,53,322,51],[329,18,323,16,"onGestureCancel"],[329,33,323,31],[329,35,323,33],[329,39,323,37],[329,40,323,38,"handleGestureCancel"],[329,59,323,57],[330,18,324,16,"preloadedDescriptors"],[330,38,324,36],[330,40,324,38,"preloadedDescriptors"],[331,16,324,58],[331,19,325,19,"rest"],[331,23,325,23],[331,24,326,15],[332,14,327,12],[332,15,327,13],[333,12,328,10],[333,13,328,11],[334,10,329,8],[334,11,329,9],[335,8,330,6],[335,9,330,7],[336,6,331,4],[336,7,331,5],[336,8,331,6],[337,4,332,2],[338,2,333,0],[339,2,333,1,"exports"],[339,9,333,1],[339,10,333,1,"StackView"],[339,19,333,1],[339,22,333,1,"StackView"],[339,31,333,1],[340,2,334,0],[340,8,334,6,"styles"],[340,14,334,12],[340,17,334,15,"StyleSheet"],[340,36,334,25],[340,37,334,26,"create"],[340,43,334,32],[340,44,334,33],[341,4,335,2,"container"],[341,13,335,11],[341,15,335,13],[342,6,336,4,"flex"],[342,10,336,8],[342,12,336,10],[343,4,337,2],[344,2,338,0],[344,3,338,1],[344,4,338,2],[345,0,338,3],[345,3]],"functionMap":{"names":["<global>","isArrayEqual","a.every$argument_0","StackView","getDerivedStateFromProps","props.state.routes.map$argument_0","state.previousRoutes.map$argument_0","state.routes.reduce$argument_0","props.state.routes.reduce$argument_0","state.routes.map$argument_0","isAnimationEnabled","getAnimationTypeForReplace","previousRoutes.some$argument_0","routes.some$argument_0","openingRouteKeys.filter$argument_0","replacingRouteKeys.filter$argument_0","closingRouteKeys.filter$argument_0","state.routes.filter$argument_0","routes.reduce$argument_0","getPreviousRoute","routes.findIndex$argument_0","renderHeader","handleOpenRoute","closingRouteKeys.some$argument_0","replacingRouteKeys.every$argument_0","state.routes.some$argument_0","navigation.dispatch$argument_0","setState$argument_0","state.openingRouteKeys.filter$argument_0","state.closingRouteKeys.filter$argument_0","handleCloseRoute","handleTransitionStart","handleTransitionEnd","handleGestureStart","handleGestureEnd","handleGestureCancel","render","state.preloadedRoutes.reduce$argument_0","_jsx$argument_1.children"],"mappings":"AAA;qBCkB,2CC,sCD,CD;OGC;ECC;4FCE,UD,4BE,UF;0CGM;SHG;8CIK;SJG;kCKC,gCL;+BM8B;KNG;uCOC;KPG;8BQK,mCR,kBS,uCT;qDUS,uCV;yDWC,uCX;qDYc,mCZ;yDWC,mCX;2BSC,uCT;uDUG,uCV;yDUO,mCV;yDYM,uCZ;iEac;gHbE;sCcK;KdG;GDU;qBgBU;4CFO,oGE;mCCC,wBD;GhBE;iBkBC;GlBI;oBmBC;8BCW,wBD,8BE,wBF,iEG,wBH;0BIG;+CTC,wBS;OJM;oBKE;sEVC,8CU;wDCC,wBD;wDEC,wBF;QLE;GnBE;qB2BC;0BLO,wBK;oBHW;oCVC,wBU;wDCC,wBD;wDEC,wBF;QGC;G3BE;0B4BC;I5BQ;wB6BC;I7BQ;uB8BC;G9BO;qB+BC;G/BO;wBgCC;GhCO;EiCC;8DCa;KDG;oBEK;YFwB;GjCI;CHC"}},"type":"js/module"}]}