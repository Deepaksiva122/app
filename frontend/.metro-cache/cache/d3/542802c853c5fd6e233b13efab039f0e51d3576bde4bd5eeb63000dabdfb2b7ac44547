{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SHEET_FIT_TO_CONTENTS = exports.SHEET_DIMMED_ALWAYS = exports.SHEET_COMPAT_MEDIUM = exports.SHEET_COMPAT_LARGE = exports.SHEET_COMPAT_ALL = undefined;\n  exports.assertDetentsArrayIsSorted = assertDetentsArrayIsSorted;\n  exports.resolveSheetAllowedDetents = resolveSheetAllowedDetents;\n  exports.resolveSheetInitialDetentIndex = resolveSheetInitialDetentIndex;\n  exports.resolveSheetLargestUndimmedDetent = resolveSheetLargestUndimmedDetent;\n  var _reactNative = require(_dependencyMap[0]);\n  // This value must be kept in sync with native side.\n  var SHEET_FIT_TO_CONTENTS = exports.SHEET_FIT_TO_CONTENTS = [-1];\n  var SHEET_COMPAT_LARGE = exports.SHEET_COMPAT_LARGE = [1.0];\n  var SHEET_COMPAT_MEDIUM = exports.SHEET_COMPAT_MEDIUM = [0.5];\n  var SHEET_COMPAT_ALL = exports.SHEET_COMPAT_ALL = [0.5, 1.0];\n  var SHEET_DIMMED_ALWAYS = exports.SHEET_DIMMED_ALWAYS = -1;\n  function assertDetentsArrayIsSorted(array) {\n    for (var i = 1; i < array.length; i++) {\n      if (array[i - 1] > array[i]) {\n        throw new Error('[RNScreens] The detent array is not sorted in ascending order!');\n      }\n    }\n  }\n\n  // These exist to transform old 'legacy' values used by the formsheet API to the new API shape.\n  // We can get rid of it, once we get rid of support for legacy values: 'large', 'medium', 'all'.\n  function resolveSheetAllowedDetents(allowedDetentsCompat) {\n    if (Array.isArray(allowedDetentsCompat)) {\n      return allowedDetentsCompat;\n    } else if (allowedDetentsCompat === 'fitToContents') {\n      return SHEET_FIT_TO_CONTENTS;\n    } else if (allowedDetentsCompat === 'large') {\n      return SHEET_COMPAT_LARGE;\n    } else if (allowedDetentsCompat === 'medium') {\n      return SHEET_COMPAT_MEDIUM;\n    } else if (allowedDetentsCompat === 'all') {\n      return SHEET_COMPAT_ALL;\n    } else {\n      // Safe default, only large detent is allowed.\n      return SHEET_COMPAT_LARGE;\n    }\n  }\n  function resolveSheetLargestUndimmedDetent(lud, lastDetentIndex) {\n    if (typeof lud === 'number') {\n      if (!isIndexInClosedRange(lud, SHEET_DIMMED_ALWAYS, lastDetentIndex)) {\n        // Return default in production\n        return SHEET_DIMMED_ALWAYS;\n      }\n      return lud;\n    } else if (lud === 'last') {\n      return lastDetentIndex;\n    } else if (lud === 'none' || lud === 'all') {\n      return SHEET_DIMMED_ALWAYS;\n    } else if (lud === 'large') {\n      return 1;\n    } else if (lud === 'medium') {\n      return 0;\n    } else {\n      // Safe default, every detent is dimmed\n      return SHEET_DIMMED_ALWAYS;\n    }\n  }\n  function resolveSheetInitialDetentIndex(index, lastDetentIndex) {\n    if (index === 'last') {\n      index = lastDetentIndex;\n    } else if (index == null) {\n      // Intentional check for undefined & null ^\n      index = 0;\n    }\n    if (!isIndexInClosedRange(index, 0, lastDetentIndex)) {\n      // Return default in production\n      return 0;\n    }\n    return index;\n  }\n  function isIndexInClosedRange(value, lowerBound, upperBound) {\n    return Number.isInteger(value) && value >= lowerBound && value <= upperBound;\n  }\n});","lineCount":79,"map":[[10,2,1,0],[10,6,1,0,"_reactNative"],[10,18,1,0],[10,21,1,0,"require"],[10,28,1,0],[10,29,1,0,"_dependencyMap"],[10,43,1,0],[11,2,4,0],[12,2,5,7],[12,6,5,13,"SHEET_FIT_TO_CONTENTS"],[12,27,5,34],[12,30,5,34,"exports"],[12,37,5,34],[12,38,5,34,"SHEET_FIT_TO_CONTENTS"],[12,59,5,34],[12,62,5,37],[12,66,5,41],[13,2,6,7],[13,6,6,13,"SHEET_COMPAT_LARGE"],[13,24,6,31],[13,27,6,31,"exports"],[13,34,6,31],[13,35,6,31,"SHEET_COMPAT_LARGE"],[13,53,6,31],[13,56,6,34],[13,57,6,35],[13,60,6,38],[13,61,6,39],[14,2,7,7],[14,6,7,13,"SHEET_COMPAT_MEDIUM"],[14,25,7,32],[14,28,7,32,"exports"],[14,35,7,32],[14,36,7,32,"SHEET_COMPAT_MEDIUM"],[14,55,7,32],[14,58,7,35],[14,59,7,36],[14,62,7,39],[14,63,7,40],[15,2,8,7],[15,6,8,13,"SHEET_COMPAT_ALL"],[15,22,8,29],[15,25,8,29,"exports"],[15,32,8,29],[15,33,8,29,"SHEET_COMPAT_ALL"],[15,49,8,29],[15,52,8,32],[15,53,8,33],[15,56,8,36],[15,58,8,38],[15,61,8,41],[15,62,8,42],[16,2,9,7],[16,6,9,13,"SHEET_DIMMED_ALWAYS"],[16,25,9,32],[16,28,9,32,"exports"],[16,35,9,32],[16,36,9,32,"SHEET_DIMMED_ALWAYS"],[16,55,9,32],[16,60,9,37],[17,2,11,7],[17,11,11,16,"assertDetentsArrayIsSorted"],[17,37,11,42,"assertDetentsArrayIsSorted"],[17,38,11,43,"array"],[17,43,11,58],[17,45,11,60],[18,4,12,2],[18,9,12,7],[18,13,12,11,"i"],[18,14,12,12],[18,17,12,15],[18,18,12,16],[18,20,12,18,"i"],[18,21,12,19],[18,24,12,22,"array"],[18,29,12,27],[18,30,12,28,"length"],[18,36,12,34],[18,38,12,36,"i"],[18,39,12,37],[18,41,12,39],[18,43,12,41],[19,6,13,4],[19,10,13,8,"array"],[19,15,13,13],[19,16,13,14,"i"],[19,17,13,15],[19,20,13,18],[19,21,13,19],[19,22,13,20],[19,25,13,23,"array"],[19,30,13,28],[19,31,13,29,"i"],[19,32,13,30],[19,33,13,31],[19,35,13,33],[20,8,14,6],[20,14,14,12],[20,18,14,16,"Error"],[20,23,14,21],[20,24,15,8],[20,88,16,6],[20,89,16,7],[21,6,17,4],[22,4,18,2],[23,2,19,0],[25,2,21,0],[26,2,22,0],[27,2,23,7],[27,11,23,16,"resolveSheetAllowedDetents"],[27,37,23,42,"resolveSheetAllowedDetents"],[27,38,24,2,"allowedDetentsCompat"],[27,58,24,58],[27,60,25,12],[28,4,26,2],[28,8,26,6,"Array"],[28,13,26,11],[28,14,26,12,"isArray"],[28,21,26,19],[28,22,26,20,"allowedDetentsCompat"],[28,42,26,40],[28,43,26,41],[28,45,26,43],[29,6,38,4],[29,13,38,11,"allowedDetentsCompat"],[29,33,38,31],[30,4,39,2],[30,5,39,3],[30,11,39,9],[30,15,39,13,"allowedDetentsCompat"],[30,35,39,33],[30,40,39,38],[30,55,39,53],[30,57,39,55],[31,6,40,4],[31,13,40,11,"SHEET_FIT_TO_CONTENTS"],[31,34,40,32],[32,4,41,2],[32,5,41,3],[32,11,41,9],[32,15,41,13,"allowedDetentsCompat"],[32,35,41,33],[32,40,41,38],[32,47,41,45],[32,49,41,47],[33,6,42,4],[33,13,42,11,"SHEET_COMPAT_LARGE"],[33,31,42,29],[34,4,43,2],[34,5,43,3],[34,11,43,9],[34,15,43,13,"allowedDetentsCompat"],[34,35,43,33],[34,40,43,38],[34,48,43,46],[34,50,43,48],[35,6,44,4],[35,13,44,11,"SHEET_COMPAT_MEDIUM"],[35,32,44,30],[36,4,45,2],[36,5,45,3],[36,11,45,9],[36,15,45,13,"allowedDetentsCompat"],[36,35,45,33],[36,40,45,38],[36,45,45,43],[36,47,45,45],[37,6,46,4],[37,13,46,11,"SHEET_COMPAT_ALL"],[37,29,46,27],[38,4,47,2],[38,5,47,3],[38,11,47,9],[39,6,48,4],[40,6,49,4],[40,13,49,11,"SHEET_COMPAT_LARGE"],[40,31,49,29],[41,4,50,2],[42,2,51,0],[43,2,53,7],[43,11,53,16,"resolveSheetLargestUndimmedDetent"],[43,44,53,49,"resolveSheetLargestUndimmedDetent"],[43,45,54,2,"lud"],[43,48,54,53],[43,50,55,2,"lastDetentIndex"],[43,65,55,25],[43,67,56,10],[44,4,57,2],[44,8,57,6],[44,15,57,13,"lud"],[44,18,57,16],[44,23,57,21],[44,31,57,29],[44,33,57,31],[45,6,58,4],[45,10,58,8],[45,11,58,9,"isIndexInClosedRange"],[45,31,58,29],[45,32,58,30,"lud"],[45,35,58,33],[45,37,58,35,"SHEET_DIMMED_ALWAYS"],[45,56,58,54],[45,58,58,56,"lastDetentIndex"],[45,73,58,71],[45,74,58,72],[45,76,58,74],[46,8,64,6],[47,8,65,6],[47,15,65,13,"SHEET_DIMMED_ALWAYS"],[47,34,65,32],[48,6,66,4],[49,6,67,4],[49,13,67,11,"lud"],[49,16,67,14],[50,4,68,2],[50,5,68,3],[50,11,68,9],[50,15,68,13,"lud"],[50,18,68,16],[50,23,68,21],[50,29,68,27],[50,31,68,29],[51,6,69,4],[51,13,69,11,"lastDetentIndex"],[51,28,69,26],[52,4,70,2],[52,5,70,3],[52,11,70,9],[52,15,70,13,"lud"],[52,18,70,16],[52,23,70,21],[52,29,70,27],[52,33,70,31,"lud"],[52,36,70,34],[52,41,70,39],[52,46,70,44],[52,48,70,46],[53,6,71,4],[53,13,71,11,"SHEET_DIMMED_ALWAYS"],[53,32,71,30],[54,4,72,2],[54,5,72,3],[54,11,72,9],[54,15,72,13,"lud"],[54,18,72,16],[54,23,72,21],[54,30,72,28],[54,32,72,30],[55,6,73,4],[55,13,73,11],[55,14,73,12],[56,4,74,2],[56,5,74,3],[56,11,74,9],[56,15,74,13,"lud"],[56,18,74,16],[56,23,74,21],[56,31,74,29],[56,33,74,31],[57,6,75,4],[57,13,75,11],[57,14,75,12],[58,4,76,2],[58,5,76,3],[58,11,76,9],[59,6,77,4],[60,6,78,4],[60,13,78,11,"SHEET_DIMMED_ALWAYS"],[60,32,78,30],[61,4,79,2],[62,2,80,0],[63,2,82,7],[63,11,82,16,"resolveSheetInitialDetentIndex"],[63,41,82,46,"resolveSheetInitialDetentIndex"],[63,42,83,2,"index"],[63,47,83,47],[63,49,84,2,"lastDetentIndex"],[63,64,84,25],[63,66,85,10],[64,4,86,2],[64,8,86,6,"index"],[64,13,86,11],[64,18,86,16],[64,24,86,22],[64,26,86,24],[65,6,87,4,"index"],[65,11,87,9],[65,14,87,12,"lastDetentIndex"],[65,29,87,27],[66,4,88,2],[66,5,88,3],[66,11,88,9],[66,15,88,13,"index"],[66,20,88,18],[66,24,88,22],[66,28,88,26],[66,30,88,28],[67,6,89,4],[68,6,90,4,"index"],[68,11,90,9],[68,14,90,12],[68,15,90,13],[69,4,91,2],[70,4,92,2],[70,8,92,6],[70,9,92,7,"isIndexInClosedRange"],[70,29,92,27],[70,30,92,28,"index"],[70,35,92,33],[70,37,92,35],[70,38,92,36],[70,40,92,38,"lastDetentIndex"],[70,55,92,53],[70,56,92,54],[70,58,92,56],[71,6,98,4],[72,6,99,4],[72,13,99,11],[72,14,99,12],[73,4,100,2],[74,4,101,2],[74,11,101,9,"index"],[74,16,101,14],[75,2,102,0],[76,2,104,0],[76,11,104,9,"isIndexInClosedRange"],[76,31,104,29,"isIndexInClosedRange"],[76,32,105,2,"value"],[76,37,105,15],[76,39,106,2,"lowerBound"],[76,49,106,20],[76,51,107,2,"upperBound"],[76,61,107,20],[76,63,108,11],[77,4,109,2],[77,11,109,9,"Number"],[77,17,109,15],[77,18,109,16,"isInteger"],[77,27,109,25],[77,28,109,26,"value"],[77,33,109,31],[77,34,109,32],[77,38,109,36,"value"],[77,43,109,41],[77,47,109,45,"lowerBound"],[77,57,109,55],[77,61,109,59,"value"],[77,66,109,64],[77,70,109,68,"upperBound"],[77,80,109,78],[78,2,110,0],[79,0,110,1],[79,3]],"functionMap":{"names":["<global>","assertDetentsArrayIsSorted","resolveSheetAllowedDetents","resolveSheetLargestUndimmedDetent","resolveSheetInitialDetentIndex","isIndexInClosedRange"],"mappings":"AAA;OCU;CDQ;OEI;CF4B;OGE;CH2B;OIE;CJoB;AKE;CLM"}},"type":"js/module"}]}