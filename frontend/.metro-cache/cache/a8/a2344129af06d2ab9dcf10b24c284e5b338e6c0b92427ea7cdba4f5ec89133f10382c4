{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Keyboard","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4H7FkS8ywD5HLTNk4ggLktoHubI=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/TextInput","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"DmXc1F5dPYWntVgqRwh73w0VngA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useKeyboardManager = useKeyboardManager;\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _Keyboard = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Keyboard\"));\n  var _TextInput = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/TextInput\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function useKeyboardManager(isEnabled) {\n    // Numeric id of the previously focused text input\n    // When a gesture didn't change the tab, we can restore the focused input with this\n    const previouslyFocusedTextInputRef = React.useRef(undefined);\n    const startTimestampRef = React.useRef(0);\n    const keyboardTimeoutRef = React.useRef(undefined);\n    const clearKeyboardTimeout = React.useCallback(() => {\n      if (keyboardTimeoutRef.current !== undefined) {\n        clearTimeout(keyboardTimeoutRef.current);\n        keyboardTimeoutRef.current = undefined;\n      }\n    }, []);\n    const onPageChangeStart = React.useCallback(() => {\n      if (!isEnabled()) {\n        return;\n      }\n      clearKeyboardTimeout();\n      const input = _TextInput.default.State.currentlyFocusedInput();\n\n      // When a page change begins, blur the currently focused input\n      input?.blur();\n\n      // Store the id of this input so we can refocus it if change was cancelled\n      previouslyFocusedTextInputRef.current = input;\n\n      // Store timestamp for touch start\n      startTimestampRef.current = Date.now();\n    }, [clearKeyboardTimeout, isEnabled]);\n    const onPageChangeConfirm = React.useCallback(force => {\n      if (!isEnabled()) {\n        return;\n      }\n      clearKeyboardTimeout();\n      if (force) {\n        // Always dismiss input, even if we don't have a ref to it\n        // We might not have the ref if onPageChangeStart was never called\n        // This can happen if page change was not from a gesture\n        _Keyboard.default.dismiss();\n      } else {\n        const input = previouslyFocusedTextInputRef.current;\n\n        // Dismiss the keyboard only if an input was a focused before\n        // This makes sure we don't dismiss input on going back and focusing an input\n        input?.blur();\n      }\n\n      // Cleanup the ID on successful page change\n      previouslyFocusedTextInputRef.current = undefined;\n    }, [clearKeyboardTimeout, isEnabled]);\n    const onPageChangeCancel = React.useCallback(() => {\n      if (!isEnabled()) {\n        return;\n      }\n      clearKeyboardTimeout();\n\n      // The page didn't change, we should restore the focus of text input\n      const input = previouslyFocusedTextInputRef.current;\n      if (input) {\n        // If the interaction was super short we should make sure keyboard won't hide again.\n\n        // Too fast input refocus will result only in keyboard flashing on screen and hiding right away.\n        // During first ~100ms keyboard will be dismissed no matter what,\n        // so we have to make sure it won't interrupt input refocus logic.\n        // That's why when the interaction is shorter than 100ms we add delay so it won't hide once again.\n        // Subtracting timestamps makes us sure the delay is executed only when needed.\n        if (Date.now() - startTimestampRef.current < 100) {\n          keyboardTimeoutRef.current = setTimeout(() => {\n            input?.focus();\n            previouslyFocusedTextInputRef.current = undefined;\n          }, 100);\n        } else {\n          input?.focus();\n          previouslyFocusedTextInputRef.current = undefined;\n        }\n      }\n    }, [clearKeyboardTimeout, isEnabled]);\n    React.useEffect(() => {\n      return () => clearKeyboardTimeout();\n    }, [clearKeyboardTimeout]);\n    return {\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel\n    };\n  }\n});","lineCount":98,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useKeyboardManager"],[8,28,1,13],[8,31,1,13,"useKeyboardManager"],[8,49,1,13],[9,2,3,0],[9,6,3,0,"React"],[9,11,3,0],[9,14,3,0,"_interopRequireWildcard"],[9,37,3,0],[9,38,3,0,"require"],[9,45,3,0],[9,46,3,0,"_dependencyMap"],[9,60,3,0],[10,2,3,31],[10,6,3,31,"_Keyboard"],[10,15,3,31],[10,18,3,31,"_interopRequireDefault"],[10,40,3,31],[10,41,3,31,"require"],[10,48,3,31],[10,49,3,31,"_dependencyMap"],[10,63,3,31],[11,2,3,31],[11,6,3,31,"_TextInput"],[11,16,3,31],[11,19,3,31,"_interopRequireDefault"],[11,41,3,31],[11,42,3,31,"require"],[11,49,3,31],[11,50,3,31,"_dependencyMap"],[11,64,3,31],[12,2,3,31],[12,11,3,31,"_interopRequireWildcard"],[12,35,3,31,"e"],[12,36,3,31],[12,38,3,31,"t"],[12,39,3,31],[12,68,3,31,"WeakMap"],[12,75,3,31],[12,81,3,31,"r"],[12,82,3,31],[12,89,3,31,"WeakMap"],[12,96,3,31],[12,100,3,31,"n"],[12,101,3,31],[12,108,3,31,"WeakMap"],[12,115,3,31],[12,127,3,31,"_interopRequireWildcard"],[12,150,3,31],[12,162,3,31,"_interopRequireWildcard"],[12,163,3,31,"e"],[12,164,3,31],[12,166,3,31,"t"],[12,167,3,31],[12,176,3,31,"t"],[12,177,3,31],[12,181,3,31,"e"],[12,182,3,31],[12,186,3,31,"e"],[12,187,3,31],[12,188,3,31,"__esModule"],[12,198,3,31],[12,207,3,31,"e"],[12,208,3,31],[12,214,3,31,"o"],[12,215,3,31],[12,217,3,31,"i"],[12,218,3,31],[12,220,3,31,"f"],[12,221,3,31],[12,226,3,31,"__proto__"],[12,235,3,31],[12,243,3,31,"default"],[12,250,3,31],[12,252,3,31,"e"],[12,253,3,31],[12,270,3,31,"e"],[12,271,3,31],[12,294,3,31,"e"],[12,295,3,31],[12,320,3,31,"e"],[12,321,3,31],[12,330,3,31,"f"],[12,331,3,31],[12,337,3,31,"o"],[12,338,3,31],[12,341,3,31,"t"],[12,342,3,31],[12,345,3,31,"n"],[12,346,3,31],[12,349,3,31,"r"],[12,350,3,31],[12,358,3,31,"o"],[12,359,3,31],[12,360,3,31,"has"],[12,363,3,31],[12,364,3,31,"e"],[12,365,3,31],[12,375,3,31,"o"],[12,376,3,31],[12,377,3,31,"get"],[12,380,3,31],[12,381,3,31,"e"],[12,382,3,31],[12,385,3,31,"o"],[12,386,3,31],[12,387,3,31,"set"],[12,390,3,31],[12,391,3,31,"e"],[12,392,3,31],[12,394,3,31,"f"],[12,395,3,31],[12,411,3,31,"t"],[12,412,3,31],[12,416,3,31,"e"],[12,417,3,31],[12,433,3,31,"t"],[12,434,3,31],[12,441,3,31,"hasOwnProperty"],[12,455,3,31],[12,456,3,31,"call"],[12,460,3,31],[12,461,3,31,"e"],[12,462,3,31],[12,464,3,31,"t"],[12,465,3,31],[12,472,3,31,"i"],[12,473,3,31],[12,477,3,31,"o"],[12,478,3,31],[12,481,3,31,"Object"],[12,487,3,31],[12,488,3,31,"defineProperty"],[12,502,3,31],[12,507,3,31,"Object"],[12,513,3,31],[12,514,3,31,"getOwnPropertyDescriptor"],[12,538,3,31],[12,539,3,31,"e"],[12,540,3,31],[12,542,3,31,"t"],[12,543,3,31],[12,550,3,31,"i"],[12,551,3,31],[12,552,3,31,"get"],[12,555,3,31],[12,559,3,31,"i"],[12,560,3,31],[12,561,3,31,"set"],[12,564,3,31],[12,568,3,31,"o"],[12,569,3,31],[12,570,3,31,"f"],[12,571,3,31],[12,573,3,31,"t"],[12,574,3,31],[12,576,3,31,"i"],[12,577,3,31],[12,581,3,31,"f"],[12,582,3,31],[12,583,3,31,"t"],[12,584,3,31],[12,588,3,31,"e"],[12,589,3,31],[12,590,3,31,"t"],[12,591,3,31],[12,602,3,31,"f"],[12,603,3,31],[12,608,3,31,"e"],[12,609,3,31],[12,611,3,31,"t"],[12,612,3,31],[13,2,5,7],[13,11,5,16,"useKeyboardManager"],[13,29,5,34,"useKeyboardManager"],[13,30,5,35,"isEnabled"],[13,39,5,44],[13,41,5,46],[14,4,6,2],[15,4,7,2],[16,4,8,2],[16,10,8,8,"previouslyFocusedTextInputRef"],[16,39,8,37],[16,42,8,40,"React"],[16,47,8,45],[16,48,8,46,"useRef"],[16,54,8,52],[16,55,8,53,"undefined"],[16,64,8,62],[16,65,8,63],[17,4,9,2],[17,10,9,8,"startTimestampRef"],[17,27,9,25],[17,30,9,28,"React"],[17,35,9,33],[17,36,9,34,"useRef"],[17,42,9,40],[17,43,9,41],[17,44,9,42],[17,45,9,43],[18,4,10,2],[18,10,10,8,"keyboardTimeoutRef"],[18,28,10,26],[18,31,10,29,"React"],[18,36,10,34],[18,37,10,35,"useRef"],[18,43,10,41],[18,44,10,42,"undefined"],[18,53,10,51],[18,54,10,52],[19,4,11,2],[19,10,11,8,"clearKeyboardTimeout"],[19,30,11,28],[19,33,11,31,"React"],[19,38,11,36],[19,39,11,37,"useCallback"],[19,50,11,48],[19,51,11,49],[19,57,11,55],[20,6,12,4],[20,10,12,8,"keyboardTimeoutRef"],[20,28,12,26],[20,29,12,27,"current"],[20,36,12,34],[20,41,12,39,"undefined"],[20,50,12,48],[20,52,12,50],[21,8,13,6,"clearTimeout"],[21,20,13,18],[21,21,13,19,"keyboardTimeoutRef"],[21,39,13,37],[21,40,13,38,"current"],[21,47,13,45],[21,48,13,46],[22,8,14,6,"keyboardTimeoutRef"],[22,26,14,24],[22,27,14,25,"current"],[22,34,14,32],[22,37,14,35,"undefined"],[22,46,14,44],[23,6,15,4],[24,4,16,2],[24,5,16,3],[24,7,16,5],[24,9,16,7],[24,10,16,8],[25,4,17,2],[25,10,17,8,"onPageChangeStart"],[25,27,17,25],[25,30,17,28,"React"],[25,35,17,33],[25,36,17,34,"useCallback"],[25,47,17,45],[25,48,17,46],[25,54,17,52],[26,6,18,4],[26,10,18,8],[26,11,18,9,"isEnabled"],[26,20,18,18],[26,21,18,19],[26,22,18,20],[26,24,18,22],[27,8,19,6],[28,6,20,4],[29,6,21,4,"clearKeyboardTimeout"],[29,26,21,24],[29,27,21,25],[29,28,21,26],[30,6,22,4],[30,12,22,10,"input"],[30,17,22,15],[30,20,22,18,"TextInput"],[30,38,22,27],[30,39,22,28,"State"],[30,44,22,33],[30,45,22,34,"currentlyFocusedInput"],[30,66,22,55],[30,67,22,56],[30,68,22,57],[32,6,24,4],[33,6,25,4,"input"],[33,11,25,9],[33,13,25,11,"blur"],[33,17,25,15],[33,18,25,16],[33,19,25,17],[35,6,27,4],[36,6,28,4,"previouslyFocusedTextInputRef"],[36,35,28,33],[36,36,28,34,"current"],[36,43,28,41],[36,46,28,44,"input"],[36,51,28,49],[38,6,30,4],[39,6,31,4,"startTimestampRef"],[39,23,31,21],[39,24,31,22,"current"],[39,31,31,29],[39,34,31,32,"Date"],[39,38,31,36],[39,39,31,37,"now"],[39,42,31,40],[39,43,31,41],[39,44,31,42],[40,4,32,2],[40,5,32,3],[40,7,32,5],[40,8,32,6,"clearKeyboardTimeout"],[40,28,32,26],[40,30,32,28,"isEnabled"],[40,39,32,37],[40,40,32,38],[40,41,32,39],[41,4,33,2],[41,10,33,8,"onPageChangeConfirm"],[41,29,33,27],[41,32,33,30,"React"],[41,37,33,35],[41,38,33,36,"useCallback"],[41,49,33,47],[41,50,33,48,"force"],[41,55,33,53],[41,59,33,57],[42,6,34,4],[42,10,34,8],[42,11,34,9,"isEnabled"],[42,20,34,18],[42,21,34,19],[42,22,34,20],[42,24,34,22],[43,8,35,6],[44,6,36,4],[45,6,37,4,"clearKeyboardTimeout"],[45,26,37,24],[45,27,37,25],[45,28,37,26],[46,6,38,4],[46,10,38,8,"force"],[46,15,38,13],[46,17,38,15],[47,8,39,6],[48,8,40,6],[49,8,41,6],[50,8,42,6,"Keyboard"],[50,25,42,14],[50,26,42,15,"dismiss"],[50,33,42,22],[50,34,42,23],[50,35,42,24],[51,6,43,4],[51,7,43,5],[51,13,43,11],[52,8,44,6],[52,14,44,12,"input"],[52,19,44,17],[52,22,44,20,"previouslyFocusedTextInputRef"],[52,51,44,49],[52,52,44,50,"current"],[52,59,44,57],[54,8,46,6],[55,8,47,6],[56,8,48,6,"input"],[56,13,48,11],[56,15,48,13,"blur"],[56,19,48,17],[56,20,48,18],[56,21,48,19],[57,6,49,4],[59,6,51,4],[60,6,52,4,"previouslyFocusedTextInputRef"],[60,35,52,33],[60,36,52,34,"current"],[60,43,52,41],[60,46,52,44,"undefined"],[60,55,52,53],[61,4,53,2],[61,5,53,3],[61,7,53,5],[61,8,53,6,"clearKeyboardTimeout"],[61,28,53,26],[61,30,53,28,"isEnabled"],[61,39,53,37],[61,40,53,38],[61,41,53,39],[62,4,54,2],[62,10,54,8,"onPageChangeCancel"],[62,28,54,26],[62,31,54,29,"React"],[62,36,54,34],[62,37,54,35,"useCallback"],[62,48,54,46],[62,49,54,47],[62,55,54,53],[63,6,55,4],[63,10,55,8],[63,11,55,9,"isEnabled"],[63,20,55,18],[63,21,55,19],[63,22,55,20],[63,24,55,22],[64,8,56,6],[65,6,57,4],[66,6,58,4,"clearKeyboardTimeout"],[66,26,58,24],[66,27,58,25],[66,28,58,26],[68,6,60,4],[69,6,61,4],[69,12,61,10,"input"],[69,17,61,15],[69,20,61,18,"previouslyFocusedTextInputRef"],[69,49,61,47],[69,50,61,48,"current"],[69,57,61,55],[70,6,62,4],[70,10,62,8,"input"],[70,15,62,13],[70,17,62,15],[71,8,63,6],[73,8,65,6],[74,8,66,6],[75,8,67,6],[76,8,68,6],[77,8,69,6],[78,8,70,6],[78,12,70,10,"Date"],[78,16,70,14],[78,17,70,15,"now"],[78,20,70,18],[78,21,70,19],[78,22,70,20],[78,25,70,23,"startTimestampRef"],[78,42,70,40],[78,43,70,41,"current"],[78,50,70,48],[78,53,70,51],[78,56,70,54],[78,58,70,56],[79,10,71,8,"keyboardTimeoutRef"],[79,28,71,26],[79,29,71,27,"current"],[79,36,71,34],[79,39,71,37,"setTimeout"],[79,49,71,47],[79,50,71,48],[79,56,71,54],[80,12,72,10,"input"],[80,17,72,15],[80,19,72,17,"focus"],[80,24,72,22],[80,25,72,23],[80,26,72,24],[81,12,73,10,"previouslyFocusedTextInputRef"],[81,41,73,39],[81,42,73,40,"current"],[81,49,73,47],[81,52,73,50,"undefined"],[81,61,73,59],[82,10,74,8],[82,11,74,9],[82,13,74,11],[82,16,74,14],[82,17,74,15],[83,8,75,6],[83,9,75,7],[83,15,75,13],[84,10,76,8,"input"],[84,15,76,13],[84,17,76,15,"focus"],[84,22,76,20],[84,23,76,21],[84,24,76,22],[85,10,77,8,"previouslyFocusedTextInputRef"],[85,39,77,37],[85,40,77,38,"current"],[85,47,77,45],[85,50,77,48,"undefined"],[85,59,77,57],[86,8,78,6],[87,6,79,4],[88,4,80,2],[88,5,80,3],[88,7,80,5],[88,8,80,6,"clearKeyboardTimeout"],[88,28,80,26],[88,30,80,28,"isEnabled"],[88,39,80,37],[88,40,80,38],[88,41,80,39],[89,4,81,2,"React"],[89,9,81,7],[89,10,81,8,"useEffect"],[89,19,81,17],[89,20,81,18],[89,26,81,24],[90,6,82,4],[90,13,82,11],[90,19,82,17,"clearKeyboardTimeout"],[90,39,82,37],[90,40,82,38],[90,41,82,39],[91,4,83,2],[91,5,83,3],[91,7,83,5],[91,8,83,6,"clearKeyboardTimeout"],[91,28,83,26],[91,29,83,27],[91,30,83,28],[92,4,84,2],[92,11,84,9],[93,6,85,4,"onPageChangeStart"],[93,23,85,21],[94,6,86,4,"onPageChangeConfirm"],[94,25,86,23],[95,6,87,4,"onPageChangeCancel"],[96,4,88,2],[96,5,88,3],[97,2,89,0],[98,0,89,1],[98,3]],"functionMap":{"names":["<global>","useKeyboardManager","clearKeyboardTimeout","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","setTimeout$argument_0","React.useEffect$argument_0","<anonymous>"],"mappings":"AAA;OCI;iDCM;GDK;8CEC;GFe;gDGC;GHoB;+CIC;gDCiB;SDG;GJM;kBMC;WCC,4BD;GNC;CDM"}},"type":"js/module"}]}