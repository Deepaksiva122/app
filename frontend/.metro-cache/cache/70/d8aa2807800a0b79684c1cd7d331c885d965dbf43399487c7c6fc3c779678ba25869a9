{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@react-navigation/elements","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":92,"index":107}}],"key":"LmqW7jh+SpCzQZMkzh+Awcuawt0=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":108},"end":{"line":4,"column":31,"index":139}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Animated","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dNPzxVfn0yBoRxvhD+vE+lN7k4Q=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"]}},{"name":"../../TransitionConfigs/CardStyleInterpolators.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":209},"end":{"line":6,"column":130,"index":339}}],"key":"WQrnT432sHc0IAjfxvy+8kcpVqE=","exportNames":["*"]}},{"name":"../../TransitionConfigs/TransitionPresets.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":340},"end":{"line":7,"column":295,"index":635}}],"key":"qGPvdCHa12B7My1IcTBjt/ZjEN8=","exportNames":["*"]}},{"name":"../../utils/findLastIndex.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":636},"end":{"line":8,"column":61,"index":697}}],"key":"PsurlFEEk02i+2hKfT+H0LvqIFM=","exportNames":["*"]}},{"name":"../../utils/getDistanceForDirection.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":698},"end":{"line":9,"column":81,"index":779}}],"key":"Qhu6HWUnevuLnK0FD4YMv38jV6c=","exportNames":["*"]}},{"name":"../../utils/getModalRoutesKeys.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":780},"end":{"line":10,"column":70,"index":850}}],"key":"JnU1xJs101Gng0l1FTqwlJFPlho=","exportNames":["*"]}},{"name":"../Screens.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":851},"end":{"line":11,"column":66,"index":917}}],"key":"C/CQg4G4EMSw5ow404L5fcHq3N8=","exportNames":["*"]}},{"name":"./CardContainer.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":918},"end":{"line":12,"column":51,"index":969}}],"key":"dRNK4dXmIFRg8IMvnxRQLcKAgls=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":970},"end":{"line":13,"column":63,"index":1033}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.CardStack = void 0;\n  exports.getAnimationEnabled = getAnimationEnabled;\n  var _elements = require(_dependencyMap[1], \"@react-navigation/elements\");\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _Animated = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/Animated\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[4], \"react-native-web/dist/exports/Platform\"));\n  var _StyleSheet = _interopRequireDefault(require(_dependencyMap[5], \"react-native-web/dist/exports/StyleSheet\"));\n  var _View = _interopRequireDefault(require(_dependencyMap[6], \"react-native-web/dist/exports/View\"));\n  var _CardStyleInterpolators = require(_dependencyMap[7], \"../../TransitionConfigs/CardStyleInterpolators.js\");\n  var _TransitionPresets = require(_dependencyMap[8], \"../../TransitionConfigs/TransitionPresets.js\");\n  var _findLastIndex = require(_dependencyMap[9], \"../../utils/findLastIndex.js\");\n  var _getDistanceForDirection = require(_dependencyMap[10], \"../../utils/getDistanceForDirection.js\");\n  var _getModalRoutesKeys = require(_dependencyMap[11], \"../../utils/getModalRoutesKeys.js\");\n  var _Screens = require(_dependencyMap[12], \"../Screens.js\");\n  var _CardContainer = require(_dependencyMap[13], \"./CardContainer.js\");\n  var _jsxRuntime = require(_dependencyMap[14], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const NAMED_TRANSITIONS_PRESETS = {\n    default: _TransitionPresets.DefaultTransition,\n    fade: _TransitionPresets.ModalFadeTransition,\n    fade_from_bottom: _TransitionPresets.FadeFromBottomAndroid,\n    fade_from_right: _TransitionPresets.FadeFromRightAndroid,\n    none: _TransitionPresets.DefaultTransition,\n    reveal_from_bottom: _TransitionPresets.RevealFromBottomAndroid,\n    scale_from_center: _TransitionPresets.ScaleFromCenterAndroid,\n    slide_from_left: _TransitionPresets.SlideFromLeftIOS,\n    slide_from_right: _TransitionPresets.SlideFromRightIOS,\n    slide_from_bottom: _Platform.default.select({\n      ios: _TransitionPresets.ModalSlideFromBottomIOS,\n      default: _TransitionPresets.BottomSheetAndroid\n    })\n  };\n  const EPSILON = 1e-5;\n  const STATE_INACTIVE = 0;\n  const STATE_TRANSITIONING_OR_BELOW_TOP = 1;\n  const STATE_ON_TOP = 2;\n  const FALLBACK_DESCRIPTOR = Object.freeze({\n    options: {}\n  });\n  const getInterpolationIndex = (scenes, index) => {\n    const {\n      cardStyleInterpolator\n    } = scenes[index].descriptor.options;\n\n    // Start from current card and count backwards the number of cards with same interpolation\n    let interpolationIndex = 0;\n    for (let i = index - 1; i >= 0; i--) {\n      const cardStyleInterpolatorCurrent = scenes[i]?.descriptor.options.cardStyleInterpolator;\n      if (cardStyleInterpolatorCurrent !== cardStyleInterpolator) {\n        break;\n      }\n      interpolationIndex++;\n    }\n    return interpolationIndex;\n  };\n  const getIsModalPresentation = cardStyleInterpolator => {\n    return cardStyleInterpolator === _CardStyleInterpolators.forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS';\n  };\n  const getIsModal = (scene, interpolationIndex, isParentModal) => {\n    if (isParentModal) {\n      return true;\n    }\n    const {\n      cardStyleInterpolator\n    } = scene.descriptor.options;\n    const isModalPresentation = getIsModalPresentation(cardStyleInterpolator);\n    const isModal = isModalPresentation && interpolationIndex !== 0;\n    return isModal;\n  };\n  const getHeaderHeights = (scenes, insets, isParentHeaderShown, isParentModal, layout, previous) => {\n    return scenes.reduce((acc, curr, index) => {\n      const {\n        headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n        headerStyle\n      } = curr.descriptor.options;\n      const style = _StyleSheet.default.flatten(headerStyle || {});\n      const height = 'height' in style && typeof style.height === 'number' ? style.height : previous[curr.route.key];\n      const interpolationIndex = getInterpolationIndex(scenes, index);\n      const isModal = getIsModal(curr, interpolationIndex, isParentModal);\n      acc[curr.route.key] = typeof height === 'number' ? height : (0, _elements.getDefaultHeaderHeight)(layout, isModal, headerStatusBarHeight);\n      return acc;\n    }, {});\n  };\n  const getDistanceFromOptions = (layout, options, isRTL) => {\n    if (options?.gestureDirection) {\n      return (0, _getDistanceForDirection.getDistanceForDirection)(layout, options.gestureDirection, isRTL);\n    }\n    const defaultGestureDirection = options?.presentation === 'modal' ? _TransitionPresets.ModalTransition.gestureDirection : _TransitionPresets.DefaultTransition.gestureDirection;\n    const gestureDirection = options?.animation ? NAMED_TRANSITIONS_PRESETS[options?.animation]?.gestureDirection : defaultGestureDirection;\n    return (0, _getDistanceForDirection.getDistanceForDirection)(layout, gestureDirection, isRTL);\n  };\n  const getProgressFromGesture = (gesture, layout, options, isRTL) => {\n    const distance = getDistanceFromOptions({\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height)\n    }, options, isRTL);\n    if (distance > 0) {\n      return gesture.interpolate({\n        inputRange: [0, distance],\n        outputRange: [1, 0]\n      });\n    }\n    return gesture.interpolate({\n      inputRange: [distance, 0],\n      outputRange: [0, 1]\n    });\n  };\n  function getDefaultAnimation(animation) {\n    // Disable screen transition animation by default on web, windows and macos to match the native behavior\n    const excludedPlatforms = _Platform.default.OS !== 'web' && _Platform.default.OS !== 'windows' && _Platform.default.OS !== 'macos';\n    return animation ?? (excludedPlatforms ? 'default' : 'none');\n  }\n  function getAnimationEnabled(animation) {\n    return getDefaultAnimation(animation) !== 'none';\n  }\n  class CardStack extends React.Component {\n    static getDerivedStateFromProps(props, state) {\n      if (props.routes === state.routes && props.descriptors === state.descriptors) {\n        return null;\n      }\n      const gestures = [...props.routes, ...props.state.preloadedRoutes].reduce((acc, curr) => {\n        const descriptor = props.descriptors[curr.key] || props.preloadedDescriptors[curr.key];\n        const {\n          animation\n        } = descriptor?.options || {};\n        acc[curr.key] = state.gestures[curr.key] || new _Animated.default.Value(props.openingRouteKeys.includes(curr.key) && getAnimationEnabled(animation) || props.state.preloadedRoutes.includes(curr) ? getDistanceFromOptions(state.layout, descriptor?.options, props.direction === 'rtl') : 0);\n        return acc;\n      }, {});\n      const modalRouteKeys = (0, _getModalRoutesKeys.getModalRouteKeys)([...props.routes, ...props.state.preloadedRoutes], Object.assign({}, props.descriptors, props.preloadedDescriptors));\n      const scenes = [...props.routes, ...props.state.preloadedRoutes].map((route, index, self) => {\n        // For preloaded screens, we don't care about the previous and the next screen\n        const isPreloaded = props.state.preloadedRoutes.includes(route);\n        const previousRoute = isPreloaded ? undefined : self[index - 1];\n        const nextRoute = isPreloaded ? undefined : self[index + 1];\n        const oldScene = state.scenes[index];\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute ? gestures[previousRoute.key] : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n        const descriptor = (isPreloaded ? props.preloadedDescriptors : props.descriptors)[route.key] || state.descriptors[route.key] || (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n        const nextOptions = nextRoute && (props.descriptors[nextRoute?.key] || state.descriptors[nextRoute?.key])?.options;\n        const previousOptions = previousRoute && (props.descriptors[previousRoute?.key] || state.descriptors[previousRoute?.key])?.options;\n\n        // When a screen is not the last, it should use next screen's transition config\n        // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n        // For example combining a slide and a modal transition would look wrong otherwise\n        // With this approach, combining different transition styles in the same navigator mostly looks right\n        // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n        // but the majority of the transitions look alright\n        const optionsForTransitionConfig = index !== self.length - 1 && nextOptions && nextOptions?.presentation !== 'transparentModal' ? nextOptions : descriptor.options;\n\n        // Assume modal if there are already modal screens in the stack\n        // or current screen is a modal when no presentation is specified\n        const isModal = modalRouteKeys.includes(route.key);\n        const animation = getDefaultAnimation(optionsForTransitionConfig.animation);\n        const isAnimationEnabled = getAnimationEnabled(animation);\n        const transitionPreset = animation !== 'default' ? NAMED_TRANSITIONS_PRESETS[animation] : isModal || optionsForTransitionConfig.presentation === 'modal' ? _TransitionPresets.ModalTransition : optionsForTransitionConfig.presentation === 'transparentModal' ? _TransitionPresets.ModalFadeTransition : _TransitionPresets.DefaultTransition;\n        const {\n          gestureEnabled = _Platform.default.OS === 'ios' && isAnimationEnabled,\n          gestureDirection = transitionPreset.gestureDirection,\n          transitionSpec = transitionPreset.transitionSpec,\n          cardStyleInterpolator = isAnimationEnabled ? transitionPreset.cardStyleInterpolator : _CardStyleInterpolators.forNoAnimation,\n          headerStyleInterpolator = transitionPreset.headerStyleInterpolator,\n          cardOverlayEnabled = _Platform.default.OS !== 'ios' && optionsForTransitionConfig.presentation !== 'transparentModal' || getIsModalPresentation(cardStyleInterpolator)\n        } = optionsForTransitionConfig;\n        const headerMode = descriptor.options.headerMode ?? (!(optionsForTransitionConfig.presentation === 'modal' || optionsForTransitionConfig.presentation === 'transparentModal' || nextOptions?.presentation === 'modal' || nextOptions?.presentation === 'transparentModal' || getIsModalPresentation(cardStyleInterpolator)) && _Platform.default.OS === 'ios' && descriptor.options.header === undefined ? 'float' : 'screen');\n        const isRTL = props.direction === 'rtl';\n        const scene = {\n          route,\n          descriptor: Object.assign({}, descriptor, {\n            options: Object.assign({}, descriptor.options, {\n              animation,\n              cardOverlayEnabled,\n              cardStyleInterpolator,\n              gestureDirection,\n              gestureEnabled,\n              headerStyleInterpolator,\n              transitionSpec,\n              headerMode\n            })\n          }),\n          progress: {\n            current: getProgressFromGesture(currentGesture, state.layout, descriptor.options, isRTL),\n            next: nextGesture && nextOptions?.presentation !== 'transparentModal' ? getProgressFromGesture(nextGesture, state.layout, nextOptions, isRTL) : undefined,\n            previous: previousGesture ? getProgressFromGesture(previousGesture, state.layout, previousOptions, isRTL) : undefined\n          },\n          __memo: [state.layout, descriptor, nextOptions, previousOptions, currentGesture, nextGesture, previousGesture]\n        };\n        if (oldScene && scene.__memo.every((it, i) => {\n          // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n          return oldScene.__memo[i] === it;\n        })) {\n          return oldScene;\n        }\n        return scene;\n      });\n      return {\n        routes: props.routes,\n        scenes,\n        gestures,\n        descriptors: props.descriptors,\n        headerHeights: getHeaderHeights(scenes, props.insets, props.isParentHeaderShown, props.isParentModal, state.layout, state.headerHeights)\n      };\n    }\n    constructor(props) {\n      super(props);\n      this.state = {\n        routes: [],\n        scenes: [],\n        gestures: {},\n        layout: _elements.SafeAreaProviderCompat.initialMetrics.frame,\n        descriptors: this.props.descriptors,\n        // Used when card's header is null and mode is float to make transition\n        // between screens with headers and those without headers smooth.\n        // This is not a great heuristic here. We don't know synchronously\n        // on mount what the header height is so we have just used the most\n        // common cases here.\n        headerHeights: {}\n      };\n    }\n    handleLayout = e => {\n      const {\n        height,\n        width\n      } = e.nativeEvent.layout;\n      const layout = {\n        width,\n        height\n      };\n      this.setState((state, props) => {\n        if (height === state.layout.height && width === state.layout.width) {\n          return null;\n        }\n        return {\n          layout,\n          headerHeights: getHeaderHeights(state.scenes, props.insets, props.isParentHeaderShown, props.isParentModal, layout, state.headerHeights)\n        };\n      });\n    };\n    handleHeaderLayout = ({\n      route,\n      height\n    }) => {\n      this.setState(({\n        headerHeights\n      }) => {\n        const previousHeight = headerHeights[route.key];\n        if (previousHeight === height) {\n          return null;\n        }\n        return {\n          headerHeights: Object.assign({}, headerHeights, {\n            [route.key]: height\n          })\n        };\n      });\n    };\n    getFocusedRoute = () => {\n      const {\n        state\n      } = this.props;\n      return state.routes[state.index];\n    };\n    getPreviousScene = ({\n      route\n    }) => {\n      const {\n        getPreviousRoute\n      } = this.props;\n      const {\n        scenes\n      } = this.state;\n      const previousRoute = getPreviousRoute({\n        route\n      });\n      if (previousRoute) {\n        const previousScene = scenes.find(scene => scene.descriptor.route.key === previousRoute.key);\n        return previousScene;\n      }\n      return undefined;\n    };\n    render() {\n      const {\n        insets,\n        state,\n        routes,\n        openingRouteKeys,\n        closingRouteKeys,\n        onOpenRoute,\n        onCloseRoute,\n        renderHeader,\n        isParentHeaderShown,\n        isParentModal,\n        onTransitionStart,\n        onTransitionEnd,\n        onGestureStart,\n        onGestureEnd,\n        onGestureCancel,\n        detachInactiveScreens = _Platform.default.OS === 'web' || _Platform.default.OS === 'android' || _Platform.default.OS === 'ios'\n      } = this.props;\n      const {\n        scenes,\n        layout,\n        gestures,\n        headerHeights\n      } = this.state;\n      const focusedRoute = state.routes[state.index];\n      const focusedHeaderHeight = headerHeights[focusedRoute.key];\n      const isFloatHeaderAbsolute = this.state.scenes.slice(-2).some(scene => {\n        const options = scene.descriptor.options ?? {};\n        const {\n          headerMode,\n          headerTransparent,\n          headerShown = true\n        } = options;\n        if (headerTransparent || headerShown === false || headerMode === 'screen') {\n          return true;\n        }\n        return false;\n      });\n      let activeScreensLimit = 1;\n      for (let i = scenes.length - 1; i >= 0; i--) {\n        const {\n          options\n        } = scenes[i].descriptor;\n        const {\n          // By default, we don't want to detach the previous screen of the active one for modals\n          detachPreviousScreen = options.presentation === 'transparentModal' ? false : getIsModalPresentation(options.cardStyleInterpolator) ? i !== (0, _findLastIndex.findLastIndex)(scenes, scene => {\n            const {\n              cardStyleInterpolator\n            } = scene.descriptor.options;\n            return cardStyleInterpolator === _CardStyleInterpolators.forModalPresentationIOS || cardStyleInterpolator?.name === 'forModalPresentationIOS';\n          }) : true\n        } = options;\n        if (detachPreviousScreen === false) {\n          activeScreensLimit++;\n        } else {\n          // Check at least last 2 screens before stopping\n          // This will make sure that screen isn't detached when another screen is animating on top of the transparent one\n          // For example, (Opaque -> Transparent -> Opaque)\n          if (i <= scenes.length - 2) {\n            break;\n          }\n        }\n      }\n      const floatingHeader = /*#__PURE__*/(0, _jsxRuntime.jsx)(React.Fragment, {\n        children: renderHeader({\n          mode: 'float',\n          layout,\n          scenes,\n          getPreviousScene: this.getPreviousScene,\n          getFocusedRoute: this.getFocusedRoute,\n          onContentHeightChange: this.handleHeaderLayout,\n          style: [styles.floating, isFloatHeaderAbsolute && [\n          // Without this, the header buttons won't be touchable on Android when headerTransparent: true\n          {\n            height: focusedHeaderHeight\n          }, styles.absolute]]\n        })\n      }, \"header\");\n      return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_View.default, {\n        style: styles.container,\n        children: [isFloatHeaderAbsolute ? null : floatingHeader, /*#__PURE__*/(0, _jsxRuntime.jsx)(_Screens.MaybeScreenContainer, {\n          enabled: detachInactiveScreens,\n          style: styles.container,\n          onLayout: this.handleLayout,\n          children: [...routes, ...state.preloadedRoutes].map((route, index) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n            // It is possible that for a short period the route appears in both arrays.\n            // Particularly, if the screen is removed with `retain`, then it needs a moment to execute the animation.\n            // However, due to the router action, it immediately populates the `preloadedRoutes` array.\n            // Practically, the logic below takes care that it is rendered only once.\n            const isPreloaded = state.preloadedRoutes.includes(route) && !routes.includes(route);\n            if (state.preloadedRoutes.includes(route) && routes.includes(route) && index >= routes.length) {\n              return null;\n            }\n\n            // For the screens that shouldn't be active, the value is 0\n            // For those that should be active, but are not the top screen, the value is 1\n            // For those on top of the stack and with interaction enabled, the value is 2\n            // For the old implementation, it stays the same it was\n            let isScreenActive = 1;\n            if (index < routes.length - activeScreensLimit - 1 || isPreloaded) {\n              // screen should be inactive because it is too deep in the stack\n              isScreenActive = STATE_INACTIVE;\n            } else {\n              const sceneForActivity = scenes[routes.length - 1];\n              const outputValue = index === routes.length - 1 ? STATE_ON_TOP // the screen is on top after the transition\n              : index >= routes.length - activeScreensLimit ? STATE_TRANSITIONING_OR_BELOW_TOP // the screen should stay active after the transition, it is not on top but is in activeLimit\n              : STATE_INACTIVE; // the screen should be active only during the transition, it is at the edge of activeLimit\n              isScreenActive = sceneForActivity ? sceneForActivity.progress.current.interpolate({\n                inputRange: [0, 1 - EPSILON, 1],\n                outputRange: [1, 1, outputValue],\n                extrapolate: 'clamp'\n              }) : STATE_TRANSITIONING_OR_BELOW_TOP;\n            }\n            const {\n              headerShown = true,\n              headerTransparent,\n              freezeOnBlur,\n              autoHideHomeIndicator\n            } = scene.descriptor.options;\n            const safeAreaInsetTop = insets.top;\n            const safeAreaInsetRight = insets.right;\n            const safeAreaInsetBottom = insets.bottom;\n            const safeAreaInsetLeft = insets.left;\n            const headerHeight = headerShown !== false ? headerHeights[route.key] : 0;\n\n            // Start from current card and count backwards the number of cards with same interpolation\n            const interpolationIndex = getInterpolationIndex(scenes, index);\n            const isModal = getIsModal(scene, interpolationIndex, isParentModal);\n            const isNextScreenTransparent = scenes[index + 1]?.descriptor.options.presentation === 'transparentModal';\n            const detachCurrentScreen = scenes[index + 1]?.descriptor.options.detachPreviousScreen !== false;\n            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Screens.MaybeScreen, {\n              style: [_StyleSheet.default.absoluteFill],\n              enabled: detachInactiveScreens,\n              active: isScreenActive,\n              freezeOnBlur: freezeOnBlur,\n              shouldFreeze: isScreenActive === STATE_INACTIVE && !isPreloaded,\n              homeIndicatorHidden: autoHideHomeIndicator,\n              pointerEvents: \"box-none\",\n              children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_CardContainer.CardContainer, {\n                index: index,\n                interpolationIndex: interpolationIndex,\n                modal: isModal,\n                active: index === routes.length - 1,\n                focused: focused,\n                opening: openingRouteKeys.includes(route.key),\n                closing: closingRouteKeys.includes(route.key),\n                layout: layout,\n                gesture: gesture,\n                scene: scene,\n                safeAreaInsetTop: safeAreaInsetTop,\n                safeAreaInsetRight: safeAreaInsetRight,\n                safeAreaInsetBottom: safeAreaInsetBottom,\n                safeAreaInsetLeft: safeAreaInsetLeft,\n                onGestureStart: onGestureStart,\n                onGestureCancel: onGestureCancel,\n                onGestureEnd: onGestureEnd,\n                headerHeight: headerHeight,\n                isParentHeaderShown: isParentHeaderShown,\n                onHeaderHeightChange: this.handleHeaderLayout,\n                getPreviousScene: this.getPreviousScene,\n                getFocusedRoute: this.getFocusedRoute,\n                hasAbsoluteFloatHeader: isFloatHeaderAbsolute && !headerTransparent,\n                renderHeader: renderHeader,\n                onOpenRoute: onOpenRoute,\n                onCloseRoute: onCloseRoute,\n                onTransitionStart: onTransitionStart,\n                onTransitionEnd: onTransitionEnd,\n                isNextScreenTransparent: isNextScreenTransparent,\n                detachCurrentScreen: detachCurrentScreen,\n                preloaded: isPreloaded\n              })\n            }, route.key);\n          })\n        }), isFloatHeaderAbsolute ? floatingHeader : null]\n      });\n    }\n  }\n  exports.CardStack = CardStack;\n  const styles = _StyleSheet.default.create({\n    container: {\n      flex: 1\n    },\n    absolute: {\n      position: 'absolute',\n      top: 0,\n      start: 0,\n      end: 0\n    },\n    floating: {\n      zIndex: 1\n    }\n  });\n});","lineCount":488,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"CardStack"],[8,19,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"getAnimationEnabled"],[9,29,1,13],[9,32,1,13,"getAnimationEnabled"],[9,51,1,13],[10,2,3,0],[10,6,3,0,"_elements"],[10,15,3,0],[10,18,3,0,"require"],[10,25,3,0],[10,26,3,0,"_dependencyMap"],[10,40,3,0],[11,2,4,0],[11,6,4,0,"React"],[11,11,4,0],[11,14,4,0,"_interopRequireWildcard"],[11,37,4,0],[11,38,4,0,"require"],[11,45,4,0],[11,46,4,0,"_dependencyMap"],[11,60,4,0],[12,2,4,31],[12,6,4,31,"_Animated"],[12,15,4,31],[12,18,4,31,"_interopRequireDefault"],[12,40,4,31],[12,41,4,31,"require"],[12,48,4,31],[12,49,4,31,"_dependencyMap"],[12,63,4,31],[13,2,4,31],[13,6,4,31,"_Platform"],[13,15,4,31],[13,18,4,31,"_interopRequireDefault"],[13,40,4,31],[13,41,4,31,"require"],[13,48,4,31],[13,49,4,31,"_dependencyMap"],[13,63,4,31],[14,2,4,31],[14,6,4,31,"_StyleSheet"],[14,17,4,31],[14,20,4,31,"_interopRequireDefault"],[14,42,4,31],[14,43,4,31,"require"],[14,50,4,31],[14,51,4,31,"_dependencyMap"],[14,65,4,31],[15,2,4,31],[15,6,4,31,"_View"],[15,11,4,31],[15,14,4,31,"_interopRequireDefault"],[15,36,4,31],[15,37,4,31,"require"],[15,44,4,31],[15,45,4,31,"_dependencyMap"],[15,59,4,31],[16,2,6,0],[16,6,6,0,"_CardStyleInterpolators"],[16,29,6,0],[16,32,6,0,"require"],[16,39,6,0],[16,40,6,0,"_dependencyMap"],[16,54,6,0],[17,2,7,0],[17,6,7,0,"_TransitionPresets"],[17,24,7,0],[17,27,7,0,"require"],[17,34,7,0],[17,35,7,0,"_dependencyMap"],[17,49,7,0],[18,2,8,0],[18,6,8,0,"_findLastIndex"],[18,20,8,0],[18,23,8,0,"require"],[18,30,8,0],[18,31,8,0,"_dependencyMap"],[18,45,8,0],[19,2,9,0],[19,6,9,0,"_getDistanceForDirection"],[19,30,9,0],[19,33,9,0,"require"],[19,40,9,0],[19,41,9,0,"_dependencyMap"],[19,55,9,0],[20,2,10,0],[20,6,10,0,"_getModalRoutesKeys"],[20,25,10,0],[20,28,10,0,"require"],[20,35,10,0],[20,36,10,0,"_dependencyMap"],[20,50,10,0],[21,2,11,0],[21,6,11,0,"_Screens"],[21,14,11,0],[21,17,11,0,"require"],[21,24,11,0],[21,25,11,0,"_dependencyMap"],[21,39,11,0],[22,2,12,0],[22,6,12,0,"_CardContainer"],[22,20,12,0],[22,23,12,0,"require"],[22,30,12,0],[22,31,12,0,"_dependencyMap"],[22,45,12,0],[23,2,13,0],[23,6,13,0,"_jsxRuntime"],[23,17,13,0],[23,20,13,0,"require"],[23,27,13,0],[23,28,13,0,"_dependencyMap"],[23,42,13,0],[24,2,13,63],[24,11,13,63,"_interopRequireWildcard"],[24,35,13,63,"e"],[24,36,13,63],[24,38,13,63,"t"],[24,39,13,63],[24,68,13,63,"WeakMap"],[24,75,13,63],[24,81,13,63,"r"],[24,82,13,63],[24,89,13,63,"WeakMap"],[24,96,13,63],[24,100,13,63,"n"],[24,101,13,63],[24,108,13,63,"WeakMap"],[24,115,13,63],[24,127,13,63,"_interopRequireWildcard"],[24,150,13,63],[24,162,13,63,"_interopRequireWildcard"],[24,163,13,63,"e"],[24,164,13,63],[24,166,13,63,"t"],[24,167,13,63],[24,176,13,63,"t"],[24,177,13,63],[24,181,13,63,"e"],[24,182,13,63],[24,186,13,63,"e"],[24,187,13,63],[24,188,13,63,"__esModule"],[24,198,13,63],[24,207,13,63,"e"],[24,208,13,63],[24,214,13,63,"o"],[24,215,13,63],[24,217,13,63,"i"],[24,218,13,63],[24,220,13,63,"f"],[24,221,13,63],[24,226,13,63,"__proto__"],[24,235,13,63],[24,243,13,63,"default"],[24,250,13,63],[24,252,13,63,"e"],[24,253,13,63],[24,270,13,63,"e"],[24,271,13,63],[24,294,13,63,"e"],[24,295,13,63],[24,320,13,63,"e"],[24,321,13,63],[24,330,13,63,"f"],[24,331,13,63],[24,337,13,63,"o"],[24,338,13,63],[24,341,13,63,"t"],[24,342,13,63],[24,345,13,63,"n"],[24,346,13,63],[24,349,13,63,"r"],[24,350,13,63],[24,358,13,63,"o"],[24,359,13,63],[24,360,13,63,"has"],[24,363,13,63],[24,364,13,63,"e"],[24,365,13,63],[24,375,13,63,"o"],[24,376,13,63],[24,377,13,63,"get"],[24,380,13,63],[24,381,13,63,"e"],[24,382,13,63],[24,385,13,63,"o"],[24,386,13,63],[24,387,13,63,"set"],[24,390,13,63],[24,391,13,63,"e"],[24,392,13,63],[24,394,13,63,"f"],[24,395,13,63],[24,411,13,63,"t"],[24,412,13,63],[24,416,13,63,"e"],[24,417,13,63],[24,433,13,63,"t"],[24,434,13,63],[24,441,13,63,"hasOwnProperty"],[24,455,13,63],[24,456,13,63,"call"],[24,460,13,63],[24,461,13,63,"e"],[24,462,13,63],[24,464,13,63,"t"],[24,465,13,63],[24,472,13,63,"i"],[24,473,13,63],[24,477,13,63,"o"],[24,478,13,63],[24,481,13,63,"Object"],[24,487,13,63],[24,488,13,63,"defineProperty"],[24,502,13,63],[24,507,13,63,"Object"],[24,513,13,63],[24,514,13,63,"getOwnPropertyDescriptor"],[24,538,13,63],[24,539,13,63,"e"],[24,540,13,63],[24,542,13,63,"t"],[24,543,13,63],[24,550,13,63,"i"],[24,551,13,63],[24,552,13,63,"get"],[24,555,13,63],[24,559,13,63,"i"],[24,560,13,63],[24,561,13,63,"set"],[24,564,13,63],[24,568,13,63,"o"],[24,569,13,63],[24,570,13,63,"f"],[24,571,13,63],[24,573,13,63,"t"],[24,574,13,63],[24,576,13,63,"i"],[24,577,13,63],[24,581,13,63,"f"],[24,582,13,63],[24,583,13,63,"t"],[24,584,13,63],[24,588,13,63,"e"],[24,589,13,63],[24,590,13,63,"t"],[24,591,13,63],[24,602,13,63,"f"],[24,603,13,63],[24,608,13,63,"e"],[24,609,13,63],[24,611,13,63,"t"],[24,612,13,63],[25,2,14,0],[25,8,14,6,"NAMED_TRANSITIONS_PRESETS"],[25,33,14,31],[25,36,14,34],[26,4,15,2,"default"],[26,11,15,9],[26,13,15,11,"DefaultTransition"],[26,49,15,28],[27,4,16,2,"fade"],[27,8,16,6],[27,10,16,8,"ModalFadeTransition"],[27,48,16,27],[28,4,17,2,"fade_from_bottom"],[28,20,17,18],[28,22,17,20,"FadeFromBottomAndroid"],[28,62,17,41],[29,4,18,2,"fade_from_right"],[29,19,18,17],[29,21,18,19,"FadeFromRightAndroid"],[29,60,18,39],[30,4,19,2,"none"],[30,8,19,6],[30,10,19,8,"DefaultTransition"],[30,46,19,25],[31,4,20,2,"reveal_from_bottom"],[31,22,20,20],[31,24,20,22,"RevealFromBottomAndroid"],[31,66,20,45],[32,4,21,2,"scale_from_center"],[32,21,21,19],[32,23,21,21,"ScaleFromCenterAndroid"],[32,64,21,43],[33,4,22,2,"slide_from_left"],[33,19,22,17],[33,21,22,19,"SlideFromLeftIOS"],[33,56,22,35],[34,4,23,2,"slide_from_right"],[34,20,23,18],[34,22,23,20,"SlideFromRightIOS"],[34,58,23,37],[35,4,24,2,"slide_from_bottom"],[35,21,24,19],[35,23,24,21,"Platform"],[35,40,24,29],[35,41,24,30,"select"],[35,47,24,36],[35,48,24,37],[36,6,25,4,"ios"],[36,9,25,7],[36,11,25,9,"ModalSlideFromBottomIOS"],[36,53,25,32],[37,6,26,4,"default"],[37,13,26,11],[37,15,26,13,"BottomSheetAndroid"],[38,4,27,2],[38,5,27,3],[39,2,28,0],[39,3,28,1],[40,2,29,0],[40,8,29,6,"EPSILON"],[40,15,29,13],[40,18,29,16],[40,22,29,20],[41,2,30,0],[41,8,30,6,"STATE_INACTIVE"],[41,22,30,20],[41,25,30,23],[41,26,30,24],[42,2,31,0],[42,8,31,6,"STATE_TRANSITIONING_OR_BELOW_TOP"],[42,40,31,38],[42,43,31,41],[42,44,31,42],[43,2,32,0],[43,8,32,6,"STATE_ON_TOP"],[43,20,32,18],[43,23,32,21],[43,24,32,22],[44,2,33,0],[44,8,33,6,"FALLBACK_DESCRIPTOR"],[44,27,33,25],[44,30,33,28,"Object"],[44,36,33,34],[44,37,33,35,"freeze"],[44,43,33,41],[44,44,33,42],[45,4,34,2,"options"],[45,11,34,9],[45,13,34,11],[45,14,34,12],[46,2,35,0],[46,3,35,1],[46,4,35,2],[47,2,36,0],[47,8,36,6,"getInterpolationIndex"],[47,29,36,27],[47,32,36,30,"getInterpolationIndex"],[47,33,36,31,"scenes"],[47,39,36,37],[47,41,36,39,"index"],[47,46,36,44],[47,51,36,49],[48,4,37,2],[48,10,37,8],[49,6,38,4,"cardStyleInterpolator"],[50,4,39,2],[50,5,39,3],[50,8,39,6,"scenes"],[50,14,39,12],[50,15,39,13,"index"],[50,20,39,18],[50,21,39,19],[50,22,39,20,"descriptor"],[50,32,39,30],[50,33,39,31,"options"],[50,40,39,38],[52,4,41,2],[53,4,42,2],[53,8,42,6,"interpolationIndex"],[53,26,42,24],[53,29,42,27],[53,30,42,28],[54,4,43,2],[54,9,43,7],[54,13,43,11,"i"],[54,14,43,12],[54,17,43,15,"index"],[54,22,43,20],[54,25,43,23],[54,26,43,24],[54,28,43,26,"i"],[54,29,43,27],[54,33,43,31],[54,34,43,32],[54,36,43,34,"i"],[54,37,43,35],[54,39,43,37],[54,41,43,39],[55,6,44,4],[55,12,44,10,"cardStyleInterpolatorCurrent"],[55,40,44,38],[55,43,44,41,"scenes"],[55,49,44,47],[55,50,44,48,"i"],[55,51,44,49],[55,52,44,50],[55,54,44,52,"descriptor"],[55,64,44,62],[55,65,44,63,"options"],[55,72,44,70],[55,73,44,71,"cardStyleInterpolator"],[55,94,44,92],[56,6,45,4],[56,10,45,8,"cardStyleInterpolatorCurrent"],[56,38,45,36],[56,43,45,41,"cardStyleInterpolator"],[56,64,45,62],[56,66,45,64],[57,8,46,6],[58,6,47,4],[59,6,48,4,"interpolationIndex"],[59,24,48,22],[59,26,48,24],[60,4,49,2],[61,4,50,2],[61,11,50,9,"interpolationIndex"],[61,29,50,27],[62,2,51,0],[62,3,51,1],[63,2,52,0],[63,8,52,6,"getIsModalPresentation"],[63,30,52,28],[63,33,52,31,"cardStyleInterpolator"],[63,54,52,52],[63,58,52,56],[64,4,53,2],[64,11,53,9,"cardStyleInterpolator"],[64,32,53,30],[64,37,53,35,"forModalPresentationIOS"],[64,84,53,58],[65,4,54,2],[66,4,55,2,"cardStyleInterpolator"],[66,25,55,23],[66,26,55,24,"name"],[66,30,55,28],[66,35,55,33],[66,60,55,58],[67,2,56,0],[67,3,56,1],[68,2,57,0],[68,8,57,6,"getIsModal"],[68,18,57,16],[68,21,57,19,"getIsModal"],[68,22,57,20,"scene"],[68,27,57,25],[68,29,57,27,"interpolationIndex"],[68,47,57,45],[68,49,57,47,"isParentModal"],[68,62,57,60],[68,67,57,65],[69,4,58,2],[69,8,58,6,"isParentModal"],[69,21,58,19],[69,23,58,21],[70,6,59,4],[70,13,59,11],[70,17,59,15],[71,4,60,2],[72,4,61,2],[72,10,61,8],[73,6,62,4,"cardStyleInterpolator"],[74,4,63,2],[74,5,63,3],[74,8,63,6,"scene"],[74,13,63,11],[74,14,63,12,"descriptor"],[74,24,63,22],[74,25,63,23,"options"],[74,32,63,30],[75,4,64,2],[75,10,64,8,"isModalPresentation"],[75,29,64,27],[75,32,64,30,"getIsModalPresentation"],[75,54,64,52],[75,55,64,53,"cardStyleInterpolator"],[75,76,64,74],[75,77,64,75],[76,4,65,2],[76,10,65,8,"isModal"],[76,17,65,15],[76,20,65,18,"isModalPresentation"],[76,39,65,37],[76,43,65,41,"interpolationIndex"],[76,61,65,59],[76,66,65,64],[76,67,65,65],[77,4,66,2],[77,11,66,9,"isModal"],[77,18,66,16],[78,2,67,0],[78,3,67,1],[79,2,68,0],[79,8,68,6,"getHeaderHeights"],[79,24,68,22],[79,27,68,25,"getHeaderHeights"],[79,28,68,26,"scenes"],[79,34,68,32],[79,36,68,34,"insets"],[79,42,68,40],[79,44,68,42,"isParentHeaderShown"],[79,63,68,61],[79,65,68,63,"isParentModal"],[79,78,68,76],[79,80,68,78,"layout"],[79,86,68,84],[79,88,68,86,"previous"],[79,96,68,94],[79,101,68,99],[80,4,69,2],[80,11,69,9,"scenes"],[80,17,69,15],[80,18,69,16,"reduce"],[80,24,69,22],[80,25,69,23],[80,26,69,24,"acc"],[80,29,69,27],[80,31,69,29,"curr"],[80,35,69,33],[80,37,69,35,"index"],[80,42,69,40],[80,47,69,45],[81,6,70,4],[81,12,70,10],[82,8,71,6,"headerStatusBarHeight"],[82,29,71,27],[82,32,71,30,"isParentHeaderShown"],[82,51,71,49],[82,54,71,52],[82,55,71,53],[82,58,71,56,"insets"],[82,64,71,62],[82,65,71,63,"top"],[82,68,71,66],[83,8,72,6,"headerStyle"],[84,6,73,4],[84,7,73,5],[84,10,73,8,"curr"],[84,14,73,12],[84,15,73,13,"descriptor"],[84,25,73,23],[84,26,73,24,"options"],[84,33,73,31],[85,6,74,4],[85,12,74,10,"style"],[85,17,74,15],[85,20,74,18,"StyleSheet"],[85,39,74,28],[85,40,74,29,"flatten"],[85,47,74,36],[85,48,74,37,"headerStyle"],[85,59,74,48],[85,63,74,52],[85,64,74,53],[85,65,74,54],[85,66,74,55],[86,6,75,4],[86,12,75,10,"height"],[86,18,75,16],[86,21,75,19],[86,29,75,27],[86,33,75,31,"style"],[86,38,75,36],[86,42,75,40],[86,49,75,47,"style"],[86,54,75,52],[86,55,75,53,"height"],[86,61,75,59],[86,66,75,64],[86,74,75,72],[86,77,75,75,"style"],[86,82,75,80],[86,83,75,81,"height"],[86,89,75,87],[86,92,75,90,"previous"],[86,100,75,98],[86,101,75,99,"curr"],[86,105,75,103],[86,106,75,104,"route"],[86,111,75,109],[86,112,75,110,"key"],[86,115,75,113],[86,116,75,114],[87,6,76,4],[87,12,76,10,"interpolationIndex"],[87,30,76,28],[87,33,76,31,"getInterpolationIndex"],[87,54,76,52],[87,55,76,53,"scenes"],[87,61,76,59],[87,63,76,61,"index"],[87,68,76,66],[87,69,76,67],[88,6,77,4],[88,12,77,10,"isModal"],[88,19,77,17],[88,22,77,20,"getIsModal"],[88,32,77,30],[88,33,77,31,"curr"],[88,37,77,35],[88,39,77,37,"interpolationIndex"],[88,57,77,55],[88,59,77,57,"isParentModal"],[88,72,77,70],[88,73,77,71],[89,6,78,4,"acc"],[89,9,78,7],[89,10,78,8,"curr"],[89,14,78,12],[89,15,78,13,"route"],[89,20,78,18],[89,21,78,19,"key"],[89,24,78,22],[89,25,78,23],[89,28,78,26],[89,35,78,33,"height"],[89,41,78,39],[89,46,78,44],[89,54,78,52],[89,57,78,55,"height"],[89,63,78,61],[89,66,78,64],[89,70,78,64,"getDefaultHeaderHeight"],[89,102,78,86],[89,104,78,87,"layout"],[89,110,78,93],[89,112,78,95,"isModal"],[89,119,78,102],[89,121,78,104,"headerStatusBarHeight"],[89,142,78,125],[89,143,78,126],[90,6,79,4],[90,13,79,11,"acc"],[90,16,79,14],[91,4,80,2],[91,5,80,3],[91,7,80,5],[91,8,80,6],[91,9,80,7],[91,10,80,8],[92,2,81,0],[92,3,81,1],[93,2,82,0],[93,8,82,6,"getDistanceFromOptions"],[93,30,82,28],[93,33,82,31,"getDistanceFromOptions"],[93,34,82,32,"layout"],[93,40,82,38],[93,42,82,40,"options"],[93,49,82,47],[93,51,82,49,"isRTL"],[93,56,82,54],[93,61,82,59],[94,4,83,2],[94,8,83,6,"options"],[94,15,83,13],[94,17,83,15,"gestureDirection"],[94,33,83,31],[94,35,83,33],[95,6,84,4],[95,13,84,11],[95,17,84,11,"getDistanceForDirection"],[95,65,84,34],[95,67,84,35,"layout"],[95,73,84,41],[95,75,84,43,"options"],[95,82,84,50],[95,83,84,51,"gestureDirection"],[95,99,84,67],[95,101,84,69,"isRTL"],[95,106,84,74],[95,107,84,75],[96,4,85,2],[97,4,86,2],[97,10,86,8,"defaultGestureDirection"],[97,33,86,31],[97,36,86,34,"options"],[97,43,86,41],[97,45,86,43,"presentation"],[97,57,86,55],[97,62,86,60],[97,69,86,67],[97,72,86,70,"ModalTransition"],[97,106,86,85],[97,107,86,86,"gestureDirection"],[97,123,86,102],[97,126,86,105,"DefaultTransition"],[97,162,86,122],[97,163,86,123,"gestureDirection"],[97,179,86,139],[98,4,87,2],[98,10,87,8,"gestureDirection"],[98,26,87,24],[98,29,87,27,"options"],[98,36,87,34],[98,38,87,36,"animation"],[98,47,87,45],[98,50,87,48,"NAMED_TRANSITIONS_PRESETS"],[98,75,87,73],[98,76,87,74,"options"],[98,83,87,81],[98,85,87,83,"animation"],[98,94,87,92],[98,95,87,93],[98,97,87,95,"gestureDirection"],[98,113,87,111],[98,116,87,114,"defaultGestureDirection"],[98,139,87,137],[99,4,88,2],[99,11,88,9],[99,15,88,9,"getDistanceForDirection"],[99,63,88,32],[99,65,88,33,"layout"],[99,71,88,39],[99,73,88,41,"gestureDirection"],[99,89,88,57],[99,91,88,59,"isRTL"],[99,96,88,64],[99,97,88,65],[100,2,89,0],[100,3,89,1],[101,2,90,0],[101,8,90,6,"getProgressFromGesture"],[101,30,90,28],[101,33,90,31,"getProgressFromGesture"],[101,34,90,32,"gesture"],[101,41,90,39],[101,43,90,41,"layout"],[101,49,90,47],[101,51,90,49,"options"],[101,58,90,56],[101,60,90,58,"isRTL"],[101,65,90,63],[101,70,90,68],[102,4,91,2],[102,10,91,8,"distance"],[102,18,91,16],[102,21,91,19,"getDistanceFromOptions"],[102,43,91,41],[102,44,91,42],[103,6,92,4],[104,6,93,4],[105,6,94,4,"width"],[105,11,94,9],[105,13,94,11,"Math"],[105,17,94,15],[105,18,94,16,"max"],[105,21,94,19],[105,22,94,20],[105,23,94,21],[105,25,94,23,"layout"],[105,31,94,29],[105,32,94,30,"width"],[105,37,94,35],[105,38,94,36],[106,6,95,4,"height"],[106,12,95,10],[106,14,95,12,"Math"],[106,18,95,16],[106,19,95,17,"max"],[106,22,95,20],[106,23,95,21],[106,24,95,22],[106,26,95,24,"layout"],[106,32,95,30],[106,33,95,31,"height"],[106,39,95,37],[107,4,96,2],[107,5,96,3],[107,7,96,5,"options"],[107,14,96,12],[107,16,96,14,"isRTL"],[107,21,96,19],[107,22,96,20],[108,4,97,2],[108,8,97,6,"distance"],[108,16,97,14],[108,19,97,17],[108,20,97,18],[108,22,97,20],[109,6,98,4],[109,13,98,11,"gesture"],[109,20,98,18],[109,21,98,19,"interpolate"],[109,32,98,30],[109,33,98,31],[110,8,99,6,"inputRange"],[110,18,99,16],[110,20,99,18],[110,21,99,19],[110,22,99,20],[110,24,99,22,"distance"],[110,32,99,30],[110,33,99,31],[111,8,100,6,"outputRange"],[111,19,100,17],[111,21,100,19],[111,22,100,20],[111,23,100,21],[111,25,100,23],[111,26,100,24],[112,6,101,4],[112,7,101,5],[112,8,101,6],[113,4,102,2],[114,4,103,2],[114,11,103,9,"gesture"],[114,18,103,16],[114,19,103,17,"interpolate"],[114,30,103,28],[114,31,103,29],[115,6,104,4,"inputRange"],[115,16,104,14],[115,18,104,16],[115,19,104,17,"distance"],[115,27,104,25],[115,29,104,27],[115,30,104,28],[115,31,104,29],[116,6,105,4,"outputRange"],[116,17,105,15],[116,19,105,17],[116,20,105,18],[116,21,105,19],[116,23,105,21],[116,24,105,22],[117,4,106,2],[117,5,106,3],[117,6,106,4],[118,2,107,0],[118,3,107,1],[119,2,108,0],[119,11,108,9,"getDefaultAnimation"],[119,30,108,28,"getDefaultAnimation"],[119,31,108,29,"animation"],[119,40,108,38],[119,42,108,40],[120,4,109,2],[121,4,110,2],[121,10,110,8,"excludedPlatforms"],[121,27,110,25],[121,30,110,28,"Platform"],[121,47,110,36],[121,48,110,37,"OS"],[121,50,110,39],[121,55,110,44],[121,60,110,49],[121,64,110,53,"Platform"],[121,81,110,61],[121,82,110,62,"OS"],[121,84,110,64],[121,89,110,69],[121,98,110,78],[121,102,110,82,"Platform"],[121,119,110,90],[121,120,110,91,"OS"],[121,122,110,93],[121,127,110,98],[121,134,110,105],[122,4,111,2],[122,11,111,9,"animation"],[122,20,111,18],[122,25,111,23,"excludedPlatforms"],[122,42,111,40],[122,45,111,43],[122,54,111,52],[122,57,111,55],[122,63,111,61],[122,64,111,62],[123,2,112,0],[124,2,113,7],[124,11,113,16,"getAnimationEnabled"],[124,30,113,35,"getAnimationEnabled"],[124,31,113,36,"animation"],[124,40,113,45],[124,42,113,47],[125,4,114,2],[125,11,114,9,"getDefaultAnimation"],[125,30,114,28],[125,31,114,29,"animation"],[125,40,114,38],[125,41,114,39],[125,46,114,44],[125,52,114,50],[126,2,115,0],[127,2,116,7],[127,8,116,13,"CardStack"],[127,17,116,22],[127,26,116,31,"React"],[127,31,116,36],[127,32,116,37,"Component"],[127,41,116,46],[127,42,116,47],[128,4,117,2],[128,11,117,9,"getDerivedStateFromProps"],[128,35,117,33,"getDerivedStateFromProps"],[128,36,117,34,"props"],[128,41,117,39],[128,43,117,41,"state"],[128,48,117,46],[128,50,117,48],[129,6,118,4],[129,10,118,8,"props"],[129,15,118,13],[129,16,118,14,"routes"],[129,22,118,20],[129,27,118,25,"state"],[129,32,118,30],[129,33,118,31,"routes"],[129,39,118,37],[129,43,118,41,"props"],[129,48,118,46],[129,49,118,47,"descriptors"],[129,60,118,58],[129,65,118,63,"state"],[129,70,118,68],[129,71,118,69,"descriptors"],[129,82,118,80],[129,84,118,82],[130,8,119,6],[130,15,119,13],[130,19,119,17],[131,6,120,4],[132,6,121,4],[132,12,121,10,"gestures"],[132,20,121,18],[132,23,121,21],[132,24,121,22],[132,27,121,25,"props"],[132,32,121,30],[132,33,121,31,"routes"],[132,39,121,37],[132,41,121,39],[132,44,121,42,"props"],[132,49,121,47],[132,50,121,48,"state"],[132,55,121,53],[132,56,121,54,"preloadedRoutes"],[132,71,121,69],[132,72,121,70],[132,73,121,71,"reduce"],[132,79,121,77],[132,80,121,78],[132,81,121,79,"acc"],[132,84,121,82],[132,86,121,84,"curr"],[132,90,121,88],[132,95,121,93],[133,8,122,6],[133,14,122,12,"descriptor"],[133,24,122,22],[133,27,122,25,"props"],[133,32,122,30],[133,33,122,31,"descriptors"],[133,44,122,42],[133,45,122,43,"curr"],[133,49,122,47],[133,50,122,48,"key"],[133,53,122,51],[133,54,122,52],[133,58,122,56,"props"],[133,63,122,61],[133,64,122,62,"preloadedDescriptors"],[133,84,122,82],[133,85,122,83,"curr"],[133,89,122,87],[133,90,122,88,"key"],[133,93,122,91],[133,94,122,92],[134,8,123,6],[134,14,123,12],[135,10,124,8,"animation"],[136,8,125,6],[136,9,125,7],[136,12,125,10,"descriptor"],[136,22,125,20],[136,24,125,22,"options"],[136,31,125,29],[136,35,125,33],[136,36,125,34],[136,37,125,35],[137,8,126,6,"acc"],[137,11,126,9],[137,12,126,10,"curr"],[137,16,126,14],[137,17,126,15,"key"],[137,20,126,18],[137,21,126,19],[137,24,126,22,"state"],[137,29,126,27],[137,30,126,28,"gestures"],[137,38,126,36],[137,39,126,37,"curr"],[137,43,126,41],[137,44,126,42,"key"],[137,47,126,45],[137,48,126,46],[137,52,126,50],[137,56,126,54,"Animated"],[137,73,126,62],[137,74,126,63,"Value"],[137,79,126,68],[137,80,126,69,"props"],[137,85,126,74],[137,86,126,75,"openingRouteKeys"],[137,102,126,91],[137,103,126,92,"includes"],[137,111,126,100],[137,112,126,101,"curr"],[137,116,126,105],[137,117,126,106,"key"],[137,120,126,109],[137,121,126,110],[137,125,126,114,"getAnimationEnabled"],[137,144,126,133],[137,145,126,134,"animation"],[137,154,126,143],[137,155,126,144],[137,159,126,148,"props"],[137,164,126,153],[137,165,126,154,"state"],[137,170,126,159],[137,171,126,160,"preloadedRoutes"],[137,186,126,175],[137,187,126,176,"includes"],[137,195,126,184],[137,196,126,185,"curr"],[137,200,126,189],[137,201,126,190],[137,204,126,193,"getDistanceFromOptions"],[137,226,126,215],[137,227,126,216,"state"],[137,232,126,221],[137,233,126,222,"layout"],[137,239,126,228],[137,241,126,230,"descriptor"],[137,251,126,240],[137,253,126,242,"options"],[137,260,126,249],[137,262,126,251,"props"],[137,267,126,256],[137,268,126,257,"direction"],[137,277,126,266],[137,282,126,271],[137,287,126,276],[137,288,126,277],[137,291,126,280],[137,292,126,281],[137,293,126,282],[138,8,127,6],[138,15,127,13,"acc"],[138,18,127,16],[139,6,128,4],[139,7,128,5],[139,9,128,7],[139,10,128,8],[139,11,128,9],[139,12,128,10],[140,6,129,4],[140,12,129,10,"modalRouteKeys"],[140,26,129,24],[140,29,129,27],[140,33,129,27,"getModalRouteKeys"],[140,70,129,44],[140,72,129,45],[140,73,129,46],[140,76,129,49,"props"],[140,81,129,54],[140,82,129,55,"routes"],[140,88,129,61],[140,90,129,63],[140,93,129,66,"props"],[140,98,129,71],[140,99,129,72,"state"],[140,104,129,77],[140,105,129,78,"preloadedRoutes"],[140,120,129,93],[140,121,129,94],[140,123,129,94,"Object"],[140,129,129,94],[140,130,129,94,"assign"],[140,136,129,94],[140,141,130,9,"props"],[140,146,130,14],[140,147,130,15,"descriptors"],[140,158,130,26],[140,160,131,9,"props"],[140,165,131,14],[140,166,131,15,"preloadedDescriptors"],[140,186,131,35],[140,187,132,5],[140,188,132,6],[141,6,133,4],[141,12,133,10,"scenes"],[141,18,133,16],[141,21,133,19],[141,22,133,20],[141,25,133,23,"props"],[141,30,133,28],[141,31,133,29,"routes"],[141,37,133,35],[141,39,133,37],[141,42,133,40,"props"],[141,47,133,45],[141,48,133,46,"state"],[141,53,133,51],[141,54,133,52,"preloadedRoutes"],[141,69,133,67],[141,70,133,68],[141,71,133,69,"map"],[141,74,133,72],[141,75,133,73],[141,76,133,74,"route"],[141,81,133,79],[141,83,133,81,"index"],[141,88,133,86],[141,90,133,88,"self"],[141,94,133,92],[141,99,133,97],[142,8,134,6],[143,8,135,6],[143,14,135,12,"isPreloaded"],[143,25,135,23],[143,28,135,26,"props"],[143,33,135,31],[143,34,135,32,"state"],[143,39,135,37],[143,40,135,38,"preloadedRoutes"],[143,55,135,53],[143,56,135,54,"includes"],[143,64,135,62],[143,65,135,63,"route"],[143,70,135,68],[143,71,135,69],[144,8,136,6],[144,14,136,12,"previousRoute"],[144,27,136,25],[144,30,136,28,"isPreloaded"],[144,41,136,39],[144,44,136,42,"undefined"],[144,53,136,51],[144,56,136,54,"self"],[144,60,136,58],[144,61,136,59,"index"],[144,66,136,64],[144,69,136,67],[144,70,136,68],[144,71,136,69],[145,8,137,6],[145,14,137,12,"nextRoute"],[145,23,137,21],[145,26,137,24,"isPreloaded"],[145,37,137,35],[145,40,137,38,"undefined"],[145,49,137,47],[145,52,137,50,"self"],[145,56,137,54],[145,57,137,55,"index"],[145,62,137,60],[145,65,137,63],[145,66,137,64],[145,67,137,65],[146,8,138,6],[146,14,138,12,"oldScene"],[146,22,138,20],[146,25,138,23,"state"],[146,30,138,28],[146,31,138,29,"scenes"],[146,37,138,35],[146,38,138,36,"index"],[146,43,138,41],[146,44,138,42],[147,8,139,6],[147,14,139,12,"currentGesture"],[147,28,139,26],[147,31,139,29,"gestures"],[147,39,139,37],[147,40,139,38,"route"],[147,45,139,43],[147,46,139,44,"key"],[147,49,139,47],[147,50,139,48],[148,8,140,6],[148,14,140,12,"previousGesture"],[148,29,140,27],[148,32,140,30,"previousRoute"],[148,45,140,43],[148,48,140,46,"gestures"],[148,56,140,54],[148,57,140,55,"previousRoute"],[148,70,140,68],[148,71,140,69,"key"],[148,74,140,72],[148,75,140,73],[148,78,140,76,"undefined"],[148,87,140,85],[149,8,141,6],[149,14,141,12,"nextGesture"],[149,25,141,23],[149,28,141,26,"nextRoute"],[149,37,141,35],[149,40,141,38,"gestures"],[149,48,141,46],[149,49,141,47,"nextRoute"],[149,58,141,56],[149,59,141,57,"key"],[149,62,141,60],[149,63,141,61],[149,66,141,64,"undefined"],[149,75,141,73],[150,8,142,6],[150,14,142,12,"descriptor"],[150,24,142,22],[150,27,142,25],[150,28,142,26,"isPreloaded"],[150,39,142,37],[150,42,142,40,"props"],[150,47,142,45],[150,48,142,46,"preloadedDescriptors"],[150,68,142,66],[150,71,142,69,"props"],[150,76,142,74],[150,77,142,75,"descriptors"],[150,88,142,86],[150,90,142,88,"route"],[150,95,142,93],[150,96,142,94,"key"],[150,99,142,97],[150,100,142,98],[150,104,142,102,"state"],[150,109,142,107],[150,110,142,108,"descriptors"],[150,121,142,119],[150,122,142,120,"route"],[150,127,142,125],[150,128,142,126,"key"],[150,131,142,129],[150,132,142,130],[150,137,142,135,"oldScene"],[150,145,142,143],[150,148,142,146,"oldScene"],[150,156,142,154],[150,157,142,155,"descriptor"],[150,167,142,165],[150,170,142,168,"FALLBACK_DESCRIPTOR"],[150,189,142,187],[150,190,142,188],[151,8,143,6],[151,14,143,12,"nextOptions"],[151,25,143,23],[151,28,143,26,"nextRoute"],[151,37,143,35],[151,41,143,39],[151,42,143,40,"props"],[151,47,143,45],[151,48,143,46,"descriptors"],[151,59,143,57],[151,60,143,58,"nextRoute"],[151,69,143,67],[151,71,143,69,"key"],[151,74,143,72],[151,75,143,73],[151,79,143,77,"state"],[151,84,143,82],[151,85,143,83,"descriptors"],[151,96,143,94],[151,97,143,95,"nextRoute"],[151,106,143,104],[151,108,143,106,"key"],[151,111,143,109],[151,112,143,110],[151,115,143,113,"options"],[151,122,143,120],[152,8,144,6],[152,14,144,12,"previousOptions"],[152,29,144,27],[152,32,144,30,"previousRoute"],[152,45,144,43],[152,49,144,47],[152,50,144,48,"props"],[152,55,144,53],[152,56,144,54,"descriptors"],[152,67,144,65],[152,68,144,66,"previousRoute"],[152,81,144,79],[152,83,144,81,"key"],[152,86,144,84],[152,87,144,85],[152,91,144,89,"state"],[152,96,144,94],[152,97,144,95,"descriptors"],[152,108,144,106],[152,109,144,107,"previousRoute"],[152,122,144,120],[152,124,144,122,"key"],[152,127,144,125],[152,128,144,126],[152,131,144,129,"options"],[152,138,144,136],[154,8,146,6],[155,8,147,6],[156,8,148,6],[157,8,149,6],[158,8,150,6],[159,8,151,6],[160,8,152,6],[160,14,152,12,"optionsForTransitionConfig"],[160,40,152,38],[160,43,152,41,"index"],[160,48,152,46],[160,53,152,51,"self"],[160,57,152,55],[160,58,152,56,"length"],[160,64,152,62],[160,67,152,65],[160,68,152,66],[160,72,152,70,"nextOptions"],[160,83,152,81],[160,87,152,85,"nextOptions"],[160,98,152,96],[160,100,152,98,"presentation"],[160,112,152,110],[160,117,152,115],[160,135,152,133],[160,138,152,136,"nextOptions"],[160,149,152,147],[160,152,152,150,"descriptor"],[160,162,152,160],[160,163,152,161,"options"],[160,170,152,168],[162,8,154,6],[163,8,155,6],[164,8,156,6],[164,14,156,12,"isModal"],[164,21,156,19],[164,24,156,22,"modalRouteKeys"],[164,38,156,36],[164,39,156,37,"includes"],[164,47,156,45],[164,48,156,46,"route"],[164,53,156,51],[164,54,156,52,"key"],[164,57,156,55],[164,58,156,56],[165,8,157,6],[165,14,157,12,"animation"],[165,23,157,21],[165,26,157,24,"getDefaultAnimation"],[165,45,157,43],[165,46,157,44,"optionsForTransitionConfig"],[165,72,157,70],[165,73,157,71,"animation"],[165,82,157,80],[165,83,157,81],[166,8,158,6],[166,14,158,12,"isAnimationEnabled"],[166,32,158,30],[166,35,158,33,"getAnimationEnabled"],[166,54,158,52],[166,55,158,53,"animation"],[166,64,158,62],[166,65,158,63],[167,8,159,6],[167,14,159,12,"transitionPreset"],[167,30,159,28],[167,33,159,31,"animation"],[167,42,159,40],[167,47,159,45],[167,56,159,54],[167,59,159,57,"NAMED_TRANSITIONS_PRESETS"],[167,84,159,82],[167,85,159,83,"animation"],[167,94,159,92],[167,95,159,93],[167,98,159,96,"isModal"],[167,105,159,103],[167,109,159,107,"optionsForTransitionConfig"],[167,135,159,133],[167,136,159,134,"presentation"],[167,148,159,146],[167,153,159,151],[167,160,159,158],[167,163,159,161,"ModalTransition"],[167,197,159,176],[167,200,159,179,"optionsForTransitionConfig"],[167,226,159,205],[167,227,159,206,"presentation"],[167,239,159,218],[167,244,159,223],[167,262,159,241],[167,265,159,244,"ModalFadeTransition"],[167,303,159,263],[167,306,159,266,"DefaultTransition"],[167,342,159,283],[168,8,160,6],[168,14,160,12],[169,10,161,8,"gestureEnabled"],[169,24,161,22],[169,27,161,25,"Platform"],[169,44,161,33],[169,45,161,34,"OS"],[169,47,161,36],[169,52,161,41],[169,57,161,46],[169,61,161,50,"isAnimationEnabled"],[169,79,161,68],[170,10,162,8,"gestureDirection"],[170,26,162,24],[170,29,162,27,"transitionPreset"],[170,45,162,43],[170,46,162,44,"gestureDirection"],[170,62,162,60],[171,10,163,8,"transitionSpec"],[171,24,163,22],[171,27,163,25,"transitionPreset"],[171,43,163,41],[171,44,163,42,"transitionSpec"],[171,58,163,56],[172,10,164,8,"cardStyleInterpolator"],[172,31,164,29],[172,34,164,32,"isAnimationEnabled"],[172,52,164,50],[172,55,164,53,"transitionPreset"],[172,71,164,69],[172,72,164,70,"cardStyleInterpolator"],[172,93,164,91],[172,96,164,94,"forNoAnimationCard"],[172,134,164,112],[173,10,165,8,"headerStyleInterpolator"],[173,33,165,31],[173,36,165,34,"transitionPreset"],[173,52,165,50],[173,53,165,51,"headerStyleInterpolator"],[173,76,165,74],[174,10,166,8,"cardOverlayEnabled"],[174,28,166,26],[174,31,166,29,"Platform"],[174,48,166,37],[174,49,166,38,"OS"],[174,51,166,40],[174,56,166,45],[174,61,166,50],[174,65,166,54,"optionsForTransitionConfig"],[174,91,166,80],[174,92,166,81,"presentation"],[174,104,166,93],[174,109,166,98],[174,127,166,116],[174,131,166,120,"getIsModalPresentation"],[174,153,166,142],[174,154,166,143,"cardStyleInterpolator"],[174,175,166,164],[175,8,167,6],[175,9,167,7],[175,12,167,10,"optionsForTransitionConfig"],[175,38,167,36],[176,8,168,6],[176,14,168,12,"headerMode"],[176,24,168,22],[176,27,168,25,"descriptor"],[176,37,168,35],[176,38,168,36,"options"],[176,45,168,43],[176,46,168,44,"headerMode"],[176,56,168,54],[176,61,168,59],[176,63,168,61,"optionsForTransitionConfig"],[176,89,168,87],[176,90,168,88,"presentation"],[176,102,168,100],[176,107,168,105],[176,114,168,112],[176,118,168,116,"optionsForTransitionConfig"],[176,144,168,142],[176,145,168,143,"presentation"],[176,157,168,155],[176,162,168,160],[176,180,168,178],[176,184,168,182,"nextOptions"],[176,195,168,193],[176,197,168,195,"presentation"],[176,209,168,207],[176,214,168,212],[176,221,168,219],[176,225,168,223,"nextOptions"],[176,236,168,234],[176,238,168,236,"presentation"],[176,250,168,248],[176,255,168,253],[176,273,168,271],[176,277,168,275,"getIsModalPresentation"],[176,299,168,297],[176,300,168,298,"cardStyleInterpolator"],[176,321,168,319],[176,322,168,320],[176,323,168,321],[176,327,168,325,"Platform"],[176,344,168,333],[176,345,168,334,"OS"],[176,347,168,336],[176,352,168,341],[176,357,168,346],[176,361,168,350,"descriptor"],[176,371,168,360],[176,372,168,361,"options"],[176,379,168,368],[176,380,168,369,"header"],[176,386,168,375],[176,391,168,380,"undefined"],[176,400,168,389],[176,403,168,392],[176,410,168,399],[176,413,168,402],[176,421,168,410],[176,422,168,411],[177,8,169,6],[177,14,169,12,"isRTL"],[177,19,169,17],[177,22,169,20,"props"],[177,27,169,25],[177,28,169,26,"direction"],[177,37,169,35],[177,42,169,40],[177,47,169,45],[178,8,170,6],[178,14,170,12,"scene"],[178,19,170,17],[178,22,170,20],[179,10,171,8,"route"],[179,15,171,13],[180,10,172,8,"descriptor"],[180,20,172,18],[180,22,172,18,"Object"],[180,28,172,18],[180,29,172,18,"assign"],[180,35,172,18],[180,40,173,13,"descriptor"],[180,50,173,23],[181,12,174,10,"options"],[181,19,174,17],[181,21,174,17,"Object"],[181,27,174,17],[181,28,174,17,"assign"],[181,34,174,17],[181,39,175,15,"descriptor"],[181,49,175,25],[181,50,175,26,"options"],[181,57,175,33],[182,14,176,12,"animation"],[182,23,176,21],[183,14,177,12,"cardOverlayEnabled"],[183,32,177,30],[184,14,178,12,"cardStyleInterpolator"],[184,35,178,33],[185,14,179,12,"gestureDirection"],[185,30,179,28],[186,14,180,12,"gestureEnabled"],[186,28,180,26],[187,14,181,12,"headerStyleInterpolator"],[187,37,181,35],[188,14,182,12,"transitionSpec"],[188,28,182,26],[189,14,183,12,"headerMode"],[190,12,183,22],[191,10,184,11],[191,12,185,9],[192,10,186,8,"progress"],[192,18,186,16],[192,20,186,18],[193,12,187,10,"current"],[193,19,187,17],[193,21,187,19,"getProgressFromGesture"],[193,43,187,41],[193,44,187,42,"currentGesture"],[193,58,187,56],[193,60,187,58,"state"],[193,65,187,63],[193,66,187,64,"layout"],[193,72,187,70],[193,74,187,72,"descriptor"],[193,84,187,82],[193,85,187,83,"options"],[193,92,187,90],[193,94,187,92,"isRTL"],[193,99,187,97],[193,100,187,98],[194,12,188,10,"next"],[194,16,188,14],[194,18,188,16,"nextGesture"],[194,29,188,27],[194,33,188,31,"nextOptions"],[194,44,188,42],[194,46,188,44,"presentation"],[194,58,188,56],[194,63,188,61],[194,81,188,79],[194,84,188,82,"getProgressFromGesture"],[194,106,188,104],[194,107,188,105,"nextGesture"],[194,118,188,116],[194,120,188,118,"state"],[194,125,188,123],[194,126,188,124,"layout"],[194,132,188,130],[194,134,188,132,"nextOptions"],[194,145,188,143],[194,147,188,145,"isRTL"],[194,152,188,150],[194,153,188,151],[194,156,188,154,"undefined"],[194,165,188,163],[195,12,189,10,"previous"],[195,20,189,18],[195,22,189,20,"previousGesture"],[195,37,189,35],[195,40,189,38,"getProgressFromGesture"],[195,62,189,60],[195,63,189,61,"previousGesture"],[195,78,189,76],[195,80,189,78,"state"],[195,85,189,83],[195,86,189,84,"layout"],[195,92,189,90],[195,94,189,92,"previousOptions"],[195,109,189,107],[195,111,189,109,"isRTL"],[195,116,189,114],[195,117,189,115],[195,120,189,118,"undefined"],[196,10,190,8],[196,11,190,9],[197,10,191,8,"__memo"],[197,16,191,14],[197,18,191,16],[197,19,191,17,"state"],[197,24,191,22],[197,25,191,23,"layout"],[197,31,191,29],[197,33,191,31,"descriptor"],[197,43,191,41],[197,45,191,43,"nextOptions"],[197,56,191,54],[197,58,191,56,"previousOptions"],[197,73,191,71],[197,75,191,73,"currentGesture"],[197,89,191,87],[197,91,191,89,"nextGesture"],[197,102,191,100],[197,104,191,102,"previousGesture"],[197,119,191,117],[198,8,192,6],[198,9,192,7],[199,8,193,6],[199,12,193,10,"oldScene"],[199,20,193,18],[199,24,193,22,"scene"],[199,29,193,27],[199,30,193,28,"__memo"],[199,36,193,34],[199,37,193,35,"every"],[199,42,193,40],[199,43,193,41],[199,44,193,42,"it"],[199,46,193,44],[199,48,193,46,"i"],[199,49,193,47],[199,54,193,52],[200,10,194,8],[201,10,195,8],[201,17,195,15,"oldScene"],[201,25,195,23],[201,26,195,24,"__memo"],[201,32,195,30],[201,33,195,31,"i"],[201,34,195,32],[201,35,195,33],[201,40,195,38,"it"],[201,42,195,40],[202,8,196,6],[202,9,196,7],[202,10,196,8],[202,12,196,10],[203,10,197,8],[203,17,197,15,"oldScene"],[203,25,197,23],[204,8,198,6],[205,8,199,6],[205,15,199,13,"scene"],[205,20,199,18],[206,6,200,4],[206,7,200,5],[206,8,200,6],[207,6,201,4],[207,13,201,11],[208,8,202,6,"routes"],[208,14,202,12],[208,16,202,14,"props"],[208,21,202,19],[208,22,202,20,"routes"],[208,28,202,26],[209,8,203,6,"scenes"],[209,14,203,12],[210,8,204,6,"gestures"],[210,16,204,14],[211,8,205,6,"descriptors"],[211,19,205,17],[211,21,205,19,"props"],[211,26,205,24],[211,27,205,25,"descriptors"],[211,38,205,36],[212,8,206,6,"headerHeights"],[212,21,206,19],[212,23,206,21,"getHeaderHeights"],[212,39,206,37],[212,40,206,38,"scenes"],[212,46,206,44],[212,48,206,46,"props"],[212,53,206,51],[212,54,206,52,"insets"],[212,60,206,58],[212,62,206,60,"props"],[212,67,206,65],[212,68,206,66,"isParentHeaderShown"],[212,87,206,85],[212,89,206,87,"props"],[212,94,206,92],[212,95,206,93,"isParentModal"],[212,108,206,106],[212,110,206,108,"state"],[212,115,206,113],[212,116,206,114,"layout"],[212,122,206,120],[212,124,206,122,"state"],[212,129,206,127],[212,130,206,128,"headerHeights"],[212,143,206,141],[213,6,207,4],[213,7,207,5],[214,4,208,2],[215,4,209,2,"constructor"],[215,15,209,13,"constructor"],[215,16,209,14,"props"],[215,21,209,19],[215,23,209,21],[216,6,210,4],[216,11,210,9],[216,12,210,10,"props"],[216,17,210,15],[216,18,210,16],[217,6,211,4],[217,10,211,8],[217,11,211,9,"state"],[217,16,211,14],[217,19,211,17],[218,8,212,6,"routes"],[218,14,212,12],[218,16,212,14],[218,18,212,16],[219,8,213,6,"scenes"],[219,14,213,12],[219,16,213,14],[219,18,213,16],[220,8,214,6,"gestures"],[220,16,214,14],[220,18,214,16],[220,19,214,17],[220,20,214,18],[221,8,215,6,"layout"],[221,14,215,12],[221,16,215,14,"SafeAreaProviderCompat"],[221,48,215,36],[221,49,215,37,"initialMetrics"],[221,63,215,51],[221,64,215,52,"frame"],[221,69,215,57],[222,8,216,6,"descriptors"],[222,19,216,17],[222,21,216,19],[222,25,216,23],[222,26,216,24,"props"],[222,31,216,29],[222,32,216,30,"descriptors"],[222,43,216,41],[223,8,217,6],[224,8,218,6],[225,8,219,6],[226,8,220,6],[227,8,221,6],[228,8,222,6,"headerHeights"],[228,21,222,19],[228,23,222,21],[228,24,222,22],[229,6,223,4],[229,7,223,5],[230,4,224,2],[231,4,225,2,"handleLayout"],[231,16,225,14],[231,19,225,17,"e"],[231,20,225,18],[231,24,225,22],[232,6,226,4],[232,12,226,10],[233,8,227,6,"height"],[233,14,227,12],[234,8,228,6,"width"],[235,6,229,4],[235,7,229,5],[235,10,229,8,"e"],[235,11,229,9],[235,12,229,10,"nativeEvent"],[235,23,229,21],[235,24,229,22,"layout"],[235,30,229,28],[236,6,230,4],[236,12,230,10,"layout"],[236,18,230,16],[236,21,230,19],[237,8,231,6,"width"],[237,13,231,11],[238,8,232,6,"height"],[239,6,233,4],[239,7,233,5],[240,6,234,4],[240,10,234,8],[240,11,234,9,"setState"],[240,19,234,17],[240,20,234,18],[240,21,234,19,"state"],[240,26,234,24],[240,28,234,26,"props"],[240,33,234,31],[240,38,234,36],[241,8,235,6],[241,12,235,10,"height"],[241,18,235,16],[241,23,235,21,"state"],[241,28,235,26],[241,29,235,27,"layout"],[241,35,235,33],[241,36,235,34,"height"],[241,42,235,40],[241,46,235,44,"width"],[241,51,235,49],[241,56,235,54,"state"],[241,61,235,59],[241,62,235,60,"layout"],[241,68,235,66],[241,69,235,67,"width"],[241,74,235,72],[241,76,235,74],[242,10,236,8],[242,17,236,15],[242,21,236,19],[243,8,237,6],[244,8,238,6],[244,15,238,13],[245,10,239,8,"layout"],[245,16,239,14],[246,10,240,8,"headerHeights"],[246,23,240,21],[246,25,240,23,"getHeaderHeights"],[246,41,240,39],[246,42,240,40,"state"],[246,47,240,45],[246,48,240,46,"scenes"],[246,54,240,52],[246,56,240,54,"props"],[246,61,240,59],[246,62,240,60,"insets"],[246,68,240,66],[246,70,240,68,"props"],[246,75,240,73],[246,76,240,74,"isParentHeaderShown"],[246,95,240,93],[246,97,240,95,"props"],[246,102,240,100],[246,103,240,101,"isParentModal"],[246,116,240,114],[246,118,240,116,"layout"],[246,124,240,122],[246,126,240,124,"state"],[246,131,240,129],[246,132,240,130,"headerHeights"],[246,145,240,143],[247,8,241,6],[247,9,241,7],[248,6,242,4],[248,7,242,5],[248,8,242,6],[249,4,243,2],[249,5,243,3],[250,4,244,2,"handleHeaderLayout"],[250,22,244,20],[250,25,244,23,"handleHeaderLayout"],[250,26,244,24],[251,6,245,4,"route"],[251,11,245,9],[252,6,246,4,"height"],[253,4,247,2],[253,5,247,3],[253,10,247,8],[254,6,248,4],[254,10,248,8],[254,11,248,9,"setState"],[254,19,248,17],[254,20,248,18],[254,21,248,19],[255,8,249,6,"headerHeights"],[256,6,250,4],[256,7,250,5],[256,12,250,10],[257,8,251,6],[257,14,251,12,"previousHeight"],[257,28,251,26],[257,31,251,29,"headerHeights"],[257,44,251,42],[257,45,251,43,"route"],[257,50,251,48],[257,51,251,49,"key"],[257,54,251,52],[257,55,251,53],[258,8,252,6],[258,12,252,10,"previousHeight"],[258,26,252,24],[258,31,252,29,"height"],[258,37,252,35],[258,39,252,37],[259,10,253,8],[259,17,253,15],[259,21,253,19],[260,8,254,6],[261,8,255,6],[261,15,255,13],[262,10,256,8,"headerHeights"],[262,23,256,21],[262,25,256,21,"Object"],[262,31,256,21],[262,32,256,21,"assign"],[262,38,256,21],[262,43,257,13,"headerHeights"],[262,56,257,26],[263,12,258,10],[263,13,258,11,"route"],[263,18,258,16],[263,19,258,17,"key"],[263,22,258,20],[263,25,258,23,"height"],[264,10,258,29],[265,8,260,6],[265,9,260,7],[266,6,261,4],[266,7,261,5],[266,8,261,6],[267,4,262,2],[267,5,262,3],[268,4,263,2,"getFocusedRoute"],[268,19,263,17],[268,22,263,20,"getFocusedRoute"],[268,23,263,20],[268,28,263,26],[269,6,264,4],[269,12,264,10],[270,8,265,6,"state"],[271,6,266,4],[271,7,266,5],[271,10,266,8],[271,14,266,12],[271,15,266,13,"props"],[271,20,266,18],[272,6,267,4],[272,13,267,11,"state"],[272,18,267,16],[272,19,267,17,"routes"],[272,25,267,23],[272,26,267,24,"state"],[272,31,267,29],[272,32,267,30,"index"],[272,37,267,35],[272,38,267,36],[273,4,268,2],[273,5,268,3],[274,4,269,2,"getPreviousScene"],[274,20,269,18],[274,23,269,21,"getPreviousScene"],[274,24,269,22],[275,6,270,4,"route"],[276,4,271,2],[276,5,271,3],[276,10,271,8],[277,6,272,4],[277,12,272,10],[278,8,273,6,"getPreviousRoute"],[279,6,274,4],[279,7,274,5],[279,10,274,8],[279,14,274,12],[279,15,274,13,"props"],[279,20,274,18],[280,6,275,4],[280,12,275,10],[281,8,276,6,"scenes"],[282,6,277,4],[282,7,277,5],[282,10,277,8],[282,14,277,12],[282,15,277,13,"state"],[282,20,277,18],[283,6,278,4],[283,12,278,10,"previousRoute"],[283,25,278,23],[283,28,278,26,"getPreviousRoute"],[283,44,278,42],[283,45,278,43],[284,8,279,6,"route"],[285,6,280,4],[285,7,280,5],[285,8,280,6],[286,6,281,4],[286,10,281,8,"previousRoute"],[286,23,281,21],[286,25,281,23],[287,8,282,6],[287,14,282,12,"previousScene"],[287,27,282,25],[287,30,282,28,"scenes"],[287,36,282,34],[287,37,282,35,"find"],[287,41,282,39],[287,42,282,40,"scene"],[287,47,282,45],[287,51,282,49,"scene"],[287,56,282,54],[287,57,282,55,"descriptor"],[287,67,282,65],[287,68,282,66,"route"],[287,73,282,71],[287,74,282,72,"key"],[287,77,282,75],[287,82,282,80,"previousRoute"],[287,95,282,93],[287,96,282,94,"key"],[287,99,282,97],[287,100,282,98],[288,8,283,6],[288,15,283,13,"previousScene"],[288,28,283,26],[289,6,284,4],[290,6,285,4],[290,13,285,11,"undefined"],[290,22,285,20],[291,4,286,2],[291,5,286,3],[292,4,287,2,"render"],[292,10,287,8,"render"],[292,11,287,8],[292,13,287,11],[293,6,288,4],[293,12,288,10],[294,8,289,6,"insets"],[294,14,289,12],[295,8,290,6,"state"],[295,13,290,11],[296,8,291,6,"routes"],[296,14,291,12],[297,8,292,6,"openingRouteKeys"],[297,24,292,22],[298,8,293,6,"closingRouteKeys"],[298,24,293,22],[299,8,294,6,"onOpenRoute"],[299,19,294,17],[300,8,295,6,"onCloseRoute"],[300,20,295,18],[301,8,296,6,"renderHeader"],[301,20,296,18],[302,8,297,6,"isParentHeaderShown"],[302,27,297,25],[303,8,298,6,"isParentModal"],[303,21,298,19],[304,8,299,6,"onTransitionStart"],[304,25,299,23],[305,8,300,6,"onTransitionEnd"],[305,23,300,21],[306,8,301,6,"onGestureStart"],[306,22,301,20],[307,8,302,6,"onGestureEnd"],[307,20,302,18],[308,8,303,6,"onGestureCancel"],[308,23,303,21],[309,8,304,6,"detachInactiveScreens"],[309,29,304,27],[309,32,304,30,"Platform"],[309,49,304,38],[309,50,304,39,"OS"],[309,52,304,41],[309,57,304,46],[309,62,304,51],[309,66,304,55,"Platform"],[309,83,304,63],[309,84,304,64,"OS"],[309,86,304,66],[309,91,304,71],[309,100,304,80],[309,104,304,84,"Platform"],[309,121,304,92],[309,122,304,93,"OS"],[309,124,304,95],[309,129,304,100],[310,6,305,4],[310,7,305,5],[310,10,305,8],[310,14,305,12],[310,15,305,13,"props"],[310,20,305,18],[311,6,306,4],[311,12,306,10],[312,8,307,6,"scenes"],[312,14,307,12],[313,8,308,6,"layout"],[313,14,308,12],[314,8,309,6,"gestures"],[314,16,309,14],[315,8,310,6,"headerHeights"],[316,6,311,4],[316,7,311,5],[316,10,311,8],[316,14,311,12],[316,15,311,13,"state"],[316,20,311,18],[317,6,312,4],[317,12,312,10,"focusedRoute"],[317,24,312,22],[317,27,312,25,"state"],[317,32,312,30],[317,33,312,31,"routes"],[317,39,312,37],[317,40,312,38,"state"],[317,45,312,43],[317,46,312,44,"index"],[317,51,312,49],[317,52,312,50],[318,6,313,4],[318,12,313,10,"focusedHeaderHeight"],[318,31,313,29],[318,34,313,32,"headerHeights"],[318,47,313,45],[318,48,313,46,"focusedRoute"],[318,60,313,58],[318,61,313,59,"key"],[318,64,313,62],[318,65,313,63],[319,6,314,4],[319,12,314,10,"isFloatHeaderAbsolute"],[319,33,314,31],[319,36,314,34],[319,40,314,38],[319,41,314,39,"state"],[319,46,314,44],[319,47,314,45,"scenes"],[319,53,314,51],[319,54,314,52,"slice"],[319,59,314,57],[319,60,314,58],[319,61,314,59],[319,62,314,60],[319,63,314,61],[319,64,314,62,"some"],[319,68,314,66],[319,69,314,67,"scene"],[319,74,314,72],[319,78,314,76],[320,8,315,6],[320,14,315,12,"options"],[320,21,315,19],[320,24,315,22,"scene"],[320,29,315,27],[320,30,315,28,"descriptor"],[320,40,315,38],[320,41,315,39,"options"],[320,48,315,46],[320,52,315,50],[320,53,315,51],[320,54,315,52],[321,8,316,6],[321,14,316,12],[322,10,317,8,"headerMode"],[322,20,317,18],[323,10,318,8,"headerTransparent"],[323,27,318,25],[324,10,319,8,"headerShown"],[324,21,319,19],[324,24,319,22],[325,8,320,6],[325,9,320,7],[325,12,320,10,"options"],[325,19,320,17],[326,8,321,6],[326,12,321,10,"headerTransparent"],[326,29,321,27],[326,33,321,31,"headerShown"],[326,44,321,42],[326,49,321,47],[326,54,321,52],[326,58,321,56,"headerMode"],[326,68,321,66],[326,73,321,71],[326,81,321,79],[326,83,321,81],[327,10,322,8],[327,17,322,15],[327,21,322,19],[328,8,323,6],[329,8,324,6],[329,15,324,13],[329,20,324,18],[330,6,325,4],[330,7,325,5],[330,8,325,6],[331,6,326,4],[331,10,326,8,"activeScreensLimit"],[331,28,326,26],[331,31,326,29],[331,32,326,30],[332,6,327,4],[332,11,327,9],[332,15,327,13,"i"],[332,16,327,14],[332,19,327,17,"scenes"],[332,25,327,23],[332,26,327,24,"length"],[332,32,327,30],[332,35,327,33],[332,36,327,34],[332,38,327,36,"i"],[332,39,327,37],[332,43,327,41],[332,44,327,42],[332,46,327,44,"i"],[332,47,327,45],[332,49,327,47],[332,51,327,49],[333,8,328,6],[333,14,328,12],[334,10,329,8,"options"],[335,8,330,6],[335,9,330,7],[335,12,330,10,"scenes"],[335,18,330,16],[335,19,330,17,"i"],[335,20,330,18],[335,21,330,19],[335,22,330,20,"descriptor"],[335,32,330,30],[336,8,331,6],[336,14,331,12],[337,10,332,8],[338,10,333,8,"detachPreviousScreen"],[338,30,333,28],[338,33,333,31,"options"],[338,40,333,38],[338,41,333,39,"presentation"],[338,53,333,51],[338,58,333,56],[338,76,333,74],[338,79,333,77],[338,84,333,82],[338,87,333,85,"getIsModalPresentation"],[338,109,333,107],[338,110,333,108,"options"],[338,117,333,115],[338,118,333,116,"cardStyleInterpolator"],[338,139,333,137],[338,140,333,138],[338,143,333,141,"i"],[338,144,333,142],[338,149,333,147],[338,153,333,147,"findLastIndex"],[338,181,333,160],[338,183,333,161,"scenes"],[338,189,333,167],[338,191,333,169,"scene"],[338,196,333,174],[338,200,333,178],[339,12,334,10],[339,18,334,16],[340,14,335,12,"cardStyleInterpolator"],[341,12,336,10],[341,13,336,11],[341,16,336,14,"scene"],[341,21,336,19],[341,22,336,20,"descriptor"],[341,32,336,30],[341,33,336,31,"options"],[341,40,336,38],[342,12,337,10],[342,19,337,17,"cardStyleInterpolator"],[342,40,337,38],[342,45,337,43,"forModalPresentationIOS"],[342,92,337,66],[342,96,337,70,"cardStyleInterpolator"],[342,117,337,91],[342,119,337,93,"name"],[342,123,337,97],[342,128,337,102],[342,153,337,127],[343,10,338,8],[343,11,338,9],[343,12,338,10],[343,15,338,13],[344,8,339,6],[344,9,339,7],[344,12,339,10,"options"],[344,19,339,17],[345,8,340,6],[345,12,340,10,"detachPreviousScreen"],[345,32,340,30],[345,37,340,35],[345,42,340,40],[345,44,340,42],[346,10,341,8,"activeScreensLimit"],[346,28,341,26],[346,30,341,28],[347,8,342,6],[347,9,342,7],[347,15,342,13],[348,10,343,8],[349,10,344,8],[350,10,345,8],[351,10,346,8],[351,14,346,12,"i"],[351,15,346,13],[351,19,346,17,"scenes"],[351,25,346,23],[351,26,346,24,"length"],[351,32,346,30],[351,35,346,33],[351,36,346,34],[351,38,346,36],[352,12,347,10],[353,10,348,8],[354,8,349,6],[355,6,350,4],[356,6,351,4],[356,12,351,10,"floatingHeader"],[356,26,351,24],[356,29,351,27],[356,42,351,40],[356,46,351,40,"_jsx"],[356,61,351,44],[356,63,351,45,"React"],[356,68,351,50],[356,69,351,51,"Fragment"],[356,77,351,59],[356,79,351,61],[357,8,352,6,"children"],[357,16,352,14],[357,18,352,16,"renderHeader"],[357,30,352,28],[357,31,352,29],[358,10,353,8,"mode"],[358,14,353,12],[358,16,353,14],[358,23,353,21],[359,10,354,8,"layout"],[359,16,354,14],[360,10,355,8,"scenes"],[360,16,355,14],[361,10,356,8,"getPreviousScene"],[361,26,356,24],[361,28,356,26],[361,32,356,30],[361,33,356,31,"getPreviousScene"],[361,49,356,47],[362,10,357,8,"getFocusedRoute"],[362,25,357,23],[362,27,357,25],[362,31,357,29],[362,32,357,30,"getFocusedRoute"],[362,47,357,45],[363,10,358,8,"onContentHeightChange"],[363,31,358,29],[363,33,358,31],[363,37,358,35],[363,38,358,36,"handleHeaderLayout"],[363,56,358,54],[364,10,359,8,"style"],[364,15,359,13],[364,17,359,15],[364,18,359,16,"styles"],[364,24,359,22],[364,25,359,23,"floating"],[364,33,359,31],[364,35,359,33,"isFloatHeaderAbsolute"],[364,56,359,54],[364,60,359,58],[365,10,360,8],[366,10,361,8],[367,12,362,10,"height"],[367,18,362,16],[367,20,362,18,"focusedHeaderHeight"],[368,10,363,8],[368,11,363,9],[368,13,363,11,"styles"],[368,19,363,17],[368,20,363,18,"absolute"],[368,28,363,26],[368,29,363,27],[369,8,364,6],[369,9,364,7],[370,6,365,4],[370,7,365,5],[370,9,365,7],[370,17,365,15],[370,18,365,16],[371,6,366,4],[371,13,366,11],[371,26,366,24],[371,30,366,24,"_jsxs"],[371,46,366,29],[371,48,366,30,"View"],[371,61,366,34],[371,63,366,36],[372,8,367,6,"style"],[372,13,367,11],[372,15,367,13,"styles"],[372,21,367,19],[372,22,367,20,"container"],[372,31,367,29],[373,8,368,6,"children"],[373,16,368,14],[373,18,368,16],[373,19,368,17,"isFloatHeaderAbsolute"],[373,40,368,38],[373,43,368,41],[373,47,368,45],[373,50,368,48,"floatingHeader"],[373,64,368,62],[373,66,368,64],[373,79,368,77],[373,83,368,77,"_jsx"],[373,98,368,81],[373,100,368,82,"MaybeScreenContainer"],[373,129,368,102],[373,131,368,104],[374,10,369,8,"enabled"],[374,17,369,15],[374,19,369,17,"detachInactiveScreens"],[374,40,369,38],[375,10,370,8,"style"],[375,15,370,13],[375,17,370,15,"styles"],[375,23,370,21],[375,24,370,22,"container"],[375,33,370,31],[376,10,371,8,"onLayout"],[376,18,371,16],[376,20,371,18],[376,24,371,22],[376,25,371,23,"handleLayout"],[376,37,371,35],[377,10,372,8,"children"],[377,18,372,16],[377,20,372,18],[377,21,372,19],[377,24,372,22,"routes"],[377,30,372,28],[377,32,372,30],[377,35,372,33,"state"],[377,40,372,38],[377,41,372,39,"preloadedRoutes"],[377,56,372,54],[377,57,372,55],[377,58,372,56,"map"],[377,61,372,59],[377,62,372,60],[377,63,372,61,"route"],[377,68,372,66],[377,70,372,68,"index"],[377,75,372,73],[377,80,372,78],[378,12,373,10],[378,18,373,16,"focused"],[378,25,373,23],[378,28,373,26,"focusedRoute"],[378,40,373,38],[378,41,373,39,"key"],[378,44,373,42],[378,49,373,47,"route"],[378,54,373,52],[378,55,373,53,"key"],[378,58,373,56],[379,12,374,10],[379,18,374,16,"gesture"],[379,25,374,23],[379,28,374,26,"gestures"],[379,36,374,34],[379,37,374,35,"route"],[379,42,374,40],[379,43,374,41,"key"],[379,46,374,44],[379,47,374,45],[380,12,375,10],[380,18,375,16,"scene"],[380,23,375,21],[380,26,375,24,"scenes"],[380,32,375,30],[380,33,375,31,"index"],[380,38,375,36],[380,39,375,37],[381,12,376,10],[382,12,377,10],[383,12,378,10],[384,12,379,10],[385,12,380,10],[385,18,380,16,"isPreloaded"],[385,29,380,27],[385,32,380,30,"state"],[385,37,380,35],[385,38,380,36,"preloadedRoutes"],[385,53,380,51],[385,54,380,52,"includes"],[385,62,380,60],[385,63,380,61,"route"],[385,68,380,66],[385,69,380,67],[385,73,380,71],[385,74,380,72,"routes"],[385,80,380,78],[385,81,380,79,"includes"],[385,89,380,87],[385,90,380,88,"route"],[385,95,380,93],[385,96,380,94],[386,12,381,10],[386,16,381,14,"state"],[386,21,381,19],[386,22,381,20,"preloadedRoutes"],[386,37,381,35],[386,38,381,36,"includes"],[386,46,381,44],[386,47,381,45,"route"],[386,52,381,50],[386,53,381,51],[386,57,381,55,"routes"],[386,63,381,61],[386,64,381,62,"includes"],[386,72,381,70],[386,73,381,71,"route"],[386,78,381,76],[386,79,381,77],[386,83,381,81,"index"],[386,88,381,86],[386,92,381,90,"routes"],[386,98,381,96],[386,99,381,97,"length"],[386,105,381,103],[386,107,381,105],[387,14,382,12],[387,21,382,19],[387,25,382,23],[388,12,383,10],[390,12,385,10],[391,12,386,10],[392,12,387,10],[393,12,388,10],[394,12,389,10],[394,16,389,14,"isScreenActive"],[394,30,389,28],[394,33,389,31],[394,34,389,32],[395,12,390,10],[395,16,390,14,"index"],[395,21,390,19],[395,24,390,22,"routes"],[395,30,390,28],[395,31,390,29,"length"],[395,37,390,35],[395,40,390,38,"activeScreensLimit"],[395,58,390,56],[395,61,390,59],[395,62,390,60],[395,66,390,64,"isPreloaded"],[395,77,390,75],[395,79,390,77],[396,14,391,12],[397,14,392,12,"isScreenActive"],[397,28,392,26],[397,31,392,29,"STATE_INACTIVE"],[397,45,392,43],[398,12,393,10],[398,13,393,11],[398,19,393,17],[399,14,394,12],[399,20,394,18,"sceneForActivity"],[399,36,394,34],[399,39,394,37,"scenes"],[399,45,394,43],[399,46,394,44,"routes"],[399,52,394,50],[399,53,394,51,"length"],[399,59,394,57],[399,62,394,60],[399,63,394,61],[399,64,394,62],[400,14,395,12],[400,20,395,18,"outputValue"],[400,31,395,29],[400,34,395,32,"index"],[400,39,395,37],[400,44,395,42,"routes"],[400,50,395,48],[400,51,395,49,"length"],[400,57,395,55],[400,60,395,58],[400,61,395,59],[400,64,395,62,"STATE_ON_TOP"],[400,76,395,74],[400,77,395,75],[401,14,395,75],[401,16,396,14,"index"],[401,21,396,19],[401,25,396,23,"routes"],[401,31,396,29],[401,32,396,30,"length"],[401,38,396,36],[401,41,396,39,"activeScreensLimit"],[401,59,396,57],[401,62,396,60,"STATE_TRANSITIONING_OR_BELOW_TOP"],[401,94,396,92],[401,95,396,93],[402,14,396,93],[402,16,397,14,"STATE_INACTIVE"],[402,30,397,28],[402,31,397,29],[402,32,397,30],[403,14,398,12,"isScreenActive"],[403,28,398,26],[403,31,398,29,"sceneForActivity"],[403,47,398,45],[403,50,398,48,"sceneForActivity"],[403,66,398,64],[403,67,398,65,"progress"],[403,75,398,73],[403,76,398,74,"current"],[403,83,398,81],[403,84,398,82,"interpolate"],[403,95,398,93],[403,96,398,94],[404,16,399,14,"inputRange"],[404,26,399,24],[404,28,399,26],[404,29,399,27],[404,30,399,28],[404,32,399,30],[404,33,399,31],[404,36,399,34,"EPSILON"],[404,43,399,41],[404,45,399,43],[404,46,399,44],[404,47,399,45],[405,16,400,14,"outputRange"],[405,27,400,25],[405,29,400,27],[405,30,400,28],[405,31,400,29],[405,33,400,31],[405,34,400,32],[405,36,400,34,"outputValue"],[405,47,400,45],[405,48,400,46],[406,16,401,14,"extrapolate"],[406,27,401,25],[406,29,401,27],[407,14,402,12],[407,15,402,13],[407,16,402,14],[407,19,402,17,"STATE_TRANSITIONING_OR_BELOW_TOP"],[407,51,402,49],[408,12,403,10],[409,12,404,10],[409,18,404,16],[410,14,405,12,"headerShown"],[410,25,405,23],[410,28,405,26],[410,32,405,30],[411,14,406,12,"headerTransparent"],[411,31,406,29],[412,14,407,12,"freezeOnBlur"],[412,26,407,24],[413,14,408,12,"autoHideHomeIndicator"],[414,12,409,10],[414,13,409,11],[414,16,409,14,"scene"],[414,21,409,19],[414,22,409,20,"descriptor"],[414,32,409,30],[414,33,409,31,"options"],[414,40,409,38],[415,12,410,10],[415,18,410,16,"safeAreaInsetTop"],[415,34,410,32],[415,37,410,35,"insets"],[415,43,410,41],[415,44,410,42,"top"],[415,47,410,45],[416,12,411,10],[416,18,411,16,"safeAreaInsetRight"],[416,36,411,34],[416,39,411,37,"insets"],[416,45,411,43],[416,46,411,44,"right"],[416,51,411,49],[417,12,412,10],[417,18,412,16,"safeAreaInsetBottom"],[417,37,412,35],[417,40,412,38,"insets"],[417,46,412,44],[417,47,412,45,"bottom"],[417,53,412,51],[418,12,413,10],[418,18,413,16,"safeAreaInsetLeft"],[418,35,413,33],[418,38,413,36,"insets"],[418,44,413,42],[418,45,413,43,"left"],[418,49,413,47],[419,12,414,10],[419,18,414,16,"headerHeight"],[419,30,414,28],[419,33,414,31,"headerShown"],[419,44,414,42],[419,49,414,47],[419,54,414,52],[419,57,414,55,"headerHeights"],[419,70,414,68],[419,71,414,69,"route"],[419,76,414,74],[419,77,414,75,"key"],[419,80,414,78],[419,81,414,79],[419,84,414,82],[419,85,414,83],[421,12,416,10],[422,12,417,10],[422,18,417,16,"interpolationIndex"],[422,36,417,34],[422,39,417,37,"getInterpolationIndex"],[422,60,417,58],[422,61,417,59,"scenes"],[422,67,417,65],[422,69,417,67,"index"],[422,74,417,72],[422,75,417,73],[423,12,418,10],[423,18,418,16,"isModal"],[423,25,418,23],[423,28,418,26,"getIsModal"],[423,38,418,36],[423,39,418,37,"scene"],[423,44,418,42],[423,46,418,44,"interpolationIndex"],[423,64,418,62],[423,66,418,64,"isParentModal"],[423,79,418,77],[423,80,418,78],[424,12,419,10],[424,18,419,16,"isNextScreenTransparent"],[424,41,419,39],[424,44,419,42,"scenes"],[424,50,419,48],[424,51,419,49,"index"],[424,56,419,54],[424,59,419,57],[424,60,419,58],[424,61,419,59],[424,63,419,61,"descriptor"],[424,73,419,71],[424,74,419,72,"options"],[424,81,419,79],[424,82,419,80,"presentation"],[424,94,419,92],[424,99,419,97],[424,117,419,115],[425,12,420,10],[425,18,420,16,"detachCurrentScreen"],[425,37,420,35],[425,40,420,38,"scenes"],[425,46,420,44],[425,47,420,45,"index"],[425,52,420,50],[425,55,420,53],[425,56,420,54],[425,57,420,55],[425,59,420,57,"descriptor"],[425,69,420,67],[425,70,420,68,"options"],[425,77,420,75],[425,78,420,76,"detachPreviousScreen"],[425,98,420,96],[425,103,420,101],[425,108,420,106],[426,12,421,10],[426,19,421,17],[426,32,421,30],[426,36,421,30,"_jsx"],[426,51,421,34],[426,53,421,35,"MaybeScreen"],[426,73,421,46],[426,75,421,48],[427,14,422,12,"style"],[427,19,422,17],[427,21,422,19],[427,22,422,20,"StyleSheet"],[427,41,422,30],[427,42,422,31,"absoluteFill"],[427,54,422,43],[427,55,422,44],[428,14,423,12,"enabled"],[428,21,423,19],[428,23,423,21,"detachInactiveScreens"],[428,44,423,42],[429,14,424,12,"active"],[429,20,424,18],[429,22,424,20,"isScreenActive"],[429,36,424,34],[430,14,425,12,"freezeOnBlur"],[430,26,425,24],[430,28,425,26,"freezeOnBlur"],[430,40,425,38],[431,14,426,12,"shouldFreeze"],[431,26,426,24],[431,28,426,26,"isScreenActive"],[431,42,426,40],[431,47,426,45,"STATE_INACTIVE"],[431,61,426,59],[431,65,426,63],[431,66,426,64,"isPreloaded"],[431,77,426,75],[432,14,427,12,"homeIndicatorHidden"],[432,33,427,31],[432,35,427,33,"autoHideHomeIndicator"],[432,56,427,54],[433,14,428,12,"pointerEvents"],[433,27,428,25],[433,29,428,27],[433,39,428,37],[434,14,429,12,"children"],[434,22,429,20],[434,24,429,22],[434,37,429,35],[434,41,429,35,"_jsx"],[434,56,429,39],[434,58,429,40,"CardContainer"],[434,86,429,53],[434,88,429,55],[435,16,430,14,"index"],[435,21,430,19],[435,23,430,21,"index"],[435,28,430,26],[436,16,431,14,"interpolationIndex"],[436,34,431,32],[436,36,431,34,"interpolationIndex"],[436,54,431,52],[437,16,432,14,"modal"],[437,21,432,19],[437,23,432,21,"isModal"],[437,30,432,28],[438,16,433,14,"active"],[438,22,433,20],[438,24,433,22,"index"],[438,29,433,27],[438,34,433,32,"routes"],[438,40,433,38],[438,41,433,39,"length"],[438,47,433,45],[438,50,433,48],[438,51,433,49],[439,16,434,14,"focused"],[439,23,434,21],[439,25,434,23,"focused"],[439,32,434,30],[440,16,435,14,"opening"],[440,23,435,21],[440,25,435,23,"openingRouteKeys"],[440,41,435,39],[440,42,435,40,"includes"],[440,50,435,48],[440,51,435,49,"route"],[440,56,435,54],[440,57,435,55,"key"],[440,60,435,58],[440,61,435,59],[441,16,436,14,"closing"],[441,23,436,21],[441,25,436,23,"closingRouteKeys"],[441,41,436,39],[441,42,436,40,"includes"],[441,50,436,48],[441,51,436,49,"route"],[441,56,436,54],[441,57,436,55,"key"],[441,60,436,58],[441,61,436,59],[442,16,437,14,"layout"],[442,22,437,20],[442,24,437,22,"layout"],[442,30,437,28],[443,16,438,14,"gesture"],[443,23,438,21],[443,25,438,23,"gesture"],[443,32,438,30],[444,16,439,14,"scene"],[444,21,439,19],[444,23,439,21,"scene"],[444,28,439,26],[445,16,440,14,"safeAreaInsetTop"],[445,32,440,30],[445,34,440,32,"safeAreaInsetTop"],[445,50,440,48],[446,16,441,14,"safeAreaInsetRight"],[446,34,441,32],[446,36,441,34,"safeAreaInsetRight"],[446,54,441,52],[447,16,442,14,"safeAreaInsetBottom"],[447,35,442,33],[447,37,442,35,"safeAreaInsetBottom"],[447,56,442,54],[448,16,443,14,"safeAreaInsetLeft"],[448,33,443,31],[448,35,443,33,"safeAreaInsetLeft"],[448,52,443,50],[449,16,444,14,"onGestureStart"],[449,30,444,28],[449,32,444,30,"onGestureStart"],[449,46,444,44],[450,16,445,14,"onGestureCancel"],[450,31,445,29],[450,33,445,31,"onGestureCancel"],[450,48,445,46],[451,16,446,14,"onGestureEnd"],[451,28,446,26],[451,30,446,28,"onGestureEnd"],[451,42,446,40],[452,16,447,14,"headerHeight"],[452,28,447,26],[452,30,447,28,"headerHeight"],[452,42,447,40],[453,16,448,14,"isParentHeaderShown"],[453,35,448,33],[453,37,448,35,"isParentHeaderShown"],[453,56,448,54],[454,16,449,14,"onHeaderHeightChange"],[454,36,449,34],[454,38,449,36],[454,42,449,40],[454,43,449,41,"handleHeaderLayout"],[454,61,449,59],[455,16,450,14,"getPreviousScene"],[455,32,450,30],[455,34,450,32],[455,38,450,36],[455,39,450,37,"getPreviousScene"],[455,55,450,53],[456,16,451,14,"getFocusedRoute"],[456,31,451,29],[456,33,451,31],[456,37,451,35],[456,38,451,36,"getFocusedRoute"],[456,53,451,51],[457,16,452,14,"hasAbsoluteFloatHeader"],[457,38,452,36],[457,40,452,38,"isFloatHeaderAbsolute"],[457,61,452,59],[457,65,452,63],[457,66,452,64,"headerTransparent"],[457,83,452,81],[458,16,453,14,"renderHeader"],[458,28,453,26],[458,30,453,28,"renderHeader"],[458,42,453,40],[459,16,454,14,"onOpenRoute"],[459,27,454,25],[459,29,454,27,"onOpenRoute"],[459,40,454,38],[460,16,455,14,"onCloseRoute"],[460,28,455,26],[460,30,455,28,"onCloseRoute"],[460,42,455,40],[461,16,456,14,"onTransitionStart"],[461,33,456,31],[461,35,456,33,"onTransitionStart"],[461,52,456,50],[462,16,457,14,"onTransitionEnd"],[462,31,457,29],[462,33,457,31,"onTransitionEnd"],[462,48,457,46],[463,16,458,14,"isNextScreenTransparent"],[463,39,458,37],[463,41,458,39,"isNextScreenTransparent"],[463,64,458,62],[464,16,459,14,"detachCurrentScreen"],[464,35,459,33],[464,37,459,35,"detachCurrentScreen"],[464,56,459,54],[465,16,460,14,"preloaded"],[465,25,460,23],[465,27,460,25,"isPreloaded"],[466,14,461,12],[466,15,461,13],[467,12,462,10],[467,13,462,11],[467,15,462,13,"route"],[467,20,462,18],[467,21,462,19,"key"],[467,24,462,22],[467,25,462,23],[468,10,463,8],[468,11,463,9],[469,8,464,6],[469,9,464,7],[469,10,464,8],[469,12,464,10,"isFloatHeaderAbsolute"],[469,33,464,31],[469,36,464,34,"floatingHeader"],[469,50,464,48],[469,53,464,51],[469,57,464,55],[470,6,465,4],[470,7,465,5],[470,8,465,6],[471,4,466,2],[472,2,467,0],[473,2,467,1,"exports"],[473,9,467,1],[473,10,467,1,"CardStack"],[473,19,467,1],[473,22,467,1,"CardStack"],[473,31,467,1],[474,2,468,0],[474,8,468,6,"styles"],[474,14,468,12],[474,17,468,15,"StyleSheet"],[474,36,468,25],[474,37,468,26,"create"],[474,43,468,32],[474,44,468,33],[475,4,469,2,"container"],[475,13,469,11],[475,15,469,13],[476,6,470,4,"flex"],[476,10,470,8],[476,12,470,10],[477,4,471,2],[477,5,471,3],[478,4,472,2,"absolute"],[478,12,472,10],[478,14,472,12],[479,6,473,4,"position"],[479,14,473,12],[479,16,473,14],[479,26,473,24],[480,6,474,4,"top"],[480,9,474,7],[480,11,474,9],[480,12,474,10],[481,6,475,4,"start"],[481,11,475,9],[481,13,475,11],[481,14,475,12],[482,6,476,4,"end"],[482,9,476,7],[482,11,476,9],[483,4,477,2],[483,5,477,3],[484,4,478,2,"floating"],[484,12,478,10],[484,14,478,12],[485,6,479,4,"zIndex"],[485,12,479,10],[485,14,479,12],[486,4,480,2],[487,2,481,0],[487,3,481,1],[487,4,481,2],[488,0,481,3],[488,3]],"functionMap":{"names":["<global>","getInterpolationIndex","getIsModalPresentation","getIsModal","getHeaderHeights","scenes.reduce$argument_0","getDistanceFromOptions","getProgressFromGesture","getDefaultAnimation","getAnimationEnabled","CardStack","getDerivedStateFromProps","reduce$argument_0","map$argument_0","scene.__memo.every$argument_0","constructor","handleLayout","setState$argument_0","handleHeaderLayout","getFocusedRoute","getPreviousScene","scenes.find$argument_0","render","state.scenes.slice.some$argument_0","findLastIndex$argument_1"],"mappings":"AAA;8BCmC;CDe;+BEC;CFI;mBGC;CHU;yBIC;uBCC;GDW;CJC;+BMC;CNO;+BOC;CPiB;AQC;CRI;OSC;CTE;OUC;ECC;8ECI;KDO;yEEK;yCC4D;ODG;KFI;GDQ;EKC;GLe;iBMC;kBCS;KDQ;GNC;uBQC;kBDI;KCa;GRC;oBSC;GTK;qBUC;wCCa,yDD;GVI;EYC;mEC2B;KDW;yKEQ;SFK;4DTkC;SS2F;GZG;CVC"}},"type":"js/module"}]}